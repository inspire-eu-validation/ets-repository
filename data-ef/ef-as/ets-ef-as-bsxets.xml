<?xml version="1.0" encoding="utf-8"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EIDe2bf686d-a8bd-4cfd-b02b-dc902e910b37" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 https://resources.etf-validator.net/schema/v2/val/ignoreRef.xsd">
	<itemHash>bQ==</itemHash>
	<remoteResource>https://github.com/inspire-eu-validation/ets-repository/tree/master/data-ef/ef-as</remoteResource>
	<localPath>/auto</localPath>
	<label>Conformance class: Application Schema, Environmental Monitoring Facilities</label>
	<description><![CDATA[This test suite examines requirements associated with the application schema.<br/><br/>
Note that since both code-list-valued properties of this application schema may be extended without restrictions, there is no test case for code list values.<br/><br/>
<b>This is a draft version. It has limitations and is expected to contain errors.</b> Please report any issues or problems <a href="https://github.com/inspire-eu-validation/community/wiki/Your-feedback" target="_blank">in GitHub</a>.<br/><br/>
Known limitations are documented in the description of the applicable test case or test assertion. There is a general limitation in all assertions that extensions in additional application schemas are only supported, if the unqualified name of the feature type in the extension is the same as the name of the feature type in the INSPIRE application schema.<br/><br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ef/master/ef-as" target="_blank">Conformance Class 'Application schema, Environmental Monitoring Facilities'</a><br/><br/>
Pre-requisite conformance classes:
<ul><li><a href="http://inspire.ec.europa.eu/id/ats/data-ef/master/ef-gml" target="_blank">Conformance Class 'GML application schemas, Environmental Monitoring Facilities'</a></li></ul>]]></description>
	<reference>../../inspire-noggeo-bsxets.xq</reference>
	<version>0.1.0</version>
	<author>Consortium Bilbomatica, Guadaltel y Geograma</author>
	<creationDate>2020-09-14T10:00:00Z</creationDate>
	<lastEditor>Consortium Bilbomatica, Guadaltel y Geograma</lastEditor>
	<lastUpdateDate>2020-09-14T10:00:00Z</lastUpdateDate>
 	<tags>
		<tag ref="EIDbe54594f-cae7-4b22-aca7-54c74fdab1a7"/>
	</tags>
	<testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
	<translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
 	<ParameterList name="ETF Standard Parameters for XML test objects">
		<parameter name="files_to_test" required="true">
			<defaultValue>.*</defaultValue>
			<description ref="TR.filesToTest"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
		<parameter name="tests_to_execute" required="false">
			<defaultValue>.*</defaultValue>
			<description ref="TR.testsToExecute"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
	</ParameterList>
	<supportedTestObjectTypes>
		<testObjectType ref="EIDe1d4a306-7a78-4a3b-ae2d-cf5f0810853e"/>
	</supportedTestObjectTypes>
	<dependencies>
		<executableTestSuite ref="EID7f414964-eafa-499e-950b-b93d0c2d691b"/>
	</dependencies>	
	<testModules>
		<TestModule id="EID575ed9e4-0e78-4309-b800-d6ee8dd3ba4b">
			<label>IGNORE</label>
			<description>IGNORE</description>
			<parent ref="EIDe2bf686d-a8bd-4cfd-b02b-dc902e910b37"/>
			<testCases>
  				<TestCase id="EID9bf049f7-627d-475b-a1da-44ee7dce85e8">
					<label>Constraints</label>
					<description>Verify that the features provided in the dataset adhere to the constraints specified in the INSPIRE application schema.</description>
					<parent ref="EID575ed9e4-0e78-4309-b800-d6ee8dd3ba4b"/>
					<testSteps>
						<TestStep id="EID4ca60273-e4a3-4a06-acd0-46f9a0e5d554">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID9bf049f7-627d-475b-a1da-44ee7dce85e8"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID7a856198-d010-4b4f-a3be-cdc4ce474f7f">
									<label>ef-as.a.1: observation</label>
									<description><![CDATA[The following checks are performed for every feature in the dataset.<br/><br/>
Check that if observation(s) are attached to an EnvironmentalMonitoringFacility or an EnvironmentalMonitoringNetwork feature type this shall have an ObservingCapability attached to it. The ObservingCapability shall reference the same Domain, Phenomenon and ProcessUsed as the observation(s)<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ef/master/ef-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_EF_v3.0.pdf">INSPIRE Data Specification on Species Distribution, A.1.6</a>]]></description>
									<parent ref="EID4ca60273-e4a3-4a06-acd0-46f9a0e5d554"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features_selected := $features[self::ef:EnvironmentalMonitoringFacility | self::ef:EnvironmentalMonitoringNetwork]
let $messages :=
	for $feature in $features_selected

		return
		if (exists ($feature/ef:hasObservation) and not(exists($feature/ef:observingCapability))) then
			local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'Check that if observation(s) are attached to an EnvironmentalMonitoringFacility or an EnvironmentalMonitoringNetwork feature type this shall have an ObservingCapability attached to it', 'additionalInfo':''})
		else if (exists ($feature/ef:hasObservation) and (exists($feature/ef:observingCapability))) then
			local:addMessage('TR.manual.reviewConstraintObservation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id)})
		else ()
return

(if ($messages and $messages/@ref = ('TR.constraintViolation')) then 'FAILED' 
else if ($messages and $messages/@ref = ('TR.manual.reviewConstraintObservation')) then 'PASSED_MANUAL' 
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.manual.reviewConstraintObservation"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDe0afc1eb-3da8-4068-ad72-9ecea4d3421a">
									<label>ef-as.a.2: geometry</label>
									<description><![CDATA[The following checks are performed for every feature in the dataset.<br/><br/>
Check that the geometry and the representativePoint elements of the EnvironmentalMonitoringFacility feature type are not both empty.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ef/master/ef-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_EF_v3.0.pdf">INSPIRE Data Specification on Species Distribution, A.1.6</a>]]></description>
									<parent ref="EID4ca60273-e4a3-4a06-acd0-46f9a0e5d554"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features_selected := $features[self::ef:EnvironmentalMonitoringFacility]
let $messages :=
	for $feature in $features_selected

	let $representativeUrls := 
		for $x in $feature/ef:representativePoint/@xlink:href
			return $x

	let $representativeMap := local:check-resource-uris($representativeUrls, 30, true())
	let $representative_invalid_urls :=
		for $href in $representativeUrls
			let $url := string($href)
			let $validuri := map:get($representativeMap, $url)
			return
				if ($validuri = 'notHTTP' or starts-with($validuri, 'EXCEPTION') or $validuri = 'idNotFound' or matches($validuri,'^\d{3}$')) then $url
				else ()
				
	let $geometryUrls := 
		for $x in $feature/ef:geometry/@xlink:href
			return $x

	let $geometryMap := local:check-resource-uris($geometryUrls, 30, true())
	let $geometry_invalid_urls :=
		for $href in $geometryUrls
			let $url := string($href)
			let $validuri := map:get($geometryMap, $url)
			return
				if ($validuri = 'notHTTP' or starts-with($validuri, 'EXCEPTION') or $validuri = 'idNotFound' or matches($validuri,'^\d{3}$')) then $url
				else ()


	return
		if(count($feature/ef:geometry) > 1) then
			local:addMessage('TR.wrongMultiplicityEnvFacilities',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'ef:geometry', 'multiplicity': 1, 'count': count($feature/ef:geometry)}) 


		else if(count($feature/ef:geometry) = 0 and count($feature/ef:representativePoint) > 1) then
			local:addMessage('TR.wrongMultiplicityEnvFacilities',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'ef:representativePoint', 'multiplicity': 1, 'count': count($feature/ef:representativePoint)})


		else if (exists($feature/ef:geometry/@xlink:href) and count($geometry_invalid_urls) > 0) then
			local:addMessage('TR.brokenLinkEnvFacilities',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'Geometry', 'value': string-join($geometry_invalid_urls, ',')}) 


		else if (count($feature/ef:geometry) = 0 and exists($feature/ef:representativePoint) and count($representative_invalid_urls) > 0) then
			local:addMessage('TR.brokenLinkEnvFacilities',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'Representative Point', 'value': string-join($representative_invalid_urls, ',')}) 

		else if(not(has-children($feature/ef:geometry)) and not(exists($feature/ef:geometry/@xlink:href)) and not(has-children($feature/ef:representativePoint)) and not(exists($feature/ef:representativePoint/@xlink:href))) then
			local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'the geometry and the representativePoint elements of the EnvironmentalMonitoringFacility feature type are not both empty', 'additionalInfo':''})

		else if(not(has-children($feature/ef:geometry)) and not(exists($feature/ef:geometry/@xlink:href)) and not(exists($feature/ef:representativePoint))) then
			local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'the geometry and the representativePoint elements of the EnvironmentalMonitoringFacility feature type are not both empty', 'additionalInfo':''})
		else ()
return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.wrongMultiplicityEnvFacilities"/>
										<translationTemplate ref="TR.brokenLinkEnvFacilities"/>
										<translationTemplate ref="TR.constraintViolation"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>							
			</testCases>
		</TestModule>
	</testModules>
</ExecutableTestSuite>
