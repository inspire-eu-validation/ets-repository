<?xml version="1.0" encoding="utf-8"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EID8aaef94b-6a4d-47ab-a5d0-70ad5cb28b08" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 https://resources.etf-validator.net/schema/v2/val/ignoreRef.xsd">
	<itemHash>bQ==</itemHash>
	<remoteResource>http://github.com/inspire-eu-validation/ets-repository/tree/master/data-ad/ad-dc</remoteResource>
	<localPath>/auto</localPath>
	<label>Conformance class: Application schema, Addresses</label>
	<description><![CDATA[This test suite examines requirements associated with the application schema.<br/><br/>
Note that since both code-list-valued properties of this application schema may be extended without restrictions, there is no test case for code list values.<br/><br/>
<b>This is a draft version. It has limitations and is expected to contain errors.</b> Please report any issues or problems <a href="https://github.com/INSPIRE-MIF/helpdesk-validator/wiki/Your-feedback" target="_blank">in GitHub</a>.<br/><br/>
Known limitations are documented in the description of the applicable test case or test assertion. There is a general limitation in all assertions that extensions in additional application schemas are only supported, if the unqualified name of the feature type in the extension is the same as the name of the feature type in the INSPIRE application schema.<br/><br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as" target="_blank">Conformance Class 'Application schema, Addresses Simple'</a><br/><br/>
Pre-requisite conformance classes:
<ul><li><a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-gml" target="_blank">Conformance Class 'GML application schemas, Addresses'</a></li></ul>]]></description>
  <reference>../../inspire-noggeo-bsxets.xq</reference>
	<version>0.2.1</version>
	<author>PwC</author>
	<creationDate>2016-11-28T00:00:00Z</creationDate>
	<lastEditor>interactive instruments GmbH</lastEditor>
	<lastUpdateDate>2017-05-16T12:30:00Z</lastUpdateDate>
	<tags>
		<tag ref="EIDb9a5d0b9-db01-4799-ae2a-c321bfa018d9"/>
	</tags>
	<testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
	<translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
	<ParameterList name="ETF Standard Parameters for XML test objects">
		<parameter name="files_to_test" required="true">
			<defaultValue>.*</defaultValue>
			<description ref="TR.filesToTest"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
		<parameter name="tests_to_execute" required="false">
			<defaultValue>.*</defaultValue>
			<description ref="TR.testsToExecute"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
	</ParameterList>
	<supportedTestObjectTypes>
		<testObjectType ref="EIDe1d4a306-7a78-4a3b-ae2d-cf5f0810853e"/>
	</supportedTestObjectTypes>
	<dependencies>
		<executableTestSuite ref="EIDe6800faf-2e56-47df-831a-75a96b35f33d"/>
	</dependencies>
	<testModules>
		<TestModule id="EID56df4fc5-92f0-40ed-837d-f5bfb1ef9463">
			<label>IGNORE</label>
			<description>IGNORE</description>
			<parent ref="EID8aaef94b-6a4d-47ab-a5d0-70ad5cb28b08"/>
			<testCases>
 				<TestCase id="EIDf0d71027-f61f-41ef-ab09-0021ae66c386">
				  <label>Code list values</label>
				  <description>Verify whether all attributes whose value type is a code list take the values set out therein.</description>
				  <parent ref="EID56df4fc5-92f0-40ed-837d-f5bfb1ef9463"/>
					<testSteps>
						<TestStep id="EID6e008af0-a476-47a4-b980-e79a1b900a86">
						  <label>IGNORE</label>
						  <description>IGNORE</description>
						  <parent ref="EIDf0d71027-f61f-41ef-ab09-0021ae66c386"/>
						  <statementForExecution>not applicable</statementForExecution>
						  <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
						  		<TestAssertion id="EID8255587c-2da4-4a51-997c-3c1774691533">
							 		<label>ad-as.a.1: GeometryMethodValue attributes</label>
									<description><![CDATA[When an attribute has a code list as its type, verify that the values comply with the definitions and include the values set out in Annex II of the regulation. For this attribute, the allowed values are specified in code list <a href='http://inspire.ec.europa.eu/codelist/GeometryMethodValue'>http://inspire.ec.europa.eu/codelist/GeometryMethodValue</a>.<br/>For datasets using version 3 of the GML application schema, the value is the last path element of the code list value URI and it is in the child text node. For datasets using version 4 of the GML application schema, the value is in the xlink:href XML attribute and is the HTTP URI of the code list value.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects.  For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as/features" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AD_v3.1.pdf">INSPIRE Data Specification on Addresses, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID950529a1-5f07-42e3-aaa8-dc3cef3a7132"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $objects3 := $features[self::ad3:Address]/ad3:position/ad3:GeographicPosition
let $objects4 := $features[self::ad:Address]/ad:position/ad:GeographicPosition
let $messages := local:check-code-list-values($objects3, $objects4, 'method', 'http://inspire.ec.europa.eu/codelist/GeometryMethodValue', 1)
return (if ($messages) then 'FAILED' else 'PASSED', $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
							 		<translationTemplates>
										<translationTemplate ref="TR.reviewCodeListValue"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
							 		</translationTemplates>
					  			</TestAssertion>
					  			<TestAssertion id="EID637ae4cc-a050-4e4e-b5f9-00d648be3e47">
						 			<label>ad-as.a.2: GeometrySpecificationValue attributes</label>
									<description><![CDATA[When an attribute has a code list as its type, verify that the values comply with the definitions and include the values set out in Annex II of the regulation. For this attribute, the allowed values are specified in code list <a href='http://inspire.ec.europa.eu/codelist/GeometrySpecificationValue'>http://inspire.ec.europa.eu/codelist/GeometrySpecificationValue</a>.<br/>For datasets using version 3 of the GML application schema, the value is the last path element of the code list value URI and it is in the child text node. For datasets using version 4 of the GML application schema, the value is in the xlink:href XML attribute and is the HTTP URI of the code list value.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects.  For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as/features" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AD_v3.1.pdf">INSPIRE Data Specification on Addresses, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID950529a1-5f07-42e3-aaa8-dc3cef3a7132"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $objects3 := $features[self::ad3:Address]/ad3:position/ad3:GeographicPosition
let $objects4 := $features[self::ad:Address]/ad:position/ad:GeographicPosition
let $messages := local:check-code-list-values($objects3, $objects4, 'specification', 'http://inspire.ec.europa.eu/codelist/GeometrySpecificationValue', 1)
return (if ($messages) then 'FAILED' else 'PASSED', $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
						 			<translationTemplates>
										<translationTemplate ref="TR.reviewCodeListValue"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
						 			</translationTemplates>
					  			</TestAssertion>
					  			<TestAssertion id="EIDc3568153-3b40-4bd3-8e2d-cc80df1966db">
						 			<label>ad-as.a.3: LocatorDesignatorTypeValue attributes</label>
									<description><![CDATA[When an attribute has a code list as its type, verify that the values comply with the definitions and include the values set out in Annex II of the regulation. For this attribute, the allowed values are specified in code list <a href='http://inspire.ec.europa.eu/codelist/LocatorDesignatorTypeValue'>http://inspire.ec.europa.eu/codelist/LocatorDesignatorTypeValue</a>.<br/>For datasets using version 3 of the GML application schema, the value is the last path element of the code list value URI and it is in the child text node. For datasets using version 4 of the GML application schema, the value is in the xlink:href XML attribute and is the HTTP URI of the code list value.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects.  For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as/features" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AD_v3.1.pdf">INSPIRE Data Specification on Addresses, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID950529a1-5f07-42e3-aaa8-dc3cef3a7132"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $objects3 := $features[self::ad3:Address]/ad3:locator/ad3:AddressLocator/ad3:designator/ad3:LocatorDesignator
let $objects4 := $features[self::ad:Address]/ad:locator/ad:AddressLocator/ad:designator/ad:LocatorDesignator
let $messages := local:check-code-list-values($objects3, $objects4, 'type', 'http://inspire.ec.europa.eu/codelist/LocatorDesignatorTypeValue', 2)
return (if ($messages) then 'FAILED' else 'PASSED', $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
						 			<translationTemplates>
										<translationTemplate ref="TR.reviewCodeListValue"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
						 			</translationTemplates>
					  			</TestAssertion>
					  			<TestAssertion id="EID390af7c9-305c-43ca-96e9-675b49efb287">
						 			<label>ad-as.a.4: LocatorLevelValue attributes</label>
									<description><![CDATA[When an attribute has a code list as its type, verify that the values comply with the definitions and include the values set out in Annex II of the regulation. For this attribute, the allowed values are specified in code list <a href='http://inspire.ec.europa.eu/codelist/LocatorLevelValue'>http://inspire.ec.europa.eu/codelist/LocatorLevelValue</a>.<br/>For datasets using version 3 of the GML application schema, the value is the last path element of the code list value URI and it is in the child text node. For datasets using version 4 of the GML application schema, the value is in the xlink:href XML attribute and is the HTTP URI of the code list value.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects.  For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as/features" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AD_v3.1.pdf">INSPIRE Data Specification on Addresses, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID950529a1-5f07-42e3-aaa8-dc3cef3a7132"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $objects3 := $features[self::ad3:Address]/ad3:locator/ad3:AddressLocator
let $objects4 := $features[self::ad:Address]/ad:locator/ad:AddressLocator
let $messages := local:check-code-list-values($objects3, $objects4, 'level', 'http://inspire.ec.europa.eu/codelist/LocatorLevelValue', 1)
return (if ($messages) then 'FAILED' else 'PASSED', $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
						 			<translationTemplates>
										<translationTemplate ref="TR.reviewCodeListValue"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
						 			</translationTemplates>
					  			</TestAssertion>
					  			<TestAssertion id="EID165872a9-644d-4472-b6e5-b7c4f46993d7">
						 			<label>ad-as.a.5: LocatorNameTypeValue attributes</label>
									<description><![CDATA[When an attribute has a code list as its type, verify that the values comply with the definitions and include the values set out in Annex II of the regulation. For this attribute, the allowed values are specified in code list <a href='http://inspire.ec.europa.eu/codelist/LocatorNameTypeValue'>http://inspire.ec.europa.eu/codelist/LocatorNameTypeValue</a>.<br/>For datasets using version 3 of the GML application schema, the value is the last path element of the code list value URI and it is in the child text node. For datasets using version 4 of the GML application schema, the value is in the xlink:href XML attribute and is the HTTP URI of the code list value.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects.  For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as/features" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AD_v3.1.pdf">INSPIRE Data Specification on Addresses, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID950529a1-5f07-42e3-aaa8-dc3cef3a7132"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $objects3 := $features[self::ad3:Address]/ad3:locator/ad3:AddressLocator/ad3:name/ad3:LocatorName
let $objects4 := $features[self::ad:Address]/ad:locator/ad:AddressLocator/ad:name/ad:LocatorName
let $messages := local:check-code-list-values($objects3, $objects4, 'type', 'http://inspire.ec.europa.eu/codelist/LocatorNameTypeValue', 2)
return (if ($messages) then 'FAILED' else 'PASSED', $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.reviewCodeListValue"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
					  			</TestAssertion>
								<TestAssertion id="EID517b72d1-4d66-40a9-b360-79bde1fc9696">
									<label>ad-as.a.6: PartTypeValue attributes</label>
									<description><![CDATA[When an attribute has a code list as its type, verify that the values comply with the definitions and include the values set out in Annex II of the regulation. For this attribute, the allowed values are specified in code list <a href='http://inspire.ec.europa.eu/codelist/PartTypeValue'>http://inspire.ec.europa.eu/codelist/PartTypeValue</a>.<br/>For datasets using version 3 of the GML application schema, the value is the last path element of the code list value URI and it is in the child text node. For datasets using version 4 of the GML application schema, the value is in the xlink:href XML attribute and is the HTTP URI of the code list value.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects.  For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as/features" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AD_v3.1.pdf">INSPIRE Data Specification on Addresses, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID950529a1-5f07-42e3-aaa8-dc3cef3a7132"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $objects3 := $features[self::ad3:ThoroughfareName]/ad3:name/ad3:ThoroughfareNameValue/ad3:nameParts/ad3:PartOfName
let $objects4 := $features[self::ad:ThoroughfareName]/ad:name/ad:ThoroughfareNameValue/ad:nameParts/ad:PartOfName
let $messages := local:check-code-list-values($objects3, $objects4, 'type', 'http://inspire.ec.europa.eu/codelist/PartTypeValue', 2)
return (if ($messages) then 'FAILED' else 'PASSED', $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
							 		<translationTemplates>
										<translationTemplate ref="TR.reviewCodeListValue"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
							 		</translationTemplates>
					  			</TestAssertion>
							  	<TestAssertion id="EIDc13310d2-5b9b-459e-974c-17fd1f3f5782">
									<label>ad-as.a.7: StatusValue attributes</label>
									<description><![CDATA[When an attribute has a code list as its type, verify that the values comply with the definitions and include the values set out in Annex II of the regulation. For this attribute, the allowed values are specified in code list <a href='http://inspire.ec.europa.eu/codelist/StatusValue'>http://inspire.ec.europa.eu/codelist/StatusValue</a>.<br/>For datasets using version 3 of the GML application schema, the value is the last path element of the code list value URI and it is in the child text node. For datasets using version 4 of the GML application schema, the value is in the xlink:href XML attribute and is the HTTP URI of the code list value.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects.  For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as/features" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AD_v3.1.pdf">INSPIRE Data Specification on Addresses, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID950529a1-5f07-42e3-aaa8-dc3cef3a7132"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features3 := $features[self::ad3:Address]
let $features4 := $features[self::ad:Address]
let $messages := local:check-code-list-values($features3, $features4, 'status', 'http://inspire.ec.europa.eu/codelist/StatusValue')
return (if ($messages) then 'FAILED' else 'PASSED', $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									 <translationTemplates>
										<translationTemplate ref="TR.reviewCodeListValue"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									 </translationTemplates>
							  	</TestAssertion>
							</testAssertions>
				 		</TestStep>
			  	  	</testSteps>
				</TestCase>
				<TestCase id="EID5c153f10-63a1-4c94-9e2d-ab4dc9c6da4b">
				<label>Constraints</label>
				<description>Verify that the features provided in the dataset adhere to the constraints specified in the INSPIRE application schema.</description>
				<parent ref="EID56df4fc5-92f0-40ed-837d-f5bfb1ef9463"/>
					<testSteps>
						<TestStep id="EID6ad87ad2-ef11-4541-a9dd-c0b40cf047e3">
						  <label>IGNORE</label>
						  <description>IGNORE</description>
						  <parent ref="EID5c153f10-63a1-4c94-9e2d-ab4dc9c6da4b"/>
						  <statementForExecution>not applicable</statementForExecution>
						  <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID110786b3-71a8-4926-a6ca-bf9b98ba0925">
									<label>ad-as.b.1: An address shall have an admin unit address component spatial object whose level is 1 (Country).</label>
									<description><![CDATA[An address shall have an admin unit address component spatial object whose level is 1 (Country).<br/><br/>
OCL: "inv: self.component -> forAll (a1 | exists(a1.parent.oclIsTypeOf(AdminUnitName) and a1.parent.level=1))".<br/><br/>
Verify that for each address, an AdminUnitName is referenced in component and that it is of level 1.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AD_v3.1.pdf">INSPIRE Data Specification on Addresses, A.1.6</a>]]></description>
									<parent ref="EID6ad87ad2-ef11-4541-a9dd-c0b40cf047e3"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $candidates := $features[self::*:Address]
let $hrefs := $candidates/*:component[not(@xsi:nil='true')]/@xlink:href
let $urls := fn:distinct-values($hrefs)
let $map := local:return-references($urls)
let $featuresWithErrors :=
(for $candidate in $candidates
	let $countryFound :=
	(for $href in $candidate/*:component[not(@xsi:nil='true')]/@xlink:href
	    let $element := map:get($map, fn:string($href))
	    return
	    if (not($element)) then () (: ignore unresolvable links here, this is handled by the information accessibility tests :)
	    else
	    	if (not($element[self::*:AdminUnitName])) then () (: ignore non AdminUnitName components :)
	    	else
	    		if ($element/ad3:level/text()='1stOrder' or $element/ad:level/@xlink:href='http://inspire.ec.europa.eu/codelist/AdministrativeHierarchyLevel/1stOrder') then
	    			$element
	    		else ()
	)
	return
	if ($countryFound) then ()
	else $candidate
)[position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'An address shall have an admin unit address component spatial object whose level is 1 (Country).', 'additionalInfo': 'No Country component found.' }))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID895a6424-a01e-4bda-81a7-1f81d030c513">
									<label>ad-as.b.2: An address shall have exactly one default geographic position (default attribute of GeographicPosition must be true).</label>
									<description><![CDATA[An address shall have exactly one default geographic position (default attribute of GeographicPosition must be true).<br/><br/>
OCL: "inv: self.position -> one(a1 | a1.default = true)".<br/><br/>
Verify that for each address that there is only one GeographicPosition with value true for the default attribute.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AD_v3.1.pdf">INSPIRE Data Specification on Addresses, A.1.6</a>]]></description>
									<parent ref="EID6ad87ad2-ef11-4541-a9dd-c0b40cf047e3"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[self::*:Address and (count(*:position/*:GeographicPosition/*:default[text()='true']) ne 1)][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'An address shall have exactly one default geographic position (default attribute of GeographicPosition must be true).', 'additionalInfo': 'Found: ' || count(*:position/*:GeographicPosition/*:default[text()='true']) || ' default positions.' }))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID097f73e4-6dae-481d-8ea8-4d81a9a82348">
									<label>ad-as.b.3: Either a post code or a post name is required.</label>
									<description><![CDATA[Either a post code or a post name must be provided.<br/><br/>
OCL: "inv: self.postCode->isEmpty() implies self.postName->notEmpty()" and "inv: self.postName->isEmpty() implies self.postCode->notEmpty()".<br/><br/>
Verify that there is either a postCode value or a postName value.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AD_v3.1.pdf">INSPIRE Data Specification on Addresses, A.1.6</a>]]></description>
									<parent ref="EID6ad87ad2-ef11-4541-a9dd-c0b40cf047e3"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[self::*:PostalDescriptor[not(*:postCode[not(@xsi:nil='true')] or *:postName[not(@xsi:nil='true')])]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'Either a post code or a a post name is required.'}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID553f5896-eda9-4f74-a626-0d07b2033669">
									<label>ad-as.b.4: Either a designator or a name is required.</label>
									<description><![CDATA[Either a designator or a name must be provided.<br/><br/>
OCL: "inv: self.designator->isEmpty() implies self.name->notEmpty()" and "inv: self.name->isEmpty() implies self.designator->notEmpty()".<br/><br/>
Verify that there is either a designator value or a name value.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AD_v3.1.pdf">INSPIRE Data Specification on Addresses, A.1.6</a>]]></description>
									<parent ref="EID6ad87ad2-ef11-4541-a9dd-c0b40cf047e3"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[self::*:Address/*:locator/*:AddressLocator[not(*:designator[not(@xsi:nil='true')] or *:name[not(@xsi:nil='true')])]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'Either a designator or a name is required.'}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EID15f7a9ab-ee9e-4db8-95ce-b959aeab3a7d">
					<label>Address Multiple Position</label>
					<description>Verify whether, if an address has more than one position, the specification attribute is populated with a different value for each of these.</description>
					<parent ref="EID56df4fc5-92f0-40ed-837d-f5bfb1ef9463"/>
					<testSteps>
						<TestStep id="EIDf6550361-1a7d-4faf-91c8-c17de64cc584">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID15f7a9ab-ee9e-4db8-95ce-b959aeab3a7d"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID89d8cecb-dfe1-477b-aa1a-1d4721919176">
									<label>ad-as.c.1: Verify whether each address with multiple positions contains different values for each specification attribute.</label>
									<description><![CDATA[Verify whether, if an address has more than one position, the specification attribute has a different value for each position.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Annex II Section 5.5.1 (2): Theme-specific Requirements – The Address Position. If an address has more than one position, the specification attribute shall be populated with a different value for each of these.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as/address-multiple-position" target="_blank">Abstract Test Case 'Address Multiple Position'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AD_v3.1.pdf">INSPIRE Data Specification on Addresses, A.1.9</a>]]></description>
									<parent ref="EIDf6550361-1a7d-4faf-91c8-c17de64cc584"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[self::*:Address[(count(*:position[not(@xsi:nil='true')]) gt 1) and ((ad3:position[ad3:GeographicPosition/ad3:specification/text() = following-sibling::ad3:position/ad3:GeographicPosition/ad3:specification/text()]) or (ad:position[ad:GeographicPosition/ad:specification/@xlink:href = following-sibling::ad:position/ad:GeographicPosition/ad:specification/@xlink:href]))]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.incorrectAddressMultiplePosition', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id)}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.incorrectAddressMultiplePosition"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EIDee19727e-be66-4ec8-abc5-7718ca720e3a">
					<label>Address Position</label>
					<description>Verify whether, in the data set, the position of the address is represented by the coordinates of the actual location with the best available accuracy. This is the most precise directly captured coordinates or, if none exist, then coordinates derived from one of the address components, with priority given to the component that allows the position to be most accurately determined.</description>
					<parent ref="EID56df4fc5-92f0-40ed-837d-f5bfb1ef9463"/>
					<testSteps>
						<TestStep id="EIDfa250f52-52ac-475a-97a9-a2e36c7ce476">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID15f7a9ab-ee9e-4db8-95ce-b959aeab3a7d"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EIDab8922dd-9d3f-4440-b876-6b593ca0dbfa">
									<label>ad-as.d.1: Manual review - Verify whether, in the data set, the position of the address is represented by the coordinates of the actual location with the best available accuracy.</label>
									<description><![CDATA[Verify whether, in the data set, the position of the address is represented by the coordinates of the actual location with the best available accuracy. This is the most precise directly captured coordinates or, if none exist, then coordinates derived from one of the address components, with priority given to the component that allows the position to be most accurately determined.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Annex II Section 5.5.1 (1): Theme-specific Requirements – The Address Position. In the data set, the position of the address shall be represented by the coordinates of the actual location with the best available accuracy. This will be the most precise directly captured coordinates or, if none exist, then coordinates derived from one of the address components, with priority given to the component that allows the position to be most accurately determined.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as/address-position" target="_blank">Abstract Test Case 'Address Position'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AD_v3.1.pdf">INSPIRE Data Specification on Addresses, A.1.8</a>]]></description>
									<parent ref="EIDfa250f52-52ac-475a-97a9-a2e36c7ce476"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EID6c4a7cd9-1c5d-4e7a-9d36-a935c7c9b5b5">
					<label>Country and Address Components</label>
					<description>Verify that an address has associations to the address components necessary to the unambiguous identification and location of the address instance.</description>
					<parent ref="EID56df4fc5-92f0-40ed-837d-f5bfb1ef9463"/>
					<testSteps>
						<TestStep id="EIDbd3df0e3-f6ce-404c-8a92-6a1658a982de">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID15f7a9ab-ee9e-4db8-95ce-b959aeab3a7d"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID037e000b-9195-42be-8137-db95958de62f">
									<label>ad-as.e.1: Verify that an address has associations to the address components necessary to the unambiguous identification and location of the address instance.</label>
									<description><![CDATA[Verify that an address has associations to the address components necessary to the unambiguous identification and location of the address instance. Check that no combination of Address components with LocatorDesignator and/or LocatorName appears for different Addresses.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Annex II Section 5.5.2 (3): Theme-specific Requirements – Association Roles. An address shall have an association to the name of the country in which it is located. Furthermore, an address must have associations to the additional address components necessary to the unambiguous identification and location of the address instance.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as/country-address-components" target="_blank">Abstract Test Case 'Country and Address Components'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AD_v3.1.pdf">INSPIRE Data Specification on Addresses, A.1.12</a>]]></description>
									<parent ref="EIDbd3df0e3-f6ce-404c-8a92-6a1658a982de"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $Addresses := $features[self::*:Address]
let $CountAddresses := count($Addresses)
let $map := map:merge(
  for $Address at $pos in $Addresses
  let $nodes := $Address/*:component/@xlink:href | $Address/*:locator/*:AddressLocator/*:designator/*:LocatorDesignator/*:designator | $Address/*:locator/*:AddressLocator/*:name/*:LocatorName/*:name
  return map { $pos : string-join(functx:sort($nodes),';') }
)
let $values := map:for-each( $map, function($key, $val){ $val })
let $duplicates := $values[index-of($values, .)[2]]
let $posWithErrors :=
  (for $key in (1 to $CountAddresses)
   let $val := map:get($map, $key)
   return if ($val = $duplicates) then $key else ()
  )[position() le $limitErrors]
return
(if (count($posWithErrors)>0) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($posWithErrors)),
 for $pos in $posWithErrors
   let $feature := $Addresses[$pos]
   order by $feature/@gml:id
   return
     local:addMessage('TR.AmbiguousAddressComponents', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'AddressCombination': map:get($map, $pos) }))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.AmbiguousAddressComponents"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID9959487b-f87f-4889-818a-921f4ab20e66">
									<label>ad-as.e.2: Manual review</label>
									<description><![CDATA[Verify that an address has associations to the address components necessary to the unambiguous identification and location of the address instance. Review the presence of the needed address components.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Annex II Section 5.5.2 (3): Theme-specific Requirements – Association Roles. An address shall have an association to the name of the country in which it is located. Furthermore, an address must have associations to the additional address components necessary to the unambiguous identification and location of the address instance.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as/country-address-components" target="_blank">Abstract Test Case 'Country and Address Components'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AD_v3.1.pdf">INSPIRE Data Specification on Addresses, A.1.12</a>]]></description>
									<parent ref="EIDbd3df0e3-f6ce-404c-8a92-6a1658a982de"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EID85fe9136-88c6-4ca6-8628-298262c67c4c">
					<label>Parent address</label>
					<description>Verify that the association role “parentAddress” is populated for all addresses which are connected to a parent (or main) address.</description>
					<parent ref="EID56df4fc5-92f0-40ed-837d-f5bfb1ef9463"/>
					<testSteps>
						<TestStep id="EIDfe2c1a36-6bd5-4d88-b1b7-b9f15bf43500">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID15f7a9ab-ee9e-4db8-95ce-b959aeab3a7d"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EIDb343dd44-3384-48c7-ad31-4192e12ba3cc">
									<label>ad-as.f.1: Manual review - Verify that the association role “parentAddress” is populated for all addresses which are connected to a parent (or main) address.</label>
									<description><![CDATA[Verify that the association role “parentAddress” is populated for all addresses which are connected to a parent (or main) address.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Annex II Section 5.5.2: Theme-specific Requirements – Association Roles. The association role “parentAddress” shall be populated for all addresses which are connected to a parent (or main) address.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as/parent-address" target="_blank">Abstract Test Case 'Parent Address'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AD_v3.1.pdf">INSPIRE Data Specification on Addresses, A.1.11</a>]]></description>
									<parent ref="EIDfe2c1a36-6bd5-4d88-b1b7-b9f15bf43500"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EID525ae7ca-4ca6-4b9e-978b-3041ee754eab">
					<label>Unambiguousness</label>
					<description>Verify whether the withinScopeOf association role is populated for all locators which are assigned according to rules that seek to ensure unambiguousness within a specific address component.</description>
					<parent ref="EID56df4fc5-92f0-40ed-837d-f5bfb1ef9463"/>
					<testSteps>
						<TestStep id="EID086bb0ac-9fce-422f-94a7-d318d51e23c4">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID525ae7ca-4ca6-4b9e-978b-3041ee754eab"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID58c5b189-54f5-41b5-95ed-2484092e0a15">
									<label>ad-as.g.1: Manual review - Verify whether the withinScopeOf association role is populated for all locators which are assigned according to rules that seek to ensure unambiguousness within a specific address component.</label>
									<description><![CDATA[Verify whether the withinScopeOf association role is populated for all locators which are assigned according to rules that seek to ensure unambiguousness within a specific address component<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Annex II Section 5.5.1 (1): Theme-specific Requirements – Association role. The withinScopeOf association role shall be populated for all locators which are assigned according to rules that seek to ensure unambiguousness within a specific address component (that is thoroughfare name, address area name, postal descriptor or administrative unit name).</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-ad/master/ad-as/unambiguousness" target="_blank">Abstract Test Case 'Scope of unambiguousness'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AD_v3.1.pdf">INSPIRE Data Specification on Addresses, A.1.10</a>]]></description>
									<parent ref="EID086bb0ac-9fce-422f-94a7-d318d51e23c4"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
			</testCases>
		</TestModule>
	</testModules>
</ExecutableTestSuite>
