<?xml version="1.0" encoding="utf-8"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EIDcdb18aec-6d6f-48cf-90d9-c6472a0883cd" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 https://resources.etf-validator.net/schema/v2/val/ignoreRef.xsd">
	<itemHash>bQ==</itemHash>
	<remoteResource>https://github.com/inspire-eu-validation/ets-repository/tree/master/data-bu/bu-2d-as</remoteResource>
	<localPath>/auto</localPath>
	<label>Conformance class: Application schema, Buildings2D</label>
	<description><![CDATA[This test suite examines requirements associated with the application schema.<br/><br/>
<b>This is a draft version. It has limitations and is expected to contain errors.</b> Please report any issues or problems <a href="https://github.com/inspire-eu-validation/community/wiki/Your-feedback" target="_blank">in GitHub</a>.<br/><br/>
Known limitations are documented in the description of the applicable test case or test assertion. There is a general limitation in all assertions that extensions in additional application schemas are only supported, if the unqualified name of the feature type in the extension is the same as the name of the feature type in the INSPIRE application schema.<br/><br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-bu/master/bu-2d-as" target="_blank">Conformance Class 'Application Schema, Buildings2D'</a><br/><br/>
Pre-requisite conformance classes:
<ul><li><a href="http://inspire.ec.europa.eu/id/ats/data-bu/master/bu-gml" target="_blank">Conformance Class 'GML application schemas, Buildings2D'</a></li></ul>]]></description>
	<reference>../../inspire-noggeo-bsxets.xq</reference>
	<version>0.1.0</version>
	<author>Consortium Bilbomatica, Guadaltel y Geograma</author>
	<creationDate>2020-10-01T15:30:00Z</creationDate>
	<lastEditor>Consortium Bilbomatica, Guadaltel y Geograma</lastEditor>
	<lastUpdateDate>2020-10-01T15:30:00Z</lastUpdateDate>
	<tags>
		<tag ref="EIDae91aeb9-5fd2-43b6-a678-11c17f5ad63c"/>
	</tags>
	<testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
	<translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
	<ParameterList name="ETF Standard Parameters for XML test objects">
		<parameter name="files_to_test" required="true">
			<defaultValue>.*</defaultValue>
			<description ref="TR.filesToTest"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
		<parameter name="tests_to_execute" required="false">
			<defaultValue>.*</defaultValue>
			<description ref="TR.testsToExecute"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
	</ParameterList>
	<supportedTestObjectTypes>
		<testObjectType ref="EIDe1d4a306-7a78-4a3b-ae2d-cf5f0810853e"/>
	</supportedTestObjectTypes>
	<dependencies>
		<executableTestSuite ref="EIDeab289c0-47c0-4b4f-bd11-1f49ecd21878"/>
	</dependencies>
	<testModules>
		<TestModule id="EIDeebbb8c3-1ab7-4b11-aab5-83f910b38422">
			<label>IGNORE</label>
			<description>IGNORE</description>
			<parent ref="EIDcdb18aec-6d6f-48cf-90d9-c6472a0883cd"/>
			<testCases>
				<TestCase id="EID77d83707-6637-4627-915a-49dbd728230c">
					<label>Constraints</label>
					<description>Verify that the features provided in the dataset adhere to the constraints specified in the INSPIRE application schema.</description>
					<parent ref="EIDeebbb8c3-1ab7-4b11-aab5-83f910b38422"/>
					<testSteps>
						<TestStep id="EIDd8803772-b966-45b0-b207-21807d4c9ca1">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID77d83707-6637-4627-915a-49dbd728230c"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID15842e43-cd22-4600-85dd-b986c23311e4">
									<label>bu-2d-as.a.1: singleReferenceGeometry</label>
									<description><![CDATA[Check that exactly one geometry2D attribute is a reference geometry, i.e. a geometry2D with a <a href=http://inspire.ec.europa.eu/id/ats/data-bu/master/bu-2d-as/constraints#referenceGeometry'>referenceGeometry</a> attribute set to “true” (OCL: "inv: self.geometry2D->select(referenceGeometry=true)->size() = 1"). The check applies to both Building and BuildingPart feature types.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Spatial object types and data types shall comply with the definitions and constraints and include
the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-bu/master/bu-2d-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_BU_v3.0.pdf">INSPIRE Data Specification on Buildings, A.1.7</a>]]></description>
									<parent ref="EIDd8803772-b966-45b0-b207-21807d4c9ca1"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features_selected := $features[self::bu-core2d:Building | self::bu-core2d:BuildingPart]
let $parentMessages := 
	for $feature in $features_selected
		let $parent :=
			if(name($feature) = 'bu-core2d:Building') then
				$feature/bu-core2d:geometry2D/bu-base:BuildingGeometry2D/bu-base:referenceGeometry
			else ()
		
		return 
			if (name($feature) = 'bu-core2d:Building' and count($parent) = 0) then
				local:addMessage('TR.missingElementBuildings', map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'bu-base:referenceGeometry'}) 
			else if (name($feature) = 'bu-core2d:Building' and count($parent) > 1) then
				local:addMessage('TR.wrongMultiplicityBuildings', map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'bu-base:referenceGeometry', 'multiplicity': 1, 'count': count($parent)}) 
			else if (name($feature) = 'bu-core2d:Building' and $parent/text() != 'true') then
				local:addMessage('TR.constraintViolation', map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'constraint':"The geometry2D with a referenceGeometry attribure set to 'true'", 'additionalInfo':''}) 
			else ()

let $childParentMessages := 
	for $feature in $features_selected
		let $dummy := local:log('Feature name: ' || name($feature))
		let $parent := 
			if (name($feature) = 'bu-core2d:BuildingPart' and exists($feature/bu-core2d:geometry2D)) then
				$feature/bu-core2d:geometry2D/bu-base:BuildingGeometry2D
			else if (name($feature) = 'bu-core2d:Building' and exists($feature/bu-base:parts/bu-core2d:BuildingPart)) then
				$feature/bu-base:parts/bu-core2d:BuildingPart/bu-core2d:geometry2D/bu-base:BuildingGeometry2D
			else ()

		return
			if((count($parent) = 0 and exists($feature/bu-base:parts/bu-core2d:BuildingPart) and name($feature) = 'bu-core2d:Building') or (name($feature) = 'bu-core2d:BuildingPart' and count($parent) = 0)) then 
				local:addMessage('TR.missingElementBuildings', map {'filename': local:filename($parent/../..), 'featureType':local-name($parent/../..), 'gmlid': string($parent/../../@*:id), 'property': 'bu-base:BuildingGeometry2D'}) 
			else ()

let $childMessages :=
	for $feature in $features_selected
		let $parent := 
			if (name($feature) = 'bu-core2d:BuildingPart' and exists($feature/bu-core2d:geometry2D)) then
				$feature/bu-core2d:geometry2D/bu-base:BuildingGeometry2D
			else if (name($feature) = 'bu-core2d:Building' and exists($feature/bu-base:parts/bu-core2d:BuildingPart/bu-core2d:geometry2D/bu-base:BuildingGeometry2D)) then
				$feature/bu-base:parts/bu-core2d:BuildingPart/bu-core2d:geometry2D/bu-base:BuildingGeometry2D
			else ()

		for $child in $parent
			return 
				if(count($child/bu-base:referenceGeometry) = 0) then 
					local:addMessage('TR.missingElementBuildings', map {'filename': local:filename($parent/../..), 'featureType':local-name($parent/../..), 'gmlid': string($parent/../../@*:id), 'property': 'bu-base:referenceGeometry'}) 
				else if (count($child/bu-base:referenceGeometry) > 1) then
					local:addMessage('TR.wrongMultiplicityBuildings', map {'filename': local:filename($parent/../..), 'featureType':local-name($parent/../..), 'gmlid': string($parent/../../@*:id), 'property': 'bu-base:referenceGeometry', 'multiplicity': 1, 'count': count($child/bu-base:referenceGeometry)}) 
				else if ($child/bu-base:referenceGeometry != 'true') then
					local:addMessage('TR.constraintViolation', map {'filename': local:filename($parent/../..), 'featureType':local-name($parent/../..), 'gmlid': string($parent/../../@*:id), 'constraint':"The geometry2D with a referenceGeometry attribure set to 'true'" ,'additionalInfo':''}) 
				else()

let $combined_messages := ($parentMessages, $childParentMessages, $childMessages)

return
(if ($combined_messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($combined_messages//etf:argument[@token='id']/text()))),
$combined_messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElementBuildings"/>
										<translationTemplate ref="TR.wrongMultiplicityBuildings"/>
										<translationTemplate ref="TR.constraintViolation"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID0a89df09-837d-44b2-ae52-5e6e263f2b1d">
									<label>bu-2d-as.a.2: Building parts shall be 2D</label>
									<description><![CDATA[Check that the <a href='http://inspire.ec.europa.eu/id/ats/data-bu/master/bu-2d-as/constraints#parts'>parts</a> of the building is represented using the <a href='http://inspire.ec.europa.eu/id/ats/data-bu/master/bu-2d-as/constraints#BuildingPart'>BuildingPart</a> type of the Buildings2D package (OCL: "inv: self.parts->oclIsKindOf(Buildings2D::BuildingPart)")<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Spatial object types and data types shall comply with the definitions and constraints and include
the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-bu/master/bu-2d-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_BU_v3.0.pdf">INSPIRE Data Specification on Buildings, A.1.7</a>]]></description>
									<parent ref="EIDd8803772-b966-45b0-b207-21807d4c9ca1"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features_selected := $features[self::bu-core2d:Building | self::bu-core2d:BuildingPart]
let $gml_ids := $features[self::bu-core2d:BuildingPart]/@*:id
let $messages := 
	for $feature in $features_selected
		let $parts := $feature/bu-base:parts
		for $part in $parts
			let $envDom := $part
			let $ids := 
				for $x in $envDom/@xlink:href
					return
						if (starts-with($x, '#')) then $x
						else ()
			let $invalid_ids :=
				for $x in $ids
				return
					if (starts-with($x, '#')) then
						if (not(substring($x, 2) = $gml_ids)) then $x
						else ()
					else ()
			let $valid_ids :=
				for $x in $ids
				return
					if (starts-with($x, '#')) then
						if (not(substring($x, 2) = $gml_ids)) then ()
						else $x
					else ()
			let $urls := 
				for $x in $envDom/@xlink:href
					return
						if (starts-with($x, '#')) then ()
						else $x						
			let $map := local:check-resource-uris($urls, 30, true())
			let $invalid_urls :=
				for $href in $urls
					let $url := string($href)
					let $validuri := map:get($map, $url)
					return
						if ($validuri = 'notHTTP' or starts-with($validuri, 'EXCEPTION') or $validuri = 'idNotFound' or matches($validuri,'^\d{3}$')) then $url
						else ()
			let $valid_urls :=
				for $href in $urls
					let $url := string($href)
					let $validuri := map:get($map, $url)
					return
						if ($validuri = 'notHTTP' or starts-with($validuri, 'EXCEPTION') or $validuri = 'idNotFound' or matches($validuri,'^\d{3}$')) then ()
						else $url
			return
				if(count($invalid_urls) > 0) then
					local:addMessage('TR.brokenLinkBuildings', map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'Building.parts', 'value': string-join($invalid_urls, ',')}) 
				else if(count($invalid_ids) > 0) then
					local:addMessage('TR.constraintViolation', map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'constraint':'The parts of the building is represented using the BuildingPart type of the Buildings2D package', 'additionalInfo':''}) 
				else if(count($valid_urls) = 0 and count($valid_ids) = 0 and count($part/bu-core2d:BuildingPart) = 0) then
					local:addMessage('TR.constraintViolation', map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'constraint':'The parts of the building is represented using the BuildingPart type of the Buildings2D package', 'additionalInfo':''}) 
				else if (count($valid_urls) != 0) then
					let $aaa := 'aaa'
					for $url in $valid_urls
						return local:addMessage('TR.manual.reviewConstraintURL', map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'bu-base:parts', 'value': $url, 'type':'Building2D'}) 
				else ()
return
(if ($messages and not($messages/@ref = ('TR.manual.reviewConstraintURL'))) then 'FAILED' 
else if($messages and $messages/@ref = ('TR.manual.reviewConstraintURL')) then 'PASSED_MANUAL' 
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.brokenLinkBuildings"/>
										<translationTemplate ref="TR.constraintViolation"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
			</testCases>
		</TestModule>
	</testModules>
</ExecutableTestSuite>