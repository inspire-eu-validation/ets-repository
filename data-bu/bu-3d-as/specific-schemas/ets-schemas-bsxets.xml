<?xml version="1.0" encoding="utf-8"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EIDc435378c-52c4-4c82-8b8b-80890720afd2" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 https://resources.etf-validator.net/schema/v2/val/ignoreRef.xsd">
	<itemHash>bQ==</itemHash>
	<remoteResource>https://github.com/inspire-eu-validation/ets-repository/tree/master/data/schemas</remoteResource>
	<localPath>/auto</localPath>
	<label>Conformance class: INSPIRE GML application schemas, General requirements - Excluding Specific Req</label>
	<description><![CDATA[This test suite examines GML documents against basic requirements for the GML encoding for spatial data sets in INSPIRE. This only covers application-schema-independent, generic requirements. Requirements related to specific application schemas are part of conformance classes with a dependency on this conformance class.<br/><br/>
<b>This is a draft version. It has limitations and is expected to contain errors.</b> Please report any issues or problems <a href="https://github.com/inspire-eu-validation/community/wiki/Your-feedback" target="_blank">in GitHub</a>.<br/><br/>
Known limitations are documented in the description of the applicable test case or test assertion. There is a general limitation in all assertions that extensions in additional application schemas are only supported, if the unqualified name of the feature type in the extension is the same as the name of the feature type in the INSPIRE application schema.<br/><br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data/master/schemas" target="_blank">Conformance Class 'INSPIRE GML application schemas'</a><br/><br/>
Pre-requisite conformance classes:
<ul><li><a href="http://inspire.ec.europa.eu/id/ats/data-encoding/master/inspire-gml" target="_blank">Conformance Class 'INSPIRE GML encoding'</a></li></ul>]]></description>
	<reference>../../../inspire-bsxets.xq</reference>
	<version>0.1.0</version>
	<author>Consortium Bilbomatica, Guadaltel y Geograma</author>
	<creationDate>2016-08-15T00:00:00Z</creationDate>
	<lastEditor>Consortium Bilbomatica, Guadaltel y Geograma</lastEditor>
	<lastUpdateDate>2020-02-21T12:20:00Z</lastUpdateDate>
	<tags>
		<tag ref="EIDaeed5629-2c33-4fa6-aa66-f59418abaa70"/>
	</tags>
	<testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
	<translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
	<ParameterList name="ETF Standard Parameters for XML test objects">
		<parameter name="files_to_test" required="true">
			<defaultValue>.*</defaultValue>
			<description ref="TR.filesToTest"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
		<parameter name="tests_to_execute" required="false">
			<defaultValue>.*</defaultValue>
			<description ref="TR.testsToExecute"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
	</ParameterList>
	<supportedTestObjectTypes>
		<testObjectType ref="EIDe1d4a306-7a78-4a3b-ae2d-cf5f0810853e"/>
	</supportedTestObjectTypes>
	<dependencies>
		<executableTestSuite ref="EID545f9e49-009b-4114-9333-7ca26413b5d4"/>
	</dependencies>
	<testModules>
		<TestModule id="EIDe4cb4ea3-b4d0-4fbb-9e17-2c52af446b7e">
			<label>IGNORE</label>
			<description>IGNORE</description>
			<parent ref="EIDc435378c-52c4-4c82-8b8b-80890720afd2"/>
			<testCases>
				<TestCase id="EIDd0378c8f-9829-4964-bccd-b71215cb9faa">
					<label>Schema</label>
					<description>Verify whether each relevant element of the dataset under inspection carries a name specified in the target application schema.</description>
					<parent ref="EIDe4cb4ea3-b4d0-4fbb-9e17-2c52af446b7e"/>
					<testSteps>
						<TestStep id="EID4e7dc044-3523-4f69-882b-cf7c14703a51">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EIDd0378c8f-9829-4964-bccd-b71215cb9faa"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EIDd90f70b7-3151-467e-8f81-cede237fd62a">
									<label>gmlas.a.1: Mapping of source data to INSPIRE</label>
									<description><![CDATA[Verify whether each relevant element of the source data set under inspection has been properly mapped to the INSPIRE application schemas. Inspect the documentation of the source data set and determine, if all relevant information has been mapped correctly to the INSPIRE application schema, i.e. that spatial object types, data types, attributes, association roles, code lists, and enumerations are mapped to the INSPIRE application schemas with the correct designation of mnemonic names.<br/><br/>
Relevant requirements:
<ul><li>Article 4(1) - For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li></ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data/master/schemas/schema" target="_blank">Abstract Test Case 'Schema'</a>, <a href="http://inspire.jrc.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_Template_v3.0rc3.pdf">INSPIRE Data Specification Template, A.1.1</a>]]></description>
									<parent ref="EID4e7dc044-3523-4f69-882b-cf7c14703a51"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
								<TestAssertion id="EIDf962bfd7-7230-40ca-918a-535f08e80fa3">
									<label>gmlas.a.2: Modelling of additional spatial object types</label>
									<description><![CDATA[Inspect the XML Schema namespace of each feature element. If a namespace URI does not start with "http://inspire.ec.europa.eu/schemas/" or "urn:x-inspire:specification:gmlas:" it is not one of the approved INSPIRE application schema namespaces. Review the extension documentation for the identified namespaces to check that any extensions do not overlap with the spatial object types and associated data types and enumerations that are defined in Annexes II, III and IV of the Implementing Rule.<br/><br/>
Relevant requirements:
<ul><li>Article 4(1) - For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li></ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data/master/schemas" target="_blank">Abstract Test Case 'Schema'</a>, <a href="http://inspire.jrc.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_Template_v3.0rc3.pdf">INSPIRE Data Specification Template, A.1.1</a>]]></description>
									<parent ref="EID4e7dc044-3523-4f69-882b-cf7c14703a51"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EIDdbebc0ab-ab7f-4e71-811b-994f8709a096">
					<label>Schema validation</label>
					<description>Verify that all XML documents validate against their XML schema(s).</description>
					<parent ref="EIDe4cb4ea3-b4d0-4fbb-9e17-2c52af446b7e"/>
					<testSteps>
						<TestStep id="EID4f92b2b6-f5ae-4c38-95d6-222ca0228651">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EIDdbebc0ab-ab7f-4e71-811b-994f8709a096"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EIDe5654f67-eb5d-4149-85c6-237c0a92f047">
									<label>gmlas.b.1: xsi:schemaLocation attribute</label>
									<description><![CDATA[Verify for each XML document that the xsi:schemaLocation attribute is provided in the root element.<br/><br/>
Relevant requirements:
<ul>
<li>TG Requirement 6: Data instance (XML) documents shall validate without error against the provided XML schema.</li></ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data/master/schemas/schema-validation" target="_blank">Abstract Test Case 'Schema validation'</a>, <a href="http://inspire.jrc.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_Template_v3.0rc3.pdf">INSPIRE Data Specification Template, A.9.5</a>]]></description>
									<parent ref="EID4f92b2b6-f5ae-4c38-95d6-222ca0228651"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $filesWithErrors := $db[not(/*/@xsi:schemaLocation)][position() le $limitErrors]
return
(if ($filesWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.filesWithErrors', count($filesWithErrors)),
 for $file in $filesWithErrors
    order by local:filename($file)
    let $root := $file/element()
    return
     local:addMessage('TR.noSchemaLocation', map { 'filename': local:filename($root) }))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.noSchemaLocation"/>
										<translationTemplate ref="TR.filesWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID2c7cefde-0c06-4e79-8976-8ca9596b72a2">
									<label>gmlas.b.2: validate XML documents</label>
									<description><![CDATA[Validate each document against the schema(s) specified in the xsi:schemaLocation attribute using strict XML schema validation.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 3: Common Types. Types that are common to several of the themes listed in Annexes I, II and III to Directive 2007/2/EC shall conform to the definitions and constraints and include the attributes and association roles set out in Annex I.</li>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 5 (2): Types. Types that are a sub-type of another type shall also include all this type‘s attributes and association roles.</li>
<li>IR Requirement Article 5 (3): Types. Abstract types shall not be instantiated.</li>
<li>IR Requirement Article 6 (5): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types that have an enumeration type may only take values from the lists specified for the enumeration type.</li>
<li>IR Requirement Article 9 (1): Identifier Management. The data type Identifier defined in Section 2.1 of Annex I shall be used as a type for the external object identifier of a spatial object.</li>
<li>TG Requirement 1: Spatial object types and data types shall comply with the multiplicities defined for the attributes and association roles in this section.</li>
<li>TG Requirement 6: Data instance (XML) documents shall validate without error against the provided XML schema.</li>
</ul>
Note that validation is done on a file-by-file basis and access to many remote schema files is time consuming. I.e. it will be <em>much</em> faster to validate a single document with many features than many files with a few features each.<br/><br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data/master/schemas/schema-validation" target="_blank">Abstract Test Case 'Schema validation'</a>, <a href="http://inspire.jrc.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_Template_v3.0rc3.pdf">INSPIRE Data Specification Template, A.1.1, A.1.2, A.1.3, A.1.4, A.1.5, A.3.2, (A.6.1), A.8.1, A.9.5</a>]]></description>
									<parent ref="EID4f92b2b6-f5ae-4c38-95d6-222ca0228651"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $errors := (for $file in $db
 return
 try { 
  let $root := $file/element()
  let $logentry := local:log('Validating ' || local:filename($root))
  let $start := prof:current-ms()
  let $query := "declare variable $file external; validate:xsd-info($file)"
  let $messages := xquery:eval($query, map{ 'file': $file }, map{ 'timeout': 60 })
  (:let $messages := validate:xsd-info($file):)
  let $duration := prof:current-ms()-$start
  let $errors := count($messages)
  let $logentry := local:log('Duration: ' || $duration || ' ms. Errors: ' || $errors || '.')
  return
   if ($errors&gt;0) then
    (local:addMessage('TR.invalidSchema', map { 'filename': local:filename($root), 'count': string($errors) }),
     for $message in $messages return local:addMessage('TR.xmlSchemaError', map { 'filename': local:filename($root), 'error': $message }))
   else ()
 } catch * 
 { 
	let $logerror := local:log('Exception: ' || $err:description)
   return local:addMessage('TR.timeoutFileOperation', map { 'filename': local:filename($file/element()), 'description': $err:description })
 }
 )[position() le $limitErrors]						 
return
(if ($errors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.filesWithErrors', count($errors[@ref eq 'TR.invalidSchema'])),
 $errors[position() le $limitErrors])
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.invalidSchema"/>
										<translationTemplate ref="TR.filesWithErrors"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EID9f4232e2-a2c5-4cc3-8ae3-f440473a52bb">
					<label>GML model</label>
					<description>Verify that the XML documents meet the requirements of the GML model that are not tested by XML schema validation alone.</description>
					<parent ref="EIDe4cb4ea3-b4d0-4fbb-9e17-2c52af446b7e"/>
					<testSteps>
						<TestStep id="EIDce7d73df-c62d-4d97-a23c-d46d187522ed">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID9f4232e2-a2c5-4cc3-8ae3-f440473a52bb"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID8eafe8dd-dec1-41b8-ab49-f26f735da0dc">
									<label>gmlas.c.1: Consistency with the GML model</label>
									<description><![CDATA[Inspect each property element and verify that it either carries a URI reference to an object (@xlink:href), contains one or more object elements as child elements or contains a non-empty text node (whitespace is trimmed before checking for empty text).<br/><br/>
Strictly, empty string values are valid according to the GML model, but they are not an appropriate value for any of the string-valued attributes in INSPIRE.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data/master/schemas/gml-model" target="_blank">Abstract Test Case 'GML model'</a>, <a href="http://inspire.jrc.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_Template_v3.0rc3.pdf">INSPIRE Data Specification Template, A.1.3, (A.6.1), A.9.5</a>]]></description>
									<parent ref="EIDce7d73df-c62d-4d97-a23c-d46d187522ed"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $indeterminatePositionValues := ('unknown', 'now')
let $featuresWithErrors := $features[*[not(@xlink:href or element() or (text() and string-length(normalize-space(text()))&gt;0) or (string-length(@uom)&gt;0) or @xsi:nil eq 'true' or @indeterminatePosition = $indeterminatePositionValues)] or */*/*[not(@xlink:href or element() or (text() and string-length(normalize-space(text()))&gt;0) or (string-length(@uom)&gt;0) or @xsi:nil eq 'true' or @indeterminatePosition = $indeterminatePositionValues)]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $properties := $feature/*[not(@xlink:href or element() or (text() and string-length(normalize-space(text()))&gt;0) or (string-length(@uom)&gt;0) or @xsi:nil eq 'true' or @indeterminatePosition = $indeterminatePositionValues)] | $feature/*/*/*[not(@xlink:href or element() or (text() and string-length(normalize-space(text()))&gt;0) or (string-length(@uom)&gt;0) or @xsi:nil eq 'true' or @indeterminatePosition = $indeterminatePositionValues)]
   return
     local:addMessage('TR.emptyValue', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'propertyNames': fn:string-join($properties/local-name(),', ') }))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.emptyValue"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID83da7275-3ea1-40f5-bce0-211491e9f6f7">
									<label>gmlas.c.2: nilReason attributes require xsi:nil=true</label>
									<description><![CDATA[Inspect each XML element that represents a feature property and that has a nilReason XML attribute. Verify that xsi:nil='true' is present in the property element, i.e. a reason is only provided in properties that are void / nil.<br/><br/>
Limitation: This test currently does not analyse properties of data types or objects embedded in a feature.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data/master/schemas/gml-model" target="_blank">Abstract Test Case 'GML model'</a>, <a href="http://inspire.jrc.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_Template_v3.0rc3.pdf">INSPIRE Data Specification Template, A.1.3, (A.6.1), A.9.5</a>]]></description>
									<parent ref="EIDce7d73df-c62d-4d97-a23c-d46d187522ed"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[*[@nilReason and not(@xsi:nil eq 'true')]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $properties := $feature/*[@nilReason and not(@xsi:nil eq 'true')]
   return
     local:addMessage('TR.nilMissing', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'propertyNames': fn:string-join($properties/local-name(),', ') }))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.nilMissing"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID102e28ca-a612-49e4-91e4-a534ce67ba9d">
									<label>gmlas.c.3: nilReason values</label>
									<description><![CDATA[Inspect all nilReason values and verify that either the values from the INSPIRE registry or the pre-defined values from the GML standard are used. Otherwise report incorrectReason. Valid values are:
<ul>
<li>'http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown'</li>
<li>'http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated'</li>
<li>'http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld'</li>
<li>'unknown'</li>
<li>'other:unpopulated'</li>
<li>'withheld'</li>
</ul>
Limitation: This test currently does not analyse properties of data types or objects embedded in a feature.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data/master/schemas/gml-model" target="_blank">Abstract Test Case 'GML model'</a>, <a href="http://inspire.jrc.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_Template_v3.0rc3.pdf">INSPIRE Data Specification Template, A.1.3, (A.6.1), A.9.5</a>]]></description>
									<parent ref="EIDce7d73df-c62d-4d97-a23c-d46d187522ed"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $values := ( 'http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unknown', 'http://inspire.ec.europa.eu/codelist/VoidReasonValue/Unpopulated', 'http://inspire.ec.europa.eu/codelist/VoidReasonValue/Withheld', 'unknown', 'other:unpopulated', 'withheld' )
let $featuresWithErrors := $features[*[@xsi:nil eq 'true' and @nilReason and not(@nilReason =  $values)]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $properties := $feature/*[@xsi:nil eq 'true' and @nilReason and not(@nilReason =  $values)]
   let $values := distinct-values($properties/@nilReason)
   return
     local:addMessage('TR.incorrectReason', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'propertyNames': fn:string-join($properties/local-name(),', '), 'values': fn:string-join($values, ', ') }))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.incorrectReason"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EID46c752ca-28d4-4831-b4ad-4c3de5f4d3f4">
					<label>Code list values in basic data types</label>
					<description>Verify whether all attributes whose value type is a code list take the values set out therein. This is usually part of the tests of the corresponding application schema. However, for data types that are used across the INSPIRE application schemas, this is best done in this test suite to avoid duplicating the same test in many test suites. The relevant data types for the Annex I data themes with code list values are: GeographicalName.</description>
					<parent ref="EIDe4cb4ea3-b4d0-4fbb-9e17-2c52af446b7e"/>
					<testSteps>
						<TestStep id="EIDa0d70432-7ad2-4e96-a841-8174422d272f">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID46c752ca-28d4-4831-b4ad-4c3de5f4d3f4"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID19961d65-0141-4551-b31b-0770adf9203e">
									<label>gmlas.d.1: GrammaticalNumber attributes</label>
									<description><![CDATA[When an attribute has a code list as its type, verify that the values comply with the definitions and include the values set out in Annex II of the regulation. For this attribute, the allowed values are specified in code list <a href='http://inspire.ec.europa.eu/codelist/GrammaticalNumberValue'>http://inspire.ec.europa.eu/codelist/GrammaticalNumberValue</a>.<br/>For datasets using version 3 of the GML application schema, the value is the last path element of the code list value URI and it is in the child text node. For datasets using version 4 of the GML application schema, the value is in the xlink:href XML attribute and is the HTTP URI of the code list value.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects.  For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data/master/schemas/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_GN_v3.1.pdf">INSPIRE Data Specification on Geographical Names, A.1.3</a>]]></description>
									<parent ref="EIDa0d70432-7ad2-4e96-a841-8174422d272f"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $objects3 := $features/*/gn3:GeographicalName
let $objects4 := $features/*/gn:GeographicalName
let $messages := local:check-code-list-values($objects3, $objects4, 'grammaticalNumber', 'http://inspire.ec.europa.eu/codelist/GrammaticalNumberValue', 1)
return (if ($messages) then 'FAILED' else 'PASSED', $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID4e22c197-adb3-4fcc-a1b7-0fce6a35e2c2">
									<label>gmlas.d.2: GrammaticalGender attributes</label>
									<description><![CDATA[When an attribute has a code list as its type, verify that the values comply with the definitions and include the values set out in Annex II of the regulation. For this attribute, the allowed values are specified in code list <a href='http://inspire.ec.europa.eu/codelist/GrammaticalGenderValue'>http://inspire.ec.europa.eu/codelist/GrammaticalGenderValue</a>.<br/>For datasets using version 3 of the GML application schema, the value is the last path element of the code list value URI and it is in the child text node. For datasets using version 4 of the GML application schema, the value is in the xlink:href XML attribute and is the HTTP URI of the code list value.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects.  For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data/master/schemas/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_GN_v3.1.pdf">INSPIRE Data Specification on Geographical Names, A.1.3</a>]]></description>
									<parent ref="EIDa0d70432-7ad2-4e96-a841-8174422d272f"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $objects3 := $features/*/gn3:GeographicalName
let $objects4 := $features/*/gn:GeographicalName
let $messages := local:check-code-list-values($objects3, $objects4, 'grammaticalGender', 'http://inspire.ec.europa.eu/codelist/GrammaticalGenderValue', 1)
return (if ($messages) then 'FAILED' else 'PASSED', $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDc47e9dc5-4a53-4386-80b8-ccc9c9e292d1">
									<label>gmlas.d.3: NameStatus attributes</label>
									<description><![CDATA[When an attribute has a code list as its type, verify that the values comply with the definitions and include the values set out in Annex II of the regulation. For this attribute, the allowed values are specified in code list <a href='http://inspire.ec.europa.eu/codelist/NameStatusValue'>http://inspire.ec.europa.eu/codelist/NameStatusValue</a>.<br/>For datasets using version 3 of the GML application schema, the value is the last path element of the code list value URI and it is in the child text node. For datasets using version 4 of the GML application schema, the value is in the xlink:href XML attribute and is the HTTP URI of the code list value.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects.  For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data/master/schemas/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_GN_v3.1.pdf">INSPIRE Data Specification on Geographical Names, A.1.3</a>]]></description>
									<parent ref="EIDa0d70432-7ad2-4e96-a841-8174422d272f"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $objects3 := $features/*/gn3:GeographicalName
let $objects4 := $features/*/gn:GeographicalName
let $messages := local:check-code-list-values($objects3, $objects4, 'nameStatus', 'http://inspire.ec.europa.eu/codelist/NameStatusValue', 1)
return (if ($messages) then 'FAILED' else 'PASSED', $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID0c5fad56-5ce3-4dbe-a857-32f76af2250a">
									<label>gmlas.d.4: Nativeness attributes</label>
									<description><![CDATA[When an attribute has a code list as its type, verify that the values comply with the definitions and include the values set out in Annex II of the regulation. For this attribute, the allowed values are specified in code list <a href='http://inspire.ec.europa.eu/codelist/NativenessValue'>http://inspire.ec.europa.eu/codelist/NativenessValue</a>.<br/>For datasets using version 3 of the GML application schema, the value is the last path element of the code list value URI and it is in the child text node. For datasets using version 4 of the GML application schema, the value is in the xlink:href XML attribute and is the HTTP URI of the code list value.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects.  For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data/master/schemas/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_GN_v3.1.pdf">INSPIRE Data Specification on Geographical Names, A.1.3</a>]]></description>
									<parent ref="EIDa0d70432-7ad2-4e96-a841-8174422d272f"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $objects3 := $features/*/gn3:GeographicalName
let $objects4 := $features/*/gn:GeographicalName
let $messages := local:check-code-list-values($objects3, $objects4, 'nativeness', 'http://inspire.ec.europa.eu/codelist/NativenessValue', 1)
return (if ($messages) then 'FAILED' else 'PASSED', $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EID8e7df3fc-647d-4187-9e23-086922cec0f4">
					<label>Constraints</label>
					<description>Verify that the features provided in the dataset adhere to the constraints specified in the INSPIRE application schema. This is usually part of the tests of the corresponding application schema. However, for data types that are used across the INSPIRE application schemas, this is best done in this test suite to avoid duplicating the same test in many test suites. The relevant data types for the Annex I data themes with constraints are: GeographicalName.</description>
					<parent ref="EIDe4cb4ea3-b4d0-4fbb-9e17-2c52af446b7e"/>
					<testSteps>
						<TestStep id="EIDfaa8e4cb-51ff-4766-893a-d572dccddc5d">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID8e7df3fc-647d-4187-9e23-086922cec0f4"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID8511f623-b06c-400d-beee-b6068507089d">
									<label>gmlas.e.1: At least one of the two attributes pronunciationSoundLink and pronunciationIPA shall not be void</label>
									<description><![CDATA[At least one of the two attributes pronunciationSoundLink and pronunciationIPA shall not be void<br/><br/>
OCL: "inv: self.pronounciationIPA -> notEmpty() or self.pronounciationSoundLink -> notEmpty()"<br/><br/>
Verify that for all features either or both pronunciationSoundLink or pronunciationIPA is not void.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-gn/master/gn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_GN_v3.1.pdf">INSPIRE Data Specification on Geographical Names, A.1.6</a>]]></description>
									<parent ref="EIDfaa8e4cb-51ff-4766-893a-d572dccddc5d"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[*/*:GeographicalName/*:pronunciation[not(@xsi:nil='true') and not(*/*:pronunciationSoundLink[not(@xsi:nil='true')] or */*:pronunciationIPA[not(@xsi:nil='true')])]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'At least one of the two attributes pronunciationSoundLink and pronunciationIPA shall not be void, if the pronunciation property is provided.', 'additionalInfo' : '' }))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
			</testCases>
		</TestModule>
	</testModules>
</ExecutableTestSuite>
