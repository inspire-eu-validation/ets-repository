<?xml version="1.0" encoding="utf-8"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EIDd718e45d-8cdb-4876-957a-51a35ba9fafa" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 https://resources.etf-validator.net/schema/v2/val/ignoreRef.xsd">
	<itemHash>bQ==</itemHash>
	<remoteResource>https://github.com/inspire-eu-validation/ets-repository/tree/master/data-af/af-as</remoteResource>
	<localPath>/auto</localPath>
	<label>Conformance class: Application Schema, Agricultural and Aquaculture Facilities</label>
	<description><![CDATA[This test suite examines requirements associated with the application schema.<br/><br/>
Note that since both code-list-valued properties of this application schema may be extended without restrictions, there is no test case for code list values.<br/><br/>
<b>This is a draft version. It has limitations and is expected to contain errors.</b> Please report any issues or problems <a href="https://github.com/INSPIRE-MIF/helpdesk-validator" target="_blank">in GitHub</a>.<br/><br/>
Known limitations are documented in the description of the applicable test case or test assertion. There is a general limitation in all assertions that extensions in additional application schemas are only supported, if the unqualified name of the feature type in the extension is the same as the name of the feature type in the INSPIRE application schema.<br/><br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-af/master/af-as" target="_blank">Conformance Class 'Application schema, Agricultural and Aquaculture Facilities'</a><br/><br/>
Pre-requisite conformance classes:
<ul><li><a href="http://inspire.ec.europa.eu/id/ats/data-af/master/af-gml" target="_blank">Conformance Class 'GML application schemas, Agricultural and Aquaculture Facilities'</a></li></ul>]]></description>
	<reference>../../inspire-noggeo-bsxets.xq</reference>
	<version>0.1.0</version>
	<author>Consortium Bilbomatica, Guadaltel y Geograma</author>
	<creationDate>2021-03-31T12:30:00Z</creationDate>
	<lastEditor>Consortium Bilbomatica, Guadaltel y Geograma</lastEditor>
	<lastUpdateDate>2021-03-31T12:30:00Z</lastUpdateDate>
 	<tags>
		<tag ref="EID4a922b02-a384-45b8-91ff-e28e99009eff"/>
	</tags>
	<testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
	<translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
 	<ParameterList name="ETF Standard Parameters for XML test objects">
		<parameter name="files_to_test" required="true">
			<defaultValue>.*</defaultValue>
			<description ref="TR.filesToTest"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
		<parameter name="tests_to_execute" required="false">
			<defaultValue>.*</defaultValue>
			<description ref="TR.testsToExecute"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
	</ParameterList>
	<supportedTestObjectTypes>
		<testObjectType ref="EIDe1d4a306-7a78-4a3b-ae2d-cf5f0810853e"/>
	</supportedTestObjectTypes>
	<dependencies>
		<executableTestSuite ref="EID2e792ebf-e98e-42d3-850d-80bbb0b568b9"/>
	</dependencies>	
	<testModules>
		<TestModule id="EID7d3ae123-27d5-4e97-99a5-36cc63f345d8">
			<label>IGNORE</label>
			<description>IGNORE</description>
			<parent ref="EIDd718e45d-8cdb-4876-957a-51a35ba9fafa"/>
			<testCases>
				<TestCase id="EID660f1e95-a224-49c2-b6f3-2a607049af06">
					<label>Code list values defined by Activity Complex application schema</label>
					<description>Verify whether all attributes, defined by the Activity Complex application schema, whose value type is a code list take the values set out therein</description>
					<parent ref="EID7d3ae123-27d5-4e97-99a5-36cc63f345d8"/>
					<testSteps>
						<TestStep id="EIDa837a7a8-711b-47a7-ba40-b5de2ca6e724">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID660f1e95-a224-49c2-b6f3-2a607049af06"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EIDe629831a-8ca0-40c7-85a5-7ca0086bf9df">
									<label>af-as.a.1: activity</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/act-core-code-list-values#activity'>activity</a> elements have a <a href='http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/act-core-code-list-values#validValue1'>valid value</a>.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects.  For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/act-core-code-list-values" target="_blank">Abstract Test Case 'Code list values defined by Activity Complex application schema'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AF_v3.0.pdf">INSPIRE Data Specification on Agricultural and Aquaculture Facilities, A.1.3</a>]]></description>
									<parent ref="EIDa837a7a8-711b-47a7-ba40-b5de2ca6e724"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>

let $property_string := 'activity'
let $features_selected := $features[self::af:Holding]

let $messages := 

	for $feature in $features_selected/act-core:function/act-core:Function
		let $envDom := $feature/act-core:activity
		return
			if (not(exists($envDom))) then
				local:addMessage('TR.missingElement',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string})
			else if (not(count($envDom) = count($envDom/@xlink:href))) then
				local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string, 'attribute': 'xlink:href'})
		 	else (local:addMessage('TR.checkManuallyCodeListValue2', map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string, 'value': string-join($envDom/@xlink:href, ',')}))

return
(if ($messages and ($messages/@ref = ('TR.missingElement','TR.missingAttribute'))) then 'FAILED' 
else 'PASSED_MANUAL',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.checkManuallyCodeListValue2"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDdd230141-12b0-4b3c-aab3-0758f4e22627">
									<label>af-as.a.2: input output</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/act-core-code-list-values#input'>input</a> and <a href = 'http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/act-core-code-list-values#output'>output</a> elements have a <a href='http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/act-core-code-list-values#validValue2'>valid value</a>.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects.  For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/act-core-code-list-values" target="_blank">Abstract Test Case 'Code list values defined by Activity Complex application schema'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AF_v3.0.pdf">INSPIRE Data Specification on Agricultural and Aquaculture Facilities, A.1.36</a>]]></description>
									<parent ref="EIDa837a7a8-711b-47a7-ba40-b5de2ca6e724"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>

let $property_string_i := 'input'
let $property_string_o := 'output'
let $features_selected := $features[self::af:Holding]

let $messages_i := 

	for $feature in $features_selected/act-core:function/act-core:Function
		let $envDom := $feature/act-core:input
		return
			if (exists($envDom/@xlink:href)) then
				local:addMessage('TR.checkManuallyCodeListValue2', map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string_i, 'value': string-join($envDom/@xlink:href, ',')})
			else()

let $messages_o := 

	for $feature in $features_selected/act-core:function/act-core:Function
		let $envDom := $feature/act-core:output
		return 
		if (exists($envDom/@xlink:href)) then
			local:addMessage('TR.checkManuallyCodeListValue2', map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string_o, 'value': string-join($envDom/@xlink:href, ',')})
		else()


let $messages := ($messages_i, $messages_o)

return
('PASSED_MANUAL' ,
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)


									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.checkManuallyCodeListValue2"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
  				<TestCase id="EIDcc2ea174-ee13-4c6a-9879-31ac23b907fd">
					<label>Code lists</label>
					<description>Verify that code lists extensions can be accessed.</description>
					<parent ref="EID7d3ae123-27d5-4e97-99a5-36cc63f345d8"/>
					<testSteps>
						<TestStep id="EID7e1755a2-0d25-4592-9566-1e8a16be4d6c">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EIDcc2ea174-ee13-4c6a-9879-31ac23b907fd"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID454d9e4e-c179-4655-86af-22b2963e6c5f">
									<label>af-as.b.1: activity</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/code-list-values#activity'>activity</a> elements has a xlink:href attribute pointing to a <a href='http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/code-list-values#validValue1'>valid value</a>. If the check fails report disallowedCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid down  in  Article  4  of  Directive  2007/2/EC,  Member  States  shall  use  the  spatial  object  types  and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code lists shall be of one of the following types, as specified in the Annexes:<ol style="list-style-type:lower-alpha"><li>code lists whose allowed values comprise only the values specifiedin this Regulation;</li>
<li>code  lists  whose  allowed  values  comprise  the  values  specified  in  this  Regulation  and narrower values defined by data providers;</li>
<li>code  lists  whose  allowed  values  comprise  the  values  specified  in  this  Regulation  and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>For the purposes of points (b), (c) and (d), in addition to the allowed values, data providers may use the values specified inthe relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.
</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value.  Where  the  valid  values  of  a  hierarchical  code  list  are  specified  in  a  table  in  this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where,  for  anattribute  whose  type  is  a  code  list  as  referred  to  in  points  (b),  (c)  or  (d)  of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AF_v3.0.pdf">INSPIRE Data Specification on Agricultural and Aquaculture Facilities, A.1.3</a>]]></description>
									<parent ref="EID7e1755a2-0d25-4592-9566-1e8a16be4d6c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/EconomicActivityNACEValue'
let $codelisturl := 'https://inspire.ec.europa.eu/codelist/EconomicActivityNACEValue/EconomicActivityNACEValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $property_string := 'activity'
let $features_selected_h := $features[self::af:Holding]
let $features_selected_s := $features[self::af:Site]

let $messages_h := 

	for $feature in $features_selected_h/af:contains/af:Site
		let $envDom := $feature/af:activity

		return
			if (not(exists($envDom))) then
				local:addMessage('TR.missingElement',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string})
			else if (not(count($envDom) = count($envDom/@xlink:href))) then
				local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string, 'attribute': 'xlink:href'})	
			else if (not($envDom/@xlink:href = $valid_href)) then
				local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string, 'value': string($envDom/@xlink:href), 'codelist': $codelist})
			else ()

let $messages_s := 

	for $feature in $features_selected_s
		let $envDom := $feature/af:activity

		return
			if (not(exists($envDom))) then
				local:addMessage('TR.missingElement',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string})
			else if (not(count($envDom) = count($envDom/@xlink:href))) then
				local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string, 'attribute': 'xlink:href'})	
			else if (not($envDom/@xlink:href = $valid_href)) then
				local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string, 'value': string($envDom/@xlink:href), 'codelist': $codelist})
			else ()

let $messages:=($messages_h, $messages_s)

return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)

									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID28ef49d8-5d93-4f7b-ae1c-8fb8a0884a4c">
									<label>af-as.b.2: livestock</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/code-list-values#livestock'>livestock</a> elements has a xlink:href attribute pointing to a <a href='http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/code-list-values#predefinedValue1'>pre-defined value</a>. If the check fails a manual check will be required asking to review the code list definition in order to verify that any extensions do not overlap with the code lists that are defined in Annexes II, III and IV of the Implementing Rule. If the check fails report reviewCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid down  in  Article  4  of  Directive  2007/2/EC,  Member  States  shall  use  the  spatial  object  types  and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code lists shall be of one of the following types, as specified in the Annexes:<ol style="list-style-type:lower-alpha"><li>code lists whose allowed values comprise only the values specifiedin this Regulation;</li>
<li>code  lists  whose  allowed  values  comprise  the  values  specified  in  this  Regulation  and narrower values defined by data providers;</li>
<li>code  lists  whose  allowed  values  comprise  the  values  specified  in  this  Regulation  and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>For the purposes of points (b), (c) and (d), in addition to the allowed values, data providers may use the values specified inthe relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.
</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value.  Where  the  valid  values  of  a  hierarchical  code  list  are  specified  in  a  table  in  this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where,  for  anattribute  whose  type  is  a  code  list  as  referred  to  in  points  (b),  (c)  or  (d)  of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AF_v3.0.pdf">INSPIRE Data Specification on Agricultural and Aquaculture Facilities, A.1.3</a>]]></description>
									<parent ref="EID7e1755a2-0d25-4592-9566-1e8a16be4d6c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/LivestockSpeciesValue'
let $codelisturl := 'https://inspire.ec.europa.eu/codelist/LivestockSpeciesValue/LivestockSpeciesValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id

let $property_string := 'livestock'
let $features_selected_h := $features[self::af:Holding]
let $features_selected_s := $features[self::af:Site]
let $list_h := $features_selected_h/af:contains/af:Site/af:includesAnimal/af:FarmAnimalSpecies/af:livestock/@xlink:href
let $list_s := $features_selected_s/af:includesAnimal/af:FarmAnimalSpecies/af:livestock/@xlink:href
let $list := ($list_h, $list_s)

let $messages_h := 

	for $feature in $features_selected_h/af:contains/af:Site/af:includesAnimal/af:FarmAnimalSpecies
		let $envDom := $feature/af:livestock
		let $submessages_h := for $link in $envDom/@xlink:href
							let $iterlist:= for $elem in $list
									return if ($elem = $link)
										then $elem
										else ()

							return
								if (not($link = $valid_href)) then
									local:addMessage('TR.reviewCodeListValue',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'property': $property_string, 'value': string($link), 'count': count($iterlist)-1})
								else ()
		return $submessages_h

let $messages_s := 

	for $feature in $features_selected_s/af:includesAnimal/af:FarmAnimalSpecies
		let $envDom := $feature/af:livestock
		let $submessages_s := for $link in $envDom/@xlink:href
							let $iterlist:= for $elem in $list
									return if ($elem = $link)
										then $elem
										else ()

							return
								if (not($link = $valid_href)) then
									local:addMessage('TR.reviewCodeListValue',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string, 'value': string($link), 'count': count($iterlist)-1})
								else ()
		return $submessages_s

let $messages:=($messages_h, $messages_s)

return
(if ($messages) then 'PASSED_MANUAL' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)

									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.reviewCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDec4f4bff-7dc0-4bcc-a204-693c34ca29e0">
									<label>af-as.b.3: aquaculture</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/code-list-values#aquaculture'>aquaculture</a> elements has a xlink:href attribute pointing to a <a href='http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/code-list-values#validValue2'>valid value</a>.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid down  in  Article  4  of  Directive  2007/2/EC,  Member  States  shall  use  the  spatial  object  types  and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code lists shall be of one of the following types, as specified in the Annexes:<ol style="list-style-type:lower-alpha"><li>code lists whose allowed values comprise only the values specifiedin this Regulation;</li>
<li>code  lists  whose  allowed  values  comprise  the  values  specified  in  this  Regulation  and narrower values defined by data providers;</li>
<li>code  lists  whose  allowed  values  comprise  the  values  specified  in  this  Regulation  and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>For the purposes of points (b), (c) and (d), in addition to the allowed values, data providers may use the values specified inthe relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.
</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value.  Where  the  valid  values  of  a  hierarchical  code  list  are  specified  in  a  table  in  this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where,  for  anattribute  whose  type  is  a  code  list  as  referred  to  in  points  (b),  (c)  or  (d)  of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AF_v3.0.pdf">INSPIRE Data Specification on Agricultural and Aquaculture Facilities, A.1.3</a>]]></description>
									<parent ref="EID7e1755a2-0d25-4592-9566-1e8a16be4d6c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/AquacultureSpeciesValue'
let $codelisturl := 'https://inspire.ec.europa.eu/codelist/AquacultureSpeciesValue/AquacultureSpeciesValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id

let $property_string := 'aquaculture'
let $features_selected_h := $features[self::af:Holding]
let $features_selected_s := $features[self::af:Site]

let $messages_h := 

	for $feature in $features_selected_h/af:contains/af:Site/af:includesAnimal/af:FarmAnimalSpecies
		let $envDom := $feature/af:aquaculture

		return
			if (exists($envDom/@xlink:href)) then
				local:addMessage('TR.checkManuallyCodeListValue2',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'property': $property_string, 'value': string-join($envDom/@xlink:href, ',')})
			else ()

let $messages_s := 

	for $feature in $features_selected_s/af:includesAnimal/af:FarmAnimalSpecies
		let $envDom := $feature/af:aquaculture

		return
			if (exists($envDom/@xlink:href)) then
				local:addMessage('TR.checkManuallyCodeListValue2',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string, 'value':string-join($envDom/@xlink:href, ',')})
			else ()

let $messages:=($messages_h, $messages_s)

return
(if ($messages) then 'PASSED_MANUAL' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)

									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.checkManuallyCodeListValue2"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
  				<TestCase id="EIDc2a9af91-54ea-43ae-bce6-5b93f0648874">
					<label>Constraints</label>
					<description>Verify that the features provided in the dataset adhere to the constraints specified in the INSPIRE application schema.</description>
					<parent ref="EID7d3ae123-27d5-4e97-99a5-36cc63f345d8"/>
					<testSteps>
						<TestStep id="EID67530cea-6e12-4ca0-bbbc-143c38903f9e">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EIDc2a9af91-54ea-43ae-bce6-5b93f0648874"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID1acd410c-18d7-422a-916e-c54aff44742b">
									<label>af-as.c.1: function</label>
									<description><![CDATA[Check that at least one of the <a href = 'http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/constraints#function'>function</a> attributes of the Holding spatial object is provided using the <a href = 'http://inspire.ec.europa.eu/codelist/EconomicActivityNACEValue'>EconomicActivityNACEValue</a> code list for the <a href = 'http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/constraints#activity'>activity</a> attribute of the Function data type.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-af/master/af-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_AF_v3.0.pdf">INSPIRE Data Specification on Agricultural and Aquaculture Facilities, A.1.6</a>]]></description>
									<parent ref="EID67530cea-6e12-4ca0-bbbc-143c38903f9e"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features_selected := $features[self::af:Holding]
let $codelisturl := 'https://inspire.ec.europa.eu/codelist/EconomicActivityNACEValue/EconomicActivityNACEValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $messages :=
	for $feature in $features_selected
		let $correct_url := for $link in $feature/act-core:function/act-core:Function/act-core:activity/@xlink:href
					return if ($link = $valid_href)
						then ($link)
						else ()
		return
		if (count ($correct_url) = 0) then
			local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'Check that at least one of the function attributes of the Holding spatial object is provided using the EconomicActivityNACEValue code list for the activity attribute of the Function data type.', 'additionalInfo':''})
		else ()
return

(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>						
			</testCases>
		</TestModule>
	</testModules>
</ExecutableTestSuite>
