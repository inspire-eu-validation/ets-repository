<?xml version="1.0" encoding="utf-8"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EID63f586f0-080c-493b-8ca2-9919427440cc" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 https://resources.etf-validator.net/schema/v2/val/ignoreRef.xsd">
	<itemHash>bQ==</itemHash>
	<remoteResource>https://github.com/inspire-eu-validation/ets-repository/tree/master/blob/master/data/reference-systems/ets-reference-systems-bsxets.xml</remoteResource>
	<localPath>/auto</localPath>
	<label>Conformance class: Reference systems, General requirements</label>
	<description><![CDATA[This test suite examines a data set against the basic requirements related to reference systems (spatial and temporal, units of measurement). This test suite only examines requirements that are not specific to a data theme. Additional test cases will be defined per data theme, where needed.<br/><br/>
<b>This is a draft version. It has limitations and is expected to contain errors.</b>]]></description>
	<reference>../../inspire-bsxets.xq</reference>
	<version>0.2.2</version>
	<author>interactive instruments GmbH</author>
	<creationDate>2016-08-15T00:00:00Z</creationDate>
	<lastEditor>Consortium Bilbomatica, Guadaltel y Geograma</lastEditor>
	<lastUpdateDate>2022-05-02T11:30:00Z</lastUpdateDate>
	<tags>
		<tag ref="EIDaeed5629-2c33-4fa6-aa66-f59418abaa70"/>
	</tags>
	<testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
	<translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
	<ParameterList name="ETF Standard Parameters for XML test objects">
		<parameter name="files_to_test" required="true">
			<defaultValue>.*</defaultValue>
			<description ref="TR.filesToTest"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
		<parameter name="tests_to_execute" required="false">
			<defaultValue>.*</defaultValue>
			<description ref="TR.testsToExecute"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
	</ParameterList>
	<supportedTestObjectTypes>
		<testObjectType ref="EIDe1d4a306-7a78-4a3b-ae2d-cf5f0810853e"/>
	</supportedTestObjectTypes>
	<dependencies>
		<executableTestSuite ref="EID545f9e49-009b-4114-9333-7ca26413b5d4"/>
	</dependencies>
	<testModules>
		<TestModule id="EID047a97c5-f102-4e9e-8ad6-e8e0b39ec5e0">
			<label>IGNORE</label>
			<description>IGNORE</description>
			<parent ref="EID63f586f0-080c-493b-8ca2-9919427440cc"/>
			<testCases>
				<TestCase id="EID3f6ab9e4-f76b-4043-9e0d-498293f41972">
					<label>Spatial reference systems</label>
					<description>Verify that all references to spatial coordinate reference systems are using one of the http URIs approved for use in INSPIRE data sets.</description>
					<parent ref="EID047a97c5-f102-4e9e-8ad6-e8e0b39ec5e0"/>
					<testSteps>
						<TestStep id="EIDa0903ed7-7a6d-427d-ab0e-6e83ff50bb48">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID3f6ab9e4-f76b-4043-9e0d-498293f41972"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EIDdf2eceaf-f406-465f-80c3-61369d69e64f">
									<label>rs.a.1: Spatial reference systems in feature geometries</label>
									<description><![CDATA[Verify that all references to coordinate reference systems in the features (srsName) use one of the approved CRS URIs listed in TG requirement 2.<br/><br/>]]></description>
									<parent ref="EIDa0903ed7-7a6d-427d-ab0e-6e83ff50bb48"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $crsuris := (
'http://www.opengis.net/def/crs/EPSG/0/4936', 'http://www.opengis.net/def/crs/EPSG/0/4937', 'http://www.opengis.net/def/crs/EPSG/0/4258', 'http://www.opengis.net/def/crs/EPSG/0/3035', 'http://www.opengis.net/def/crs/EPSG/0/3034', 'http://www.opengis.net/def/crs/EPSG/0/3038', 'http://www.opengis.net/def/crs/EPSG/0/3039', 'http://www.opengis.net/def/crs/EPSG/0/3040', 'http://www.opengis.net/def/crs/EPSG/0/3041', 'http://www.opengis.net/def/crs/EPSG/0/3042', 'http://www.opengis.net/def/crs/EPSG/0/3043', 'http://www.opengis.net/def/crs/EPSG/0/3044', 'http://www.opengis.net/def/crs/EPSG/0/3045', 'http://www.opengis.net/def/crs/EPSG/0/3046', 'http://www.opengis.net/def/crs/EPSG/0/3047', 'http://www.opengis.net/def/crs/EPSG/0/3048', 'http://www.opengis.net/def/crs/EPSG/0/3049', 'http://www.opengis.net/def/crs/EPSG/0/3050', 'http://www.opengis.net/def/crs/EPSG/0/3051', 'http://www.opengis.net/def/crs/EPSG/0/5015', 'http://www.opengis.net/def/crs/EPSG/0/5014', 'http://www.opengis.net/def/crs/EPSG/0/5013', 'http://www.opengis.net/def/crs/EPSG/0/5730', 'http://www.opengis.net/def/crs/EPSG/0/7409', 'http://www.opengis.net/def/crs/EPSG/0/5621', 'http://www.opengis.net/def/crs/EPSG/0/9389', 'http://www.opengis.net/def/crs/EPSG/0/9390')
let $featuresWithErrors := $features[.//@srsName[not(. = $crsuris)]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $srsnames := $feature//@srsName[not(. = $crsuris)]
   return
     for $srsname in $srsnames return local:addMessage('TR.unknownCRS1', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'crs': string($srsname) }))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.unknownCRS1"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID5aa4e48c-7967-49a4-bff4-cda0188a2a82">
									<label>rs.a.2: Default spatial reference systems in feature collections</label>
									<description><![CDATA[Verify that all references to coordinate reference systems in the bounding box of the feature collection (srsName) use one of the CRS URIs listed in TG requirement 2.<br/><br/>]]></description>
									<parent ref="EIDa0903ed7-7a6d-427d-ab0e-6e83ff50bb48"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $crsuris := (
'http://www.opengis.net/def/crs/EPSG/0/4936', 'http://www.opengis.net/def/crs/EPSG/0/4937', 'http://www.opengis.net/def/crs/EPSG/0/4258', 'http://www.opengis.net/def/crs/EPSG/0/3035', 'http://www.opengis.net/def/crs/EPSG/0/3034', 'http://www.opengis.net/def/crs/EPSG/0/3038', 'http://www.opengis.net/def/crs/EPSG/0/3039', 'http://www.opengis.net/def/crs/EPSG/0/3040', 'http://www.opengis.net/def/crs/EPSG/0/3041', 'http://www.opengis.net/def/crs/EPSG/0/3042', 'http://www.opengis.net/def/crs/EPSG/0/3043', 'http://www.opengis.net/def/crs/EPSG/0/3044', 'http://www.opengis.net/def/crs/EPSG/0/3045', 'http://www.opengis.net/def/crs/EPSG/0/3046', 'http://www.opengis.net/def/crs/EPSG/0/3047', 'http://www.opengis.net/def/crs/EPSG/0/3048', 'http://www.opengis.net/def/crs/EPSG/0/3049', 'http://www.opengis.net/def/crs/EPSG/0/3050', 'http://www.opengis.net/def/crs/EPSG/0/3051', 'http://www.opengis.net/def/crs/EPSG/0/5015', 'http://www.opengis.net/def/crs/EPSG/0/5014', 'http://www.opengis.net/def/crs/EPSG/0/5013', 'http://www.opengis.net/def/crs/EPSG/0/5730', 'http://www.opengis.net/def/crs/EPSG/0/7409', 'http://www.opengis.net/def/crs/EPSG/0/5621', 'http://www.opengis.net/def/crs/EPSG/0/9389', 'http://www.opengis.net/def/crs/EPSG/0/9390')
let $filesWithErrors := $db[*/wfs:boundedBy/*/@srsName[not(. = $crsuris)] or */gml:boundedBy/*/@srsName[not(. = $crsuris)]][position() le $limitErrors]
return
(if ($filesWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.filesWithErrors', count($filesWithErrors)),
 for $file in $filesWithErrors
    order by local:filename($file)
    let $root := $file/element()
    let $srsnames := $file/*/*[local-name() = 'boundedBy']/*/@srsName[not(. = $crsuris)]
   return
     for $srsname in $srsnames return local:addMessage('TR.unknownCRS2', map { 'filename': local:filename($root), 'crs': string($srsname) }))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.unknownCRS2"/>
										<translationTemplate ref="TR.filesWithErrors"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EID9d1677e1-e2e3-4776-845c-1cce60649881">
					<label>Temporal reference systems</label>
					<description>Verify that all references to temporal coordinate reference systems are using one of the http URIs approved for use in INSPIRE data sets.</description>
					<parent ref="EID047a97c5-f102-4e9e-8ad6-e8e0b39ec5e0"/>
					<testSteps>
						<TestStep id="EIDf3993dd7-ecf9-4041-a376-0ff05e42bf71">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID9d1677e1-e2e3-4776-845c-1cce60649881"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID11310d1c-24e5-45da-9b50-b04f82200ffe">
									<label>rs.a.3: Temporal reference systems in features</label>
									<description><![CDATA[Verify that all references to coordinate reference systems in the features use one of the approved http URIs, i.e. check that all references to coordinate reference systems in the frame XML attributes in the features use the URI 'http://www.opengis.net/def/trs/ISO-8601/'.<br/><br/>]]></description>
									<parent ref="EIDf3993dd7-ecf9-4041-a376-0ff05e42bf71"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $crsuris := ( 'http://www.opengis.net/def/trs/ISO-8601' )
let $featuresWithErrors := $features[.//gml:TimeInstance/@frame[not(. = $crsuris)] | .//gml:TimeInstance/gml:timePosition/@frame[not(. = $crsuris)] | .//gml:TimePeriod/@frame[not(. = $crsuris)] | .//gml:TimePeriod/gml:beginPosition/@frame[not(. = $crsuris)] | .//gml:TimePeriod/gml:endPosition/@frame[not(. = $crsuris)]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   let $frames := $feature//@frame[not(. = $crsuris)]
   return
     for $frame in $frames return local:addMessage('TR.unknownTRS', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'trs': string($frame) }))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.unknownTRS"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
			</testCases>
		</TestModule>
	</testModules>
</ExecutableTestSuite>
