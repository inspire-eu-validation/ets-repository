<?xml version="1.0" encoding="utf-8"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EID4a6ad3fe-8ae8-467e-a6e4-aef6bdff8a66" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 https://resources.etf-validator.net/schema/v2/val/ignoreRef.xsd">
	<itemHash>bQ==</itemHash>
	<remoteResource>https://github.com/inspire-eu-validation/ets-repository/tree/master/data-sd/sd-as</remoteResource>
	<localPath>/auto</localPath>
	<label>Conformance class: Application schema, Species Distribution</label>
	<description><![CDATA[This test suite examines requirements associated with the application schema.<br/><br/>
Note that since both code-list-valued properties of this application schema may be extended without restrictions, there is no test case for code list values.<br/><br/>
<b>This is a draft version. It has limitations and is expected to contain errors.</b> Please report any issues or problems <a href="https://github.com/inspire-eu-validation/community/wiki/Your-feedback" target="_blank">in GitHub</a>.<br/><br/>
Known limitations are documented in the description of the applicable test case or test assertion. There is a general limitation in all assertions that extensions in additional application schemas are only supported, if the unqualified name of the feature type in the extension is the same as the name of the feature type in the INSPIRE application schema.<br/><br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sd/master/sd-as" target="_blank">Conformance Class 'Application schema, Species Distribution'</a><br/><br/>
Pre-requisite conformance classes:
<ul><li><a href="http://inspire.ec.europa.eu/id/ats/data-sd/master/sd-gml" target="_blank">Conformance Class 'GML application schemas, Species Distribution'</a></li></ul>]]></description>
	<reference>../../inspire-noggeo-bsxets.xq</reference>
	<version>0.1.0</version>
	<author>Consortium Bilbomatica, Guadaltel y Geograma</author>
	<creationDate>2020-08-04T14:30:00Z</creationDate>
	<lastEditor>Consortium Bilbomatica, Guadaltel y Geograma</lastEditor>
	<lastUpdateDate>2020-08-04T14:30:00Z</lastUpdateDate>
	<tags>
		<tag ref="EIDce23680b-d081-400e-93b0-030ed193b78e"/>
	</tags>
	<testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
	<translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
	<ParameterList name="ETF Standard Parameters for XML test objects">
		<parameter name="files_to_test" required="true">
			<defaultValue>.*</defaultValue>
			<description ref="TR.filesToTest"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
		<parameter name="tests_to_execute" required="false">
			<defaultValue>.*</defaultValue>
			<description ref="TR.testsToExecute"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
	</ParameterList>
	<supportedTestObjectTypes>
		<testObjectType ref="EIDe1d4a306-7a78-4a3b-ae2d-cf5f0810853e"/>
	</supportedTestObjectTypes>
	<dependencies>
		<executableTestSuite ref="EID42d4a7f6-361d-49c5-b88e-0a456908707e"/>
	</dependencies>
	<testModules>
		<TestModule id="EIDe72234c6-15f2-4be6-8f38-92fad508d02e">
			<label>IGNORE</label>
			<description>IGNORE</description>
			<parent ref="EID4a6ad3fe-8ae8-467e-a6e4-aef6bdff8a66"/>
			<testCases>
				<TestCase id="EID06c8a121-112a-4b0e-867b-c5f362588fdc">
					<label>Code list values</label>
					<description>Verify whether all attributes whose value type is a code list take the values set out therein.</description>
					<parent ref="EIDe72234c6-15f2-4be6-8f38-92fad508d02e"/>
					<testSteps>
						<TestStep id="EID6144d856-5bfa-43b5-af63-41c6832a8861">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID06c8a121-112a-4b0e-867b-c5f362588fdc"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID35077546-a02b-49e9-863b-1503a19fff5c">
									<label>sd-as.a.1: referenceSpeciesScheme</label>
									<description><![CDATA[Check that all the <a href='http://inspire.ec.europa.eu/id/ats/data-sd/master/sd-as/code-list-values#referenceSpeciesScheme'>referenceSpeciesScheme</a> elements has a xlink:href attribute pointing to a <a href='http://inspire.ec.europa.eu/codelist/ReferenceSpeciesSchemeValue'>valid value</a>. If the check fails report disallowedCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sd/master/sd-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SD_v3.0.pdf">INSPIRE Data Specification on Species Distribution, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID6144d856-5bfa-43b5-af63-41c6832a8861"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/ReferenceSpeciesSchemeValue'
let $codelisturl := 'http://inspire.ec.europa.eu/codelist/ReferenceSpeciesSchemeValue/ReferenceSpeciesSchemeValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $features_selected := $features[self::sd:SpeciesDistributionUnit]
let $messages :=
	for $feature in $features_selected
	let $envDom := $feature/sd:speciesName/sd:SpeciesNameType/sd:referenceSpeciesScheme
	return
		if(not($envDom)) then
			local:addMessage('TR.missingElementSpeciesInformation',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'referenceSpeciesScheme'}) 
		else if (count($envDom) != 1) then 
			local:addMessage('TR.wrongMultiplicitySpeciesDistribution',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'sd:referenceSpeciesScheme','multiplicity': 1, 'count':count($envDom)}) 
		else if(not($envDom/@xlink:href)) then
			local:addMessage('TR.missingAttributeSpeciesDistribution',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'attribute': '@xlink:href', 'property': 'referenceSpeciesScheme'}) 
		else if(not($envDom/@xlink:href = $valid_href)) then
			local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'referenceSpeciesScheme', 'value': string($envDom/@xlink:href), 'codelist': $codelist}) 
		else ()
return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElementSpeciesInformation"/>
										<translationTemplate ref="TR.wrongMultiplicitySpeciesDistribution"/>
										<translationTemplate ref="TR.missingAttributeSpeciesDistribution"/>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID3a438660-847b-4f1b-adb9-79ae12498fe9">
									<label>sd-as.a.2: referenceSpeciesId</label>
									<description><![CDATA[Check that all the <a href='http://inspire.ec.europa.eu/id/ats/data-sd/master/sd-as/code-list-values#referenceSpeciesId'>referenceSpeciesId</a> elements has a xlink:href attribute pointing to a valid value (<a href='https://inspire.ec.europa.eu/codelist/EuNomenCodeValue'>EuNomenCodeValue</a>, <a href='https://inspire.ec.europa.eu/codelist/EunisSpeciesCodeValue'>EunisSpeciesCodeValue</a> or <a href='https://inspire.ec.europa.eu/codelist/NatureDirectivesCodeValue'>NaturalDirectivesCodeValue</a>. If the check fails report disallowedCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects. For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sd/master/sd-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SD_v3.0.pdf">INSPIRE Data Specification on Species Distribution, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID6144d856-5bfa-43b5-af63-41c6832a8861"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $euCodelist := 'https://inspire.ec.europa.eu/codelist/EuNomenCodeValue'
let $eunisCodelist := 'https://inspire.ec.europa.eu/codelist/EunisSpeciesCodeValue'
let $natureCodelist := 'https://inspire.ec.europa.eu/codelist/NatureDirectivesCodeValue'
let $features_selected := $features[self::sd:SpeciesDistributionUnit]
let $messages :=
	for $feature in $features_selected
	let $urls := 
		for $x in $feature/sd:speciesName/sd:SpeciesNameType/sd:referenceSpeciesId/@xlink:href
			return $x

	let $map := local:check-resource-uris($urls, 30, true())
	let $invalid_urls :=
		for $href in $urls
			let $url := string($href)
			let $validuri := map:get($map, $url)
			return
				if ($validuri = 'notHTTP' or starts-with($validuri, 'EXCEPTION') or $validuri = 'idNotFound' or matches($validuri,'^\d{3}$')) then $url
				else ()
				
	let $envDom := $feature/sd:speciesName/sd:SpeciesNameType/sd:referenceSpeciesId

	return
		if (not($envDom)) then
			local:addMessage('TR.missingElementSpeciesInformation',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'referenceSpeciesId'}) 
		else if (count($envDom) != 1) then 
			local:addMessage('TR.wrongMultiplicitySpeciesDistribution',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'sd:referenceSpeciesId', 'multiplicity': 1, 'count':count($envDom)}) 
		else if (not($envDom/@xlink:href)) then
			local:addMessage('TR.missingAttributeSpeciesDistribution',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id),'attribute':'@xlink:href', 'property': 'referenceSpeciesId'}) 
		else if(not(starts-with($envDom/@xlink:href, 'http://www.eu-nomen.eu/portal/taxon.php?GUID=')) and not(starts-with($envDom/@xlink:href, 'https://eunis.eea.europa.eu/species/'))) then
			local:addMessage('TR.manual.disallowedCodeListValue',  map {'property': 'referenceSpeciesId', 'value': string($envDom/@xlink:href), 'codelist': $natureCodelist}) 
		else if($envDom/@xlink:href = $invalid_urls) then
			let $dummy := "aaa"
				return 
					if (starts-with($envDom/@xlink:href, 'http://www.eu-nomen.eu/portal/taxon.php?GUID=')) then
						local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'referenceSpeciesId', 'value': string($envDom/@xlink:href), 'codelist': $euCodelist}) 
					else if (starts-with($envDom/@xlink:href, 'https://eunis.eea.europa.eu/species/')) then
						local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'referenceSpeciesId', 'value': string($envDom/@xlink:href), 'codelist': $eunisCodelist}) 
					else ()
		else ()



return
(if ($messages and not($messages/@ref = ('TR.manual.disallowedCodeListValue'))) then 'FAILED' 
else if($messages and $messages/@ref = ('TR.manual.disallowedCodeListValue')) then 'PASSED_MANUAL' 
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElementSpeciesInformation"/>
										<translationTemplate ref="TR.wrongMultiplicitySpeciesDistribution"/>
										<translationTemplate ref="TR.missingAttributeSpeciesDistribution"/>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDe44e484d-c502-4c0d-8d49-ef9452eb55e8">
									<label>sd-as.a.3: qualifier</label>
									<description><![CDATA[Check that all the <a href='http://inspire.ec.europa.eu/id/ats/data-sd/master/sd-as/code-list-values#qualifier'>qualifier</a> elements (if present) has a xlink:href attribute pointing to a <a href='http://inspire.ec.europa.eu/codelist/QualifierValue'>valid value</a>. If the check fails report disallowedCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects. For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sd/master/sd-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SD_v3.0.pdf">INSPIRE Data Specification on Species Distribution, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID6144d856-5bfa-43b5-af63-41c6832a8861"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/QualifierValue'
let $codelisturl := 'http://inspire.ec.europa.eu/codelist/QualifierValue/QualifierValue.en.xml'
let $valid_hrefs := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id

let $features_selected := $features[self::sd:SpeciesDistributionUnit]
let $messages :=
	for $feature in $features_selected
		let $envDom := $feature/sd:speciesName/sd:SpeciesNameType/sd:qualifier

		let $validXlink :=
			for $valid_href in $valid_hrefs
				return
					if ($envDom/@xlink:href = $valid_href) then $valid_href
					else ()
		return
			if(count($validXlink) = 0 and exists($envDom/@xlink:href)) then
				local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'qualifier', 'value': string($envDom/@xlink:href), 'codelist': $codelist})
			else () 
return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.wrongMultiplicitySpeciesDistribution"/>
										<translationTemplate ref="TR.missingAttributeSpeciesDistribution"/>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID16c0bd32-4035-4e9f-9d49-8afb38d636fb">
									<label>sd-as.a.4: CountingMethodValue</label>
									<description><![CDATA[Check that all the <a href='http://inspire.ec.europa.eu/id/ats/data-sd/master/sd-as/code-list-values#countingMethod'>countingMethod</a> elements (if present) has a xlink:href attribute pointing to a <a href='http://inspire.ec.europa.eu/codelist/CountingMethodValue'>valid value</a>. If the check fails report disallowedCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects. For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sd/master/sd-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SD_v3.0.pdf">INSPIRE Data Specification on Species Distribution, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID6144d856-5bfa-43b5-af63-41c6832a8861"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/CountingMethodValue'
let $codelisturl := 'http://inspire.ec.europa.eu/codelist/CountingMethodValue/CountingMethodValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $features_selected := $features[self::sd:SpeciesDistributionUnit]
let $messages :=
	for $feature in $features_selected
	let $envDom := $feature/sd:distributionInfo/sd:DistributionInfoType/sd:populationSize/sd:PopulationSizeType/sd:countingMethod
	return
		if (exists($feature/sd:distributionInfo/sd:DistributionInfoType/sd:populationSize/sd:PopulationSizeType)) then
			let $dummy := "aaa"
			return
			if(not($envDom)) then
				local:addMessage('TR.missingElementSpeciesInformation',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'countingMethod'}) 
			else if (count($envDom) > 1) then 
				local:addMessage('TR.wrongMultiplicitySpeciesDistribution',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'sd:countingMethod', 'multiplicity': 1, 'count': count($envDom)}) 
			else if(not($envDom/@xlink:href = $valid_href)) then
				local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'countingMethod', 'value': string($envDom/@xlink:href), 'codelist': $codelist}) 
			else ()
		else ()
return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElementSpeciesInformation"/>
										<translationTemplate ref="TR.wrongMultiplicitySpeciesDistribution"/>
										<translationTemplate ref="TR.missingAttributeSpeciesDistribution"/>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
									</translationTemplates>
								</TestAssertion>

								<TestAssertion id="EID9fd6b992-9e6e-4c51-93a6-ee506ca1f52b">
									<label>sd-as.a.5: occurrenceCategory</label>
									<description><![CDATA[Check that all the <a href='http://inspire.ec.europa.eu/id/ats/data-sd/master/sd-as/code-list-values#occurrenceCategory'>occurrenceCategory</a> elements has a xlink:href attribute pointing to a <a href='http://inspire.ec.europa.eu/codelist/OccurrenceCategoryValue'>pre-defined value</a>. If the check fails a manual check will be required asking to review the code list definition in order to verify that any extensions do not overlap with the code lists that are defined in Annexes II, III and IV of the Implementing Rule. If the check fails report reviewCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects. For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sd/master/sd-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SD_v3.0.pdf">INSPIRE Data Specification on Species Distribution, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID6144d856-5bfa-43b5-af63-41c6832a8861"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/OccurrenceCategoryValue'
let $codelisturl := 'http://inspire.ec.europa.eu/codelist/OccurrenceCategoryValue/OccurrenceCategoryValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $features_selected := $features[self::sd:SpeciesDistributionUnit]
let $messages :=
	for $feature in $features_selected
	let $envDom := $feature/sd:distributionInfo/sd:DistributionInfoType/sd:occurrenceCategory
	return
		if (exists($feature/sd:distributionInfo/sd:DistributionInfoType)) then
			let $dummy := "aaa"
			return
			if(not($envDom)) then
				local:addMessage('TR.missingElementSpeciesInformation',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'countingMethod'}) 
			else if (count($envDom) > 1) then 
				local:addMessage('TR.wrongMultiplicitySpeciesDistribution',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'sd:countingMethod', 'multiplicity': 1, 'count': count($envDom)}) 
			else if(not($envDom/@xlink:href = $valid_href)) then
				local:addMessage('TR.manual.reviewCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'occurenceCategory', 'value': string($envDom/@xlink:href), 'count': count($features_selected/sd:distributionInfo/sd:DistributionInfoType/sd:occurrenceCategory/@xlink:href = $envDom/@xlink:href)}) 
			else ()
		else ()
return
(if ($messages and not($messages/@ref = ('TR.manual.reviewCodeListValue'))) then 'FAILED' 
else if($messages and $messages/@ref = ('TR.manual.reviewCodeListValue')) then 'PASSED_MANUAL' 
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElementSpeciesInformation"/>
										<translationTemplate ref="TR.wrongMultiplicitySpeciesDistribution"/>
										<translationTemplate ref="TR.missingAttributeSpeciesDistribution"/>
										<translationTemplate ref="TR.manual.reviewCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EID615f4467-7f6b-42a3-be4c-056677662aa8">
					<label>Constraints</label>
					<description>Verify that the features provided in the dataset adhere to the constraints specified in the INSPIRE application schema.</description>
					<parent ref="EIDe72234c6-15f2-4be6-8f38-92fad508d02e"/>
					<testSteps>
						<TestStep id="EIDc0b21a18-cbfa-4f2f-a221-929e2b1328ff">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID615f4467-7f6b-42a3-be4c-056677662aa8"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EIDf09714df-d25f-4022-a6a6-033796fc5e7e">
									<label>sd-as.b.1: geometry</label>
									<description><![CDATA[The following checks are performed for every feature in the dataset.<br/><br/>
Check that if the geometry of the Species Distribution Unit feature type has no value, a reference to a spatial object needs to be provided.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sd/master/sd-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SD_v3.0.pdf">INSPIRE Data Specification on Species Distribution, A.1.6</a>]]></description>
									<parent ref="EIDc0b21a18-cbfa-4f2f-a221-929e2b1328ff"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features_selected := $features[self::sd:SpeciesDistributionUnit]
let $messages :=
	for $feature in $features_selected

	let $spatialUrls := 
		for $x in $feature/sd:spatialObject/@xlink:href
			return $x

	let $spatialMap := local:check-resource-uris($spatialUrls, 30, true())
	let $spatial_invalid_urls :=
		for $href in $spatialUrls
			let $url := string($href)
			let $validuri := map:get($spatialMap, $url)
			return
				if ($validuri = 'notHTTP' or starts-with($validuri, 'EXCEPTION') or $validuri = 'idNotFound' or matches($validuri,'^\d{3}$')) then $url
				else ()
				
	let $geometryUrls := 
		for $x in $feature/sd:geometry/@xlink:href
			return $x

	let $geometryMap := local:check-resource-uris($geometryUrls, 30, true())
	let $geometry_invalid_urls :=
		for $href in $geometryUrls
			let $url := string($href)
			let $validuri := map:get($geometryMap, $url)
			return
				if ($validuri = 'notHTTP' or starts-with($validuri, 'EXCEPTION') or $validuri = 'idNotFound' or matches($validuri,'^\d{3}$')) then $url
				else ()


	return
		if(count($feature/sd:geometry) > 1) then
			local:addMessage('TR.wrongMultiplicitySpeciesDistribution',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'sd:geometry', 'multiplicity': 1, 'count': count($feature/sd:geometry)}) 
		else if(count($feature/sd:geometry) = 0 and count($feature/sd:spatialObject) > 1) then
			local:addMessage('TR.wrongMultiplicitySpeciesDistribution',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'sd:spatialObject', 'multiplicity': 1, 'count': count($feature/sd:spatialObject)}) 
		else if (exists($feature/sd:geometry/@xlink:href) and count($geometry_invalid_urls) > 0) then
			local:addMessage('TR.brokenLink',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'Geometry', 'value': string-join($geometry_invalid_urls, ',')}) 
		else if (count($feature/sd:geometry) = 0 and exists($feature/sd:spatialObject) and count($spatial_invalid_urls) > 0) then
			local:addMessage('TR.brokenLink',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'Spatial Object', 'value': string-join($spatial_invalid_urls, ',')}) 
		else if(not(has-children($feature/sd:geometry)) and not(exists($feature/sd:geometry/@xlink:href)) and not(exists($feature/sd:spatialObject))) then
			local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'if the geometry of the Species Distribution Unit feature type has no value, a reference to a spatial object needs to be provided.', 'additionalInfo':''})
		else ()
return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.wrongMultiplicitySpeciesDistribution"/>
										<translationTemplate ref="TR.constraintViolation"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>

				<TestCase id="EID28514a71-b5e6-4f12-9e84-8eeac4e60571">
					<label>Species Distribution theme-specific requirements</label>
					<description>Verify that the features provided in the dataset adhere to the theme-specific requirements specified in the INSPIRE application schema.</description>
					<parent ref="EIDe72234c6-15f2-4be6-8f38-92fad508d02e"/>
					<testSteps>
						<TestStep id="EID4f9342a5-a2f2-4411-ba22-6ce8a5960726">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID28514a71-b5e6-4f12-9e84-8eeac4e60571"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EIDe33e7435-865f-493c-8f26-0b4372750f63">
									<label>sd-as.c.1: specific-req</label>
									<description><![CDATA[The following checks shall be manually performed for every feature in the dataset.<br/><br/>
Verify that the features provided in the dataset adhere to the theme-specific requirements specified in the INSPIRE application schema.<br/><br/>
Relevant requirements:
<ul>
<li>Where grid representations of species distributions are needed, the Grid_ETRS89-LAEA as defined in Section 2.2.1 of Annex II shall be used.</li>
<li>For SpeciesDistributionUnit spatial objects:
<ul>
<li>if a species has not been actively searched for, the distributionInfo attribute shall be void with reason “unknown”,</li>
<li>and if a species has been actively searched for, but has not been found, the value of the attribute occurenceCategory of DistributionInfoType shall be “absent”."</li>
</ul>
</li><br/>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sd/master/sd-as/specific-req" target="_blank">Abstract Test Case 'Species Distribution theme-specific requirements'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SD_v3.0.pdf">INSPIRE Data Specification on Species Distribution, A.1.6</a>]]></description>
									<parent ref="EID4f9342a5-a2f2-4411-ba22-6ce8a5960726"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
			</testCases>
		</TestModule>
	</testModules>
</ExecutableTestSuite>
