<?xml version="1.0" encoding="utf-8"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EID793a9c8e-c24a-4b90-ad1e-9a5f12339d7a" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 https://resources.etf-validator.net/schema/v2/val/ignoreRef.xsd">
	<itemHash>bQ==</itemHash>
	<remoteResource>https://github.com/inspire-eu-validation/ets-repository/tree/master/data-sr/sr-as</remoteResource>
	<localPath>/auto</localPath>
	<label>Conformance class: Application schema, Sea Regions</label>
	<description><![CDATA[This test suite examines requirements associated with the application schema.<br/><br/>
Note that since both code-list-valued properties of this application schema may be extended without restrictions, there is no test case for code list values.<br/><br/>
<b>This is a draft version. It has limitations and is expected to contain errors.</b> Please report any issues or problems <a href="https://github.com/INSPIRE-MIF/helpdesk-validator/wiki/Your-feedback" target="_blank">in GitHub</a>.<br/><br/>
Known limitations are documented in the description of the applicable test case or test assertion. There is a general limitation in all assertions that extensions in additional application schemas are only supported, if the unqualified name of the feature type in the extension is the same as the name of the feature type in the INSPIRE application schema.<br/><br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as" target="_blank">Conformance Class 'Application schema, Sea Regions'</a><br/><br/>
Pre-requisite conformance classes:
<ul><li><a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-gml" target="_blank">Conformance Class 'GML application schemas, Sea Regions'</a></li></ul>]]></description>
	<reference>../../inspire-noggeo-bsxets.xq</reference>
	<version>0.1.0</version>
	<author>Consortium Bilbomatica, Guadaltel y Geograma</author>
	<creationDate>2021-02-04T14:00:00Z</creationDate>
	<lastEditor>Consortium Bilbomatica, Guadaltel y Geograma</lastEditor>
	<lastUpdateDate>2021-02-04T14:00:00Z</lastUpdateDate>
	<tags>
		<tag ref="EID2654e659-82d6-4584-a94b-f9cd75a817b7"/>
	</tags>
	<testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
	<translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
	<ParameterList name="ETF Standard Parameters for XML test objects">
		<parameter name="files_to_test" required="true">
			<defaultValue>.*</defaultValue>
			<description ref="TR.filesToTest"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
		<parameter name="tests_to_execute" required="false">
			<defaultValue>.*</defaultValue>
			<description ref="TR.testsToExecute"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
	</ParameterList>
	<supportedTestObjectTypes>
		<testObjectType ref="EIDe1d4a306-7a78-4a3b-ae2d-cf5f0810853e"/>
	</supportedTestObjectTypes>
	<dependencies>
		<executableTestSuite ref="EIDbfc36eb3-18f0-4284-9dae-6159f59866bc"/>
	</dependencies>
	<testModules>
		<TestModule id="EID5324f55d-f483-4ae7-b66b-8ed4d706d9c4">
			<label>IGNORE</label>
			<description>IGNORE</description>
			<parent ref="EID793a9c8e-c24a-4b90-ad1e-9a5f12339d7a"/>
			<testCases>
				<TestCase id="EIDe8fd839b-75a0-4259-878e-1df169f2e694">
					<label>Code list values</label>
					<description>Verify whether all attributes whose value type is a code list take the values set out therein.</description>
					<parent ref="EID5324f55d-f483-4ae7-b66b-8ed4d706d9c4"/>
					<testSteps>
						<TestStep id="EID18039d68-0d04-4d82-8264-6871d3eb1dc8">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EIDe8fd839b-75a0-4259-878e-1df169f2e694"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID0d9c1cdf-02a4-4bbe-9673-6fd024bf1252">
									<label>sr-as.a.1: waterLevel</label>
									<description><![CDATA[Check that all the <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/code-list-values#waterLevel">waterLevel</a> elements has a xlink:href attribute pointing to a <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/code-list-values#validValue1">valid value</a>. If the check fails report disallowedCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SR_v3.0.pdf">INSPIRE Data Specification on Sea Regions, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID18039d68-0d04-4d82-8264-6871d3eb1dc8"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/WaterLevelValue'
let $codelisturl := 'http://inspire.ec.europa.eu/codelist/WaterLevelValue/WaterLevelValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $features_selected := $features[self::sr:MarineCirculationZone | self::sr:Sea | self::sr:SeaArea]
let $features_selected2 := $features[self::sr:Coastline | self::sr:Shoreline]
let $messages :=
	for $features in $features_selected
	let $envDoms := $features/sr:extent
		for $feature in $envDoms
			let $envDom := $feature/sr:MarineExtent/sr:waterLevel
			return
				if (count($envDom) > 1) then 
					local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'sr:waterLevel','multiplicity': 1, 'count':count($envDom)}) 
				else if(exists($envDom) and not($envDom/@xlink:href)) then
					local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'attribute': '@xlink:href', 'property': 'waterLevel'}) 
				else if(exists($envDom) and not($envDom/@xlink:href = $valid_href)) then
					local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'waterLevel', 'value': string($envDom/@xlink:href), 'codelist': $codelist}) 
				else ()

let $messages2 :=
	for $feature in $features_selected2
	let $envDom := $feature/sr:waterLevel
	return
		if(not($envDom)) then
			local:addMessage('TR.missingElement',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'waterLevel'}) 
		else if (count($envDom) != 1) then 
			local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'sr:waterLevel','multiplicity': 1, 'count':count($envDom)}) 
		else if(exists($envDom/@xlink:href) and not($envDom/@xlink:href = $valid_href)) then
			local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'waterLevel', 'value': string($envDom/@xlink:href), 'codelist': $codelist}) 
		else ()

let $combined_messages := ($messages, $messages2)

return
(if ($combined_messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($combined_messages//etf:argument[@token='id']/text()))),
$combined_messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID62f3a768-ed8c-402b-912d-d08d33dbc783">
									<label>sr-as.a.2: highWaterLevel</label>
									<description><![CDATA[Check that all the <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/code-list-values#highWaterLevel">highWaterLevel</a> elements has a xlink:href attribute pointing to a <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/code-list-values#validValue1">valid value</a>. If the check fails report disallowedCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SR_v3.0.pdf">INSPIRE Data Specification on Sea Regions, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID18039d68-0d04-4d82-8264-6871d3eb1dc8"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/WaterLevelValue'
let $codelisturl := 'http://inspire.ec.europa.eu/codelist/WaterLevelValue/WaterLevelValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $features_selected := $features[self::sr:InterTidalArea]
let $messages :=
	for $feature in $features_selected
	let $envDom := $feature/sr:highWaterLevel
	return
		if(not($envDom)) then
			local:addMessage('TR.missingElement',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'highWaterLevel'}) 
		else if (count($envDom) != 1) then 
			local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'sr:highWaterLevel','multiplicity': 1, 'count':count($envDom)}) 
		else if(exists($envDom) and not($envDom/@xlink:href)) then
			local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'attribute': '@xlink:href', 'property': 'highWaterLevel'}) 
		else if(exists($envDom/@xlink:href) and not($envDom/@xlink:href = $valid_href)) then
			local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'highWaterLevel', 'value': string($envDom/@xlink:href), 'codelist': $codelist}) 
		else ()

return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID24ab436f-985c-4799-8bb8-1e73d3a71426">
									<label>sr-as.a.3: lowWaterLevel</label>
									<description><![CDATA[Check that all the <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/code-list-values#lowWaterLevel">lowWaterLevel</a> elements has a xlink:href attribute pointing to a <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/code-list-values#validValue1">valid value</a>. If the check fails report disallowedCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SR_v3.0.pdf">INSPIRE Data Specification on Sea Regions, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID18039d68-0d04-4d82-8264-6871d3eb1dc8"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/WaterLevelValue'
let $codelisturl := 'http://inspire.ec.europa.eu/codelist/WaterLevelValue/WaterLevelValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $features_selected := $features[self::sr:InterTidalArea]
let $messages :=
	for $feature in $features_selected
	let $envDom := $feature/sr:lowWaterLevel
	return
		if(not($envDom)) then
			local:addMessage('TR.missingElement',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'lowWaterLevel'}) 
		else if (count($envDom) != 1) then 
			local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'sr:lowWaterLevel','multiplicity': 1, 'count':count($envDom)}) 
		else if(exists($envDom) and not($envDom/@xlink:href)) then
			local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'attribute': '@xlink:href', 'property': 'lowWaterLevel'}) 
		else if(exists($envDom/@xlink:href) and not($envDom/@xlink:href = $valid_href)) then
			local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'lowWaterLevel', 'value': string($envDom/@xlink:href), 'codelist': $codelist}) 
		else ()

return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID3592f63c-b8b7-42d0-8fa6-3673df5e626c">
									<label>sr-as.a.4: composition</label>
									<description><![CDATA[Check that all the <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/code-list-values#composition">composition</a> elements has a xlink:href attribute pointing to a <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/code-list-values#validValue1">valid value</a>. If the check fails report disallowedCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SR_v3.0.pdf">INSPIRE Data Specification on Sea Regions, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID18039d68-0d04-4d82-8264-6871d3eb1dc8"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/ShoreTypeValue'
let $codelisturl := 'http://inspire.ec.europa.eu/codelist/ShoreTypeValue/ShoreTypeValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $features_selected := $features[self::sr:InterTidalArea]
let $messages :=
	for $feature in $features_selected
	let $envDom := $feature/hy-p:composition
	return
		if(not($envDom)) then
			local:addMessage('TR.missingElement',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'composition'}) 
		else if (count($envDom) != 1) then 
			local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'sr:composition','multiplicity': 1, 'count':count($envDom)}) 
		else if(exists($envDom/@xlink:href) and not($envDom/@xlink:href = $valid_href)) then
			local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'composition', 'value': string($envDom/@xlink:href), 'codelist': $codelist}) 
		else ()

return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EIDc0932bcb-025b-4413-83fd-1f7f5ad2cc15">
					<label>Constraints</label>
					<description>Verify that the features provided in the dataset adhere to the constraints specified in the INSPIRE application schema.</description>
					<parent ref="EID5324f55d-f483-4ae7-b66b-8ed4d706d9c4"/>
					<testSteps>
						<TestStep id="EIDe80790c7-d4e0-47f0-bc44-8ee2c9a5415d">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EIDc0932bcb-025b-4413-83fd-1f7f5ad2cc15"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EIDd021a9aa-813c-43a0-905a-7f7f7fa235f9">
									<label>sr-as.b.1: meanHighWater.waterLevel</label>
									<description><![CDATA[The following checks are performed for every feature in the dataset.<br/><br/>
Check that the <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/constraints#waterLevelSea">waterLevel</a> element of the spatial object type "Sea" is 'meanHighWater' (i.e. <a href="http://inspire.ec.europa.eu/codelist/WaterLevelValue/meanHighWater">http://inspire.ec.europa.eu/codelist/WaterLevelValue/meanHighWater</a>) (OCL: " inv: self.extent.waterLevel = 'meanHighWater' "). Sea is defined at Mean High Water, but this constraint can be relaxed if there is not significant tidal variation in water level. --> " Add description of the eventually manual test and related error message"<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SR_v3.0.pdf">INSPIRE Data Specification on Sea Regions, A.1.6</a>]]></description>
									<parent ref="EIDe80790c7-d4e0-47f0-bc44-8ee2c9a5415d"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features_selected := $features[self::sr:Sea]
let $messages :=
	for $features in $features_selected
		let $envDoms := $features/sr:extent
		for $feature in $envDoms
		let $envDom := $feature/sr:MarineExtent/sr:waterLevel
		return
			if(count($envDom) > 1) then
				local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'sr:waterLevel', 'multiplicity': 1, 'count': count($envDom)}) 
			else if(exists($envDom) and not($envDom/@xlink:href)) then
				local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'attribute': '@xlink:href', 'property': 'waterLevel'}) 
			else if(exists($envDom) and not($envDom/@xlink:href = 'http://inspire.ec.europa.eu/codelist/WaterLevelValue/meanHighWater')) then
				local:addMessage('TR.noTidalVariationCheck', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'property': 'waterLevel', 'value': string($envDom/@xlink:href)})
			else ()
return
(if ($messages and not($messages/@ref = ('TR.noTidalVariationCheck'))) then 'FAILED' 
else if($messages and $messages/@ref = ('TR.noTidalVariationCheck')) then 'PASSED_MANUAL' 
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.noTidalVariationCheck"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDba3570a8-c9e3-4d1d-abdf-03f215909c41">
									<label>sr-as.b.2: Coastline.waterLevel</label>
									<description><![CDATA[The following checks are performed for every feature in the dataset.<br/><br/>
Check that the <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/constraints#waterLevelCoastline">waterLevel</a> element of the spatial object type "Coastline" is 'meanHighWater' (i.e. http://inspire.ec.europa.eu/codelist/WaterLevelValue/meanHighWater). Coastline is a special case of shoreline at Mean High Water Level (MHW). Coastline is the boundary between land and sea to be used for viewing, discovery and general purpose applications where a land/marine boundary is required. Where there is no significant variation in water level, Mean Sea Level (MSL) (i.e. http://inspire.ec.europa.eu/codelist/WaterLevelValue/meanSeaLevel) can be used as a substitute for MHW.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SR_v3.0.pdf">INSPIRE Data Specification on Sea Regions, A.1.6</a>]]></description>
									<parent ref="EIDe80790c7-d4e0-47f0-bc44-8ee2c9a5415d"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features_selected := $features[self::sr:Coastline]
let $messages :=
	for $feature in $features_selected
		let $envDom := $feature/sr:waterLevel
		return
			if(not($envDom)) then
				local:addMessage('TR.missingElement',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': 'waterLevel'}) 
			else if(count($envDom) > 1) then
				local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'sr:waterLevel', 'multiplicity': 1, 'count': count($envDom)}) 
			else if(exists($envDom/@xlink:href) and not($envDom/@xlink:href = 'http://inspire.ec.europa.eu/codelist/WaterLevelValue/meanHighWater') and exists($envDom) and not($envDom/@xlink:href = 'http://inspire.ec.europa.eu/codelist/WaterLevelValue/meanSeaLevel')) then
				local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'the waterLevel element of the spatial object type Coastline is meanHighWater or meanSeaLevel', 'additionalInfo':''})
			else ()
return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.constraintViolation"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID6aec44a5-f1b3-40fe-9885-c684827c0eba">
									<label>sr-as.b.3: geometry</label>
									<description><![CDATA[The following checks are performed for every feature in the dataset.<br/><br/>
Check that the <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/constraints#geometry">geometry</a> of the spatial object types "SeaSurfaceArea" and "SeaBedArea" is a surface or a point. A Marine Layer (SeaSurfaceArea or SeaBedArea) can be represented as either a surface or a point. The point type geometry reflects the reality that many Marine Layers are identified by point observations. (OCL: " inv:self.geometry.oclIsKindOf(GM_Point) OR self.geometry.oclIsKindOf(GM_Surface) ").<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SR_v3.0.pdf">INSPIRE Data Specification on Sea Regions, A.1.6</a>]]></description>
									<parent ref="EIDe80790c7-d4e0-47f0-bc44-8ee2c9a5415d"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features_selected := $features[self::sr:SeaBedArea|self::sr:SeaSurfaceArea]
let $messages :=
	for $feature in $features_selected
		let $envDom := $feature/sr:geometry
		return
			if(count($envDom) > 1) then
				local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'sr:geometry', 'multiplicity': 1, 'count': count($envDom)}) 
			else if(exists($envDom) and not(exists($envDom/gml:Surface)) and not(exists($envDom/gml:Point))) then
				local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'the geometry element is represented as either a surface or a point', 'additionalInfo':''})
			else ()
return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.constraintViolation"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID18ccd2e5-736a-49bb-a82a-856b63ce5e59">
									<label>sr-as.b.4: extent</label>
									<description><![CDATA[The following checks are performed for every feature in the dataset.<br/><br/>
CCheck that the <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/constraints#extent">extent</a> element of the spatial object types "Sea" and "MarineCirculationZone" has multiplicity 1.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SR_v3.0.pdf">INSPIRE Data Specification on Sea Regions, A.1.6</a>]]></description>
									<parent ref="EIDe80790c7-d4e0-47f0-bc44-8ee2c9a5415d"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features_selected := $features[self::sr:MarineCirculationZone|self::sr:Sea]
let $messages :=
	for $feature in $features_selected
		let $envDom := $feature/sr:extent
		return
			if (not(exists($envDom))) then
				local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'the extent element has multiplicity 1', 'additionalInfo':''})
			else if(count($envDom) > 1) then
				local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'the extent element has multiplicity 1', 'additionalInfo':''})
			else ()
return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EID7a8f4709-cf0f-4fd6-bde5-01759ba1b44a">
					<label>Sea Regions theme-specific requirements</label>
					<description>Verify that the features provided in the dataset adhere to the theme-specific requirements specified in the INSPIRE application schema.</description>
					<parent ref="EID5324f55d-f483-4ae7-b66b-8ed4d706d9c4"/>
					<testSteps>
						<TestStep id="EID072cee6a-4221-4cf6-8963-330cd65fe720">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID7a8f4709-cf0f-4fd6-bde5-01759ba1b44a"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID096e31c7-2481-46a5-b3a1-6ef6b4489124">
									<label>sr-as.c.1: specific-req.1</label>
									<description><![CDATA[The following checks shall be manually performed for every feature in the dataset.<br/><br/>
Relevant requirements:
<ul>
<li>The Sea spatial object type shall be used to describe identified, named areas of sea (or ocean). Artificial reporting units are excluded from this requirement.</li>
<br/>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/specific-req" target="_blank">Abstract Test Case 'Sea Regions theme-specific requirements'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SR_v3.0.pdf">INSPIRE Data Specification on Sea Regions, A.1.6</a>]]></description>
									<parent ref="EID072cee6a-4221-4cf6-8963-330cd65fe720"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
								<TestAssertion id="EIDab09e041-76a4-4d06-82b3-717cf3be27f2">
									<label>sr-as.c.2: specific-req.2</label>
									<description><![CDATA[The following checks shall be manually performed for every feature in the dataset.<br/><br/>
Relevant requirements:
<ul>
<li>The low water level used to define an IntertidalArea shall be provided as a value of the lowWaterLevel attribute. The level shall be a low water level.</li>
<br/>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/specific-req" target="_blank">Abstract Test Case 'Sea Regions theme-specific requirements'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SR_v3.0.pdf">INSPIRE Data Specification on Sea Regions, A.1.6</a>]]></description>
									<parent ref="EID072cee6a-4221-4cf6-8963-330cd65fe720"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
								<TestAssertion id="EIDa9f56f41-c33b-4111-aeef-a15af343f323">
									<label>sr-as.c.3: specific-req.3</label>
									<description><![CDATA[The following checks shall be manually performed for every feature in the dataset.<br/><br/>
Relevant requirements:
<ul>
<li>SeaAreas shall be represented as 2-dimensional geometries.</li>
<br/>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/specific-req" target="_blank">Abstract Test Case 'Sea Regions theme-specific requirements'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SR_v3.0.pdf">INSPIRE Data Specification on Sea Regions, A.1.6</a>]]></description>
									<parent ref="EID072cee6a-4221-4cf6-8963-330cd65fe720"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
								<TestAssertion id="EID70373566-5852-4d3a-96ba-50e3b8cd92b4">
									<label>sr-as.c.4: specific-req.4</label>
									<description><![CDATA[The following checks shall be manually performed for every feature in the dataset.<br/><br/>
Relevant requirements:
<ul>
<li>The code lists defined in the spatial data theme Oceanographic Geographical Features shall be used to identify phenomena represented by MarineContour spatial object types.</li>
<br/>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/specific-req" target="_blank">Abstract Test Case 'Sea Regions theme-specific requirements'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SR_v3.0.pdf">INSPIRE Data Specification on Sea Regions, A.1.6</a>]]></description>
									<parent ref="EID072cee6a-4221-4cf6-8963-330cd65fe720"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
								<TestAssertion id="EIDb136e2bf-d279-47dd-baeb-4cf32fd63508">
									<label>sr-as.c.5: specific-req-waterLevel</label>
									<description><![CDATA[The following checks shall be manually performed for every feature in the dataset.<br/><br/>
Relevant requirements:
<ul>
<li>The MarineExtent of a Sea spatial object shall have a waterlevel value equal to “MeanHighWater”, unless there is no appreciable change in the Sea extent due to tides, in which case a value of “MeanSeaLevel” may be used.</li>
<br/>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-sr/master/sr-as/specific-req" target="_blank">Abstract Test Case 'Sea Regions theme-specific requirements'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SR_v3.0.pdf">INSPIRE Data Specification on Sea Regions, A.1.6</a>]]></description>
									<parent ref="EID072cee6a-4221-4cf6-8963-330cd65fe720"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features_selected := $features[self::sr:Sea]
let $messages :=
	for $features in $features_selected
		let $envDoms := $features/sr:extent
		for $feature in $envDoms
		let $envDom := $feature/sr:MarineExtent/sr:waterLevel
		return
			if(count($envDom) > 1) then
				local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': 'sr:waterLevel', 'multiplicity': 1, 'count': count($envDom)}) 
			else if(exists($envDom) and not($envDom/@xlink:href)) then
				local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'attribute': '@xlink:href', 'property': 'waterLevel'}) 
			else if(exists($envDom) and not($envDom/@xlink:href = 'http://inspire.ec.europa.eu/codelist/WaterLevelValue/meanHighWater')) then
				local:addMessage('TR.noTidalVariationCheck', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'property': 'waterLevel', 'value': string($envDom/@xlink:href)})
			else ()
return
(if ($messages and not($messages/@ref = ('TR.noTidalVariationCheck'))) then 'FAILED' 
else if($messages and $messages/@ref = ('TR.noTidalVariationCheck')) then 'PASSED_MANUAL' 
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)		
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.noTidalVariationCheck"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
			</testCases>
		</TestModule>
	</testModules>
</ExecutableTestSuite>
