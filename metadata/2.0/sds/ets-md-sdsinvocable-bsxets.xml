<?xml version="1.0" encoding="utf-8"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EID8db54d8a-8578-4959-b891-5394d9f53a28" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 ../../schema/model/resultSet.xsd">
	<itemHash>bQ==</itemHash>
	<remoteResource>https://github.com/inspire-eu-validation/ets-repository/tree/master/metadata/2.0</remoteResource>
	<localPath>/auto</localPath>
	<label>Conformance Class 5: INSPIRE Invocable Spatial Data Services metadata.</label>
	<description><![CDATA[This test suite examines metadata records against the requirements for metadata in INSPIRE.<br/><br/>
Please report any issues or problems <a href="https://github.com/INSPIRE-MIF/helpdesk-validator/wiki/Your-feedback" target="_blank">in GitHub</a>.<br/><br/>
Known limitations are documented in the description of the applicable test case or test assertion.<br/><br/>
There is a general limitation in all assertions that polymorphism and containment by reference (see the <a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/common/README#ref_TG_MD" target="_blank">Technical Guidance</a>, sub-clauses A.3, A.4 and A.5) are not supported. However, the current Abstract Test Suite does not support polymorphism and references either (all XPath expressions do not support polymorhism or references; in addition, schema validation is only executed against the ISO/OGC schemas without extensions). It is therefore unclear if this is really a limitation or if the sections in the technical guidance are outdated.
<br/><br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/sds-invocable" target="_blank">Conformance Class 5: 'INSPIRE Invocable Spatial Data Services metadata'</a>
<br/><br/>
Pre-requisite conformance classes: Conformance Class 4]]>
	</description>
	<reference>../../../inspire-md-bsxets.xq</reference>
	<version>1.0.1</version>
	<author>Consortium Bilbomatica, Guadaltel y Geograma</author>
	<creationDate>2018-06-30T00:00:00Z</creationDate>
	<lastEditor>Consortium Bilbomatica, Guadaltel y Geograma</lastEditor>
	<lastUpdateDate>2021-03-17T12:30:00Z</lastUpdateDate>
	<tags>
		<tag ref="EIDc6567beb-fc33-4f2e-865d-0c3ee5b3d1ae" />
	</tags>
	<testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130" />
	<translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52" />
	<ParameterList name="ETF Standard Parameters for metadata XML test objects">
		<!-- TODO clean up, currently disabled due to open issues with schema validation
		<parameter name="encoding" required="false">
			<defaultValue>CSW ISO AP 1.0.0</defaultValue>
			<description ref="TR.metadataEncoding"/>
			<allowedValues>^(CSW ISO AP 1\.0\.0|ISO/TS 19139)$</allowedValues>
			<type>string</type>
		</parameter>
		<parameter name="Schema_file" required="false">
			<description ref="TR.metadataSchema"/>
			<allowedValues>^(apiso\.xsd|gmd\.xsd|apiso-csw\.xsd|gmd-csw\.xsd)?$</allowedValues>
			<type>string</type>
		</parameter>
		-->
		<parameter name="files_to_test" required="true">
			<defaultValue>.*</defaultValue>
			<description ref="TR.filesToTest" />
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
		<parameter name="tests_to_execute" required="false">
			<defaultValue>.*</defaultValue>
			<description ref="TR.testsToExecute" />
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
	</ParameterList>
	<supportedTestObjectTypes>
		<testObjectType ref="EID5a60dded-0cb0-4977-9b06-16c6c2321d2e" />
	</supportedTestObjectTypes>
	<dependencies>
		<executableTestSuite ref="EID8f869e23-c9e9-4e86-8dca-be30ff421229" />
	</dependencies>
	<testModules>
		<TestModule id="EID86ef2bf7-382d-44b0-903b-3ae781275324">
			<label>IGNORE</label>
			<description>IGNORE</description>
			<parent ref="EID8db54d8a-8578-4959-b891-5394d9f53a28" />
			<testCases>
				<TestCase id="EID42fddc05-782b-405f-b5da-9fe23ca82903">
					<label>Identification</label>
					<description>Execute tests that apply for invocable metadata records on elements that are child
					 elements of the section of the XML document: Identification Info (property of the gmd:MD_Metadata element). 
					 This section contains information specific to the invocable services.</description>
					<parent ref="EID86ef2bf7-382d-44b0-903b-3ae781275324" />
					<testSteps>
						<TestStep id="EID1caa9aef-495c-4578-8f7a-3f94c01e902a">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID42fddc05-782b-405f-b5da-9fe23ca82903" />
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0" />
							<testAssertions>
								<TestAssertion id="EIDEID6a383435-fe64-46b8-9b67-a5ba2494879e">
									<label>md sds-invocable 5.1: Spatial Data Service Type</label>
									<description>
										<![CDATA[<p>Test that a valid service type value for invocable spatial data services is provided.</p>
                                    <p>More information: <a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/sds-invocable/sds-type" target="_blank">SDS Type</a></p>]]>
									</description>
									<parent ref="EID1caa9aef-495c-4578-8f7a-3f94c01e902a" />
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
										<!-- DONE -->
										let $messages :=
		let $spatialDataServiceTypeCodeListURL := 'http://inspire.ec.europa.eu/metadata-codelist/SpatialDataServiceType'
		return
		(for $record in $records
		 	let $rid := $record/gmd:fileIdentifier/*/text()
		 	let $type := $record/gmd:identificationInfo[1]/srv:SV_ServiceIdentification/srv:serviceType/gco:LocalName/text()
		 	return
			if (not(count($type) = 1)) then
				local:addMessage('TR.exactlyOneServiceType', map { 'filename': local:filename($record), 'id': $rid, 'count': string(count($type)) })
			else if(not($type = 'other')) then
				local:addMessage('TR.noTypeFromSpatialDataServiceType',  map { 'filename': local:filename($record), 'id': $rid, 'url': $spatialDataServiceTypeCodeListURL, 'type': $type })
			else ()
		)[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
	local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a" />
									<translationTemplates>
										<translationTemplate ref="TR.recordsWithErrors" />
										<translationTemplate ref="TR.exactlyOneServiceType" />
										<translationTemplate ref="TR.noTypeFromSpatialDataServiceType" />
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EID46e22aa5-2c47-4d6f-8d66-943c85c64ed4">
					<label>Identification</label>
					<description>Execute tests that apply for invocable services metadata records on elements that 
					are child elements of the section of the XML document: Distribution Information (property of 
					the gmd:MD_Metadata element). This section contains information about who makes a resource 
					available and how to get it.</description>
					<parent ref="EID86ef2bf7-382d-44b0-903b-3ae781275324" />
					<testSteps>
						<TestStep id="EIDaf111459-afad-4d26-8de4-b9207bc44098">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID46e22aa5-2c47-4d6f-8d66-943c85c64ed4" />
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0" />
							<testAssertions>
								<TestAssertion id="EIDEID1578f1a6-aa1b-4375-89d7-8f2a5fb158ce">
									<label>md sds-invocable 5.2: Resource Locator</label>
									<description>
										<![CDATA[<p>Test that is provided the access point of the service.</p>
                                    <p>More information: <a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/sds-invocable/access-point" target="_blank">Access Point</a></p>]]>
									</description>
									<parent ref="EIDaf111459-afad-4d26-8de4-b9207bc44098" />
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
										<!-- DONE -->
										let $messages :=
	(for $record in $records
		let $onlineResource := $record/gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine/gmd:CI_OnlineResource[1]
		let $accessUrl := $record/gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine/gmd:CI_OnlineResource/gmd:linkage/gmd:URL
		let $accessText := $record/gmd:distributionInfo/gmd:MD_Distribution/gmd:transferOptions/gmd:MD_DigitalTransferOptions/gmd:onLine/gmd:CI_OnlineResource/gmd:description/gmx:Anchor/@xlink:href='http://inspire.ec.europa.eu/metadata-codelist/OnLineDescriptionCode/accessPoint'
		let $rid := $record/gmd:fileIdentifier/*/text()
		return
		if (count($onlineResource) = 0) then
			local:addMessage('TR.noOnlineResource', map { 'filename': local:filename($record), 'id': $rid, 'count': string(count($onlineResource)) })
		else if (count($accessUrl) = 0) then
			local:addMessage('TR.noAccessUrl', map { 'filename': local:filename($record), 'id': $rid, 'count': string(count($accessUrl)) })
		else if (not($accessText)) then
			local:addMessage('TR.noAccessText', map { 'filename': local:filename($record), 'id': $rid, 'count': string(count($accessText)) })
		else()
	)[position() le $limitErrors]
return
 (if ($messages//@ref = ('TR.noOnlineResource','TR.noAccessUrl','TR.noAccessText','TR.systemError')) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a" />
									<translationTemplates>
										<translationTemplate ref="TR.recordsWithErrors" />
										<translationTemplate ref="TR.noOnlineResource" />
										<translationTemplate ref="TR.noAccessUrl" />
										<translationTemplate ref="TR.noAccessText" />
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EIDe466fd65-f9e9-4871-bb1e-8a6ac6a0e6fd">
					<label>Data Quality</label>
					<description>Execute tests that apply for interoperable services metadata records on elements 
					that are child elements of the section of the XML document: Data Quality Information (property 
					of the gmd:MD_Metadata element). This section contains information specific to the quality and 
					lineage (including processing steps and sources) of the resource.</description>
					<parent ref="EID86ef2bf7-382d-44b0-903b-3ae781275324" />
					<testSteps>
						<TestStep id="EID81f60686-9bc6-4073-8081-cb52eeaa7701">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EIDe466fd65-f9e9-4871-bb1e-8a6ac6a0e6fd" />
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0" />
							<testAssertions>
								<TestAssertion id="EID6590f191-054b-4cb6-937e-f3996034cd5d">
									<label>md sds-invocable 5.3: Conformity to INSPIRE Implementation Rules</label>
									<description>
										<![CDATA[<p>Test that the conformity degree is given implementing rules for interoperability of spatial data sets and services.</p>
                                    <p>More information: <a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/sds-invocable/conformity" target="_blank">Conformity</a></p>
									<p>To fulfill this requirement, the evaluated metadata dataset shall be compliant with the following common requirements of the Technical Guide:</p>
									<p><a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/common/conformity" target="_blank"> Common ATS: 'Dataset conformity'</a></p>
									<p><a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/common/conformity-specification" target="_blank"> Common ATS: 'Dataset conformity'</a></p>
									<p><a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/common/conformity-degree" target="_blank"> Common ATS: 'Conformity degree '</a></p>						
									]]>
									</description>
									<parent ref="EID81f60686-9bc6-4073-8081-cb52eeaa7701" />
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
										<!-- DONE -->
										let $enum_files := ('enum_bul', 'enum_cze', 'enum_dan', 'enum_dut', 'enum_eng', 'enum_est', 'enum_est', 'enum_fre', 'enum_fre', 'enum_ger', 'enum_gle', 'enum_gre', 'enum_hun', 'enum_ita', 'enum_lav', 'enum_lit', 'enum_mlt', 'enum_pol', 'enum_por', 'enum_rum', 'enum_slo', 'enum_slv', 'enum_spa', 'enum_swe')
let $conformityText := for $x in $enum_files
	return fn:doc(concat('http://inspire.ec.europa.eu/schemas/common/1.0/enums/', $x, '.xsd'))/xs:schema/xs:complexType[starts-with(@name, 'citationInspireInteroperabilityRegulation')]/xs:complexContent/xs:restriction[@base = 'citationConformity']/xs:sequence/xs:element[@name = 'Title']/xs:simpleType/xs:restriction/xs:enumeration/@value
let $conformityTextLower := for $x in $conformityText return normalize-space(lower-case($x))
let $messages :=
	(for $record in $records
		let $rid := $record/gmd:fileIdentifier/*/text()
		let $confResults := $record/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult
		for $res in $confResults
			return
				if((contains($res/gmd:specification/gmd:CI_Citation/gmd:title/*/text(), '1089/2010') and ($record/gmd:hierarchyLevel/*/@codeListValue = ('dataset') or ($record/gmd:hierarchyLevel/*/@codeListValue = ('service') and $record/gmd:identificationInfo/srv:SV_ServiceIdentification/srv:serviceType/*/text() = "other"))) or (contains($res/gmd:specification/gmd:CI_Citation/gmd:title/*/text(), '976/2009') and $record/gmd:hierarchyLevel/*/@codeListValue = ('service'))) then
				let $dateTypeCode := $res/gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/gmd:CI_DateTypeCode
				return 
					if($dateTypeCode/@codeListValue = ('publication', 'creation', 'revision')) then
                    let $aaa := 'aaa'
						return
						if (not(normalize-space(lower-case($confResults/gmd:specification/gmd:CI_Citation/gmd:title/*/text()[contains(.,'1089/2010')])) = $conformityTextLower)) then
							local:addMessage('TR.wrongNumberOfSpecificationForPurpose', map { 'filename': local:filename($record), 'id': $rid })
						else()
					else	
						local:addMessage('TR.noDateTypeForSpecification', map { 'filename': local:filename($record), 'id': $rid })
				else ()
	)[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a" />
									<translationTemplates>
										<translationTemplate ref="TR.recordsWithErrors" />
										<translationTemplate ref="TR.wrongNumberOfSpecificationForPurpose" />
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID9798cfcb-71b8-4a7d-8cf6-03a801a2099f">
									<label>md sds-invocable 5.4: Spatial Data Service Category</label>
									<description>
										<![CDATA[<p>Test that the service category is given implementing rules for interoperability of spatial data sets and services.</p>
                                    <p>More information: <a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/sds-invocable/sds-category" target="_blank">SDS Category Keywords</a></p>
									<p>To fulfill this requirement, the evaluated metadata dataset shall be compliant with the following common requirements of the Technical Guide:</p>
									<p><a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/common/conformity" target="_blank"> Common ATS (C.20): 'Dataset conformity'</a></p>
									<p><a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/common/conformity-specification" target="_blank"> Common ATS (C.21): 'Dataset conformity'</a></p>
									<p><a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/common/conformity-degree" target="_blank"> Common ATS (C.22): 'Conformity degree '</a></p>						
									]]>
									</description>
									<parent ref="EID81f60686-9bc6-4073-8081-cb52eeaa7701" />
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
										<!-- DONE -->
										let $messages := 	
	(for $record in $records
		let $rid := $record/gmd:fileIdentifier/*/text()

		let $validCC := ('http://inspire.ec.europa.eu/id/ats/metadata/2.0/sds-invocable','http://inspire.ec.europa.eu/id/ats/metadata/2.0/sds-interoperable','http://inspire.ec.europa.eu/id/ats/metadata/2.0/sds-harmonised')
		let $validCategories := ('invocable','interoperable','harmonised')

		let $confResults := $record/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult

		let $titleElement := $confResults/gmd:specification/gmd:CI_Citation/gmd:title/gmx:Anchor[@xlink:href = $validCC]

		let $wrongDateType :=
			for $res in $confResults where $res/gmd:specification/gmd:CI_Citation/gmd:title/gmx:Anchor[@xlink:href = $validCC]
				return
					if(not($res/gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/gmd:CI_DateTypeCode/@codeListValue = ('publication', 'creation', 'revision'))) then
						$res
					else()
		

		return 	 
		if (count($confResults) = 0) then
			local:addMessage('TR.noConformityStatement', map { 'filename': local:filename($record), 'id': $rid })
		else if (not(count($titleElement) = 1)) then
			local:addMessage('TR.wrongMultiplicityForPurpose', map { 'filename': local:filename($record), 'id': $rid, 'count': count($titleElement) })
		else if(not(count($wrongDateType) = 0)) then
			local:addMessage('TR.noDateTypeForSpecification', map { 'filename': local:filename($record), 'id': $rid })
		else
			(for $res in $confResults
				let $titleElem := $res/gmd:specification/gmd:CI_Citation/gmd:title/gmx:Anchor
				let $booleanValue := ('true')
				let $confBoolean := $res/gmd:pass/gco:Boolean/text()

				return
				if ( $titleElem/@xlink:href = $validCC ) then

					if (not($titleElem/text() = $validCategories)) then
						local:addMessage('TR.ivalidCCCategory', map { 'filename': local:filename($record), 'id': $rid })				
					else if ($confBoolean and not($confBoolean = $booleanValue)) then		
						local:addMessage('TR.invalidConformityBoolean', map { 'filename': local:filename($record), 'id': $rid })
					else()

				else()
			)[position() le $limitErrors]

	)[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a" />
									<translationTemplates>
										<translationTemplate ref="TR.recordsWithErrors" />
										<translationTemplate ref="TR.wrongMultiplicityForPurpose" />
										<translationTemplate ref="TR.noConformityStatement" />
										<translationTemplate ref="TR.ivalidCCCategory" />
										<translationTemplate ref="TR.invalidConformityBoolean" />
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID98cd0b1b-5117-49e7-bf13-3f682bbb4ed9">
									<label>md sds-invocable 5.5: Conformity to Technical Specifications</label>
									<description>
										<![CDATA[<p>Test that is given the conformity degree with at least one technical specifications providing all the necessary technical elements to actually invoke the service and enable its usage.</p>
                                    <p>More information: <a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/sds-invocable/conformity-to-technical-specifications" target="_blank">Conformity to Technical Specifications</a></p>
									<p>To fulfill this requirement, the evaluated metadata dataset shall be compliant with the following common requirements of the Technical Guide:</p>
									<p><a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/common/conformity" target="_blank"> Common ATS (C.20): 'Dataset conformity'</a></p>
									<p><a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/common/conformity-specification" target="_blank"> Common ATS (C.21): 'Dataset conformity'</a></p>
									<p><a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/common/conformity-degree" target="_blank"> Common ATS (C.22): 'Conformity degree '</a></p>						
									]]>
									</description>
									<parent ref="EID81f60686-9bc6-4073-8081-cb52eeaa7701" />
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
										<!-- DONE -->
										let $messages := 	
	(for $record in $records
		let $rid := $record/gmd:fileIdentifier/*/text()
		let $confResults := $record/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_DomainConsistency/gmd:result/gmd:DQ_ConformanceResult
		return
			if (not(count($confResults) >= 3)) then
				(: Checking that there are at least 3 gmd:DQ_ConformanceResult is the only way to check that is provided 1 element for this purpose :)		
				local:addMessage('TR.wrongConfStatementMulti', map { 'filename': local:filename($record), 'id': $rid })
			else if(not($confResults[3]/gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/gmd:CI_DateTypeCode/@codeListValue = ('publication', 'creation', 'revision'))) then
				local:addMessage('TR.noDateTypeForSpecification', map { 'filename': local:filename($record), 'id': $rid })
			else
				(for $res in $confResults
					return
						let $citation := $res/gmd:specification/gmd:CI_Citation
						let $booleanValue := ('true')
						let $confBoolean := $res/gmd:pass/gco:Boolean/text()
						return
							if (not(exists($citation))) then
								local:addMessage('TR.noCitationForTechnicalSpec', map { 'filename': local:filename($record), 'id': $rid })
							else if ($confBoolean and not($confBoolean = $booleanValue)) then		
								local:addMessage('TR.invalidConformityBoolean', map { 'filename': local:filename($record), 'id': $rid })
							else()
				)[position() le $limitErrors]
	)[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a" />
									<translationTemplates>
										<translationTemplate ref="TR.recordsWithErrors" />
										<translationTemplate ref="TR.wrongConfStatementMulti" />
										<translationTemplate ref="TR.noCitationForTechnicalSpec" />
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
			</testCases>
		</TestModule>
	</testModules>
</ExecutableTestSuite>
