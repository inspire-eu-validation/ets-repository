<?xml version="1.0" encoding="utf-8"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EID2be1480a-fe42-40b2-9420-eb0e69385c80" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 ../../schema/model/resultSet.xsd">
	<itemHash>bQ==</itemHash>
	<remoteResource>https://github.com/inspire-eu-validation/ets-repository/tree/master/metadata/2.0</remoteResource>
	<localPath>/auto</localPath>
	<label>Conformance Class 2: INSPIRE data sets and data set series interoperability metadata.</label>
	<description>
		<![CDATA[This test suite examines metadata records against the requirements for metadata in INSPIRE.<br/><br/>Please report any issues or problems <a href="https://github.com/INSPIRE-MIF/helpdesk-validator/wiki/Your-feedback" target="_blank">in GitHub</a>.<br/><br/>	
Known limitations are documented in the description of the applicable test case or test assertion.<br/><br/>
There is a general limitation in all assertions that polymorphism and containment by reference (see the <a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/common/README#ref_TG_MD" target="_blank">Technical Guidance</a>, sub-clauses A.3, A.4 and A.5) are not supported. However, the current Abstract Test Suite does not support polymorphism and references either (all XPath expressions do not support polymorhism or references; in addition, schema validation is only executed against the ISO/OGC schemas without extensions). It is therefore unclear if this is really a limitation or if the sections in the technical guidance are outdated.
<br/><br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/isdss" target="_blank">Conformance Class 2: 'INSPIRE data sets and data set series interoperability metadata'</a><br/><br/>
Pre-requisite conformance classes: Conformance Class 1]]>
	</description>
	<reference>../../../inspire-md-bsxets.xq</reference>
	<version>1.0.0</version>
	<author>Consortium Bilbomatica, Guadaltel y Geograma</author>
	<creationDate>2018-06-30T00:00:00Z</creationDate>
	<lastEditor>Consortium Bilbomatica, Guadaltel y Geograma</lastEditor>
	<lastUpdateDate>2019-06-06T18:12:00Z</lastUpdateDate>
	<tags>
		<tag ref="EIDc6567beb-fc33-4f2e-865d-0c3ee5b3d1ae" />
	</tags>
	<testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130" />
	<translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52" />
	<ParameterList name="ETF Standard Parameters for metadata XML test objects">
		<!-- TODO clean up, currently disabled due to open issues with schema validation
		<parameter name="encoding" required="false"><defaultValue>CSW ISO AP 1.0.0</defaultValue><description ref="TR.metadataEncoding"/><allowedValues>^(CSW ISO AP 1\.0\.0|ISO/TS 19139)$</allowedValues><type>string</type></parameter><parameter name="Schema_file" required="false"><description ref="TR.metadataSchema"/><allowedValues>^(apiso\.xsd|gmd\.xsd|apiso-csw\.xsd|gmd-csw\.xsd)?$</allowedValues><type>string</type></parameter>
		-->
		<parameter name="files_to_test" required="true">
			<defaultValue>.*</defaultValue>
			<description ref="TR.filesToTest" />
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
		<parameter name="tests_to_execute" required="false">
			<defaultValue>.*</defaultValue>
			<description ref="TR.testsToExecute" />
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
	</ParameterList>
	<supportedTestObjectTypes>
		<testObjectType ref="EID5a60dded-0cb0-4977-9b06-16c6c2321d2e" />
	</supportedTestObjectTypes>
	<dependencies>
		<executableTestSuite ref="EIDe4a95862-9cc9-436b-9fdd-a0115d342350" />
	</dependencies>
	<testModules>
		<TestModule id="EIDe326cad1-2413-4385-8ae8-40b07e289a9e">
			<label>IGNORE</label>
			<description>IGNORE</description>
			<parent ref="EID2be1480a-fe42-40b2-9420-eb0e69385c80" />
			<testCases>
				<TestCase id="EID57034804-54da-448a-ac31-6ee56b93a82b">
					<label>General Metadata</label>
					<description>Execute tests that apply for all dataset / dataset series metadata records on elements 
					that are directly child elements of the root node of the XML document: MD_Metadata node.</description>
					<parent ref="EIDe326cad1-2413-4385-8ae8-40b07e289a9e" />
					<testSteps>
						<TestStep id="EID4d635967-1bc6-4ff4-a085-238baf880104">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID57034804-54da-448a-ac31-6ee56b93a82b" />
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0" />
							<testAssertions>
								<TestAssertion id="EID02c29a8c-874b-4fa6-b08d-75a0759d85a3">
									<label>md isdss 2.1: Coordinate Reference System</label>
									<description>
										<![CDATA[<p>Test that the coordinate reference system identifiers are provided.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/isdss/crs" target="_blank">Coordinate Reference System</a></p>]]>
									</description>
									<parent ref="EID4d635967-1bc6-4ff4-a085-238baf880104" />
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $messages :=  
	(for $record in $records
		let $rid := $record/gmd:fileIdentifier/*/text()
		let $crsIdentifiers := $record/gmd:referenceSystemInfo/gmd:MD_ReferenceSystem/gmd:referenceSystemIdentifier/gmd:RS_Identifier
		return 	 		
		if (count($crsIdentifiers) = 0)  then
			local:addMessage('TR.noCrsIdentifier', map { 'filename': local:filename($record), 'id': $rid })
		else 			
			for $crs in $crsIdentifiers
				let $code := $crs/gmd:code
				let $codeSpace := $crs/gmd:codeSpace
	 			return
                if (not($code) or not(string-length($code/gco:CharacterString/text()) != 0 or string-length($code/gmx:Anchor/text()) != 0)) then
					local:addMessage('TR.noCrsCode',  map { 'filename': local:filename($record), 'id': $rid})
                else if ($codeSpace and not(string-length($codeSpace/gco:CharacterString/text()) != 0 or string-length($codeSpace/gmx:Anchor/text()) != 0)) then
					local:addMessage('TR.noCrsCodeSpace',  map { 'filename': local:filename($record), 'id': $rid})
				else () 	
	)[position() le $limitErrors] 
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a" />
									<translationTemplates>
										<translationTemplate ref="TR.recordsWithErrors" />
										<translationTemplate ref="TR.noCrsIdentifier" />
										<translationTemplate ref="TR.noCrsCode" />
										<translationTemplate ref="TR.noCrsCodeSpace" />
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID9cc67cd3-19cf-4475-b2aa-dcbedab9f685">
									<label>md isdss 2.2: Coordinate Reference System Identifiers</label>
									<description>
										<![CDATA[<p>Test that the default coordinate reference systems uses a correct identifier.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/isdss/crs-id" target="_blank">Coordinate Reference System Identifiers</a></p>]]>
									</description>
									<parent ref="EIDef8d3d22-be0f-4618-88a2-2bc0bbfc8077" />
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $urlOpengis := 'http://www.opengis.net/def/crs/EPSG/0/'
let $epsgCodes := ('4936','4937','4258','3035','3034','3038','3039','3040','3041','3042','3043','3044','3045','3046','3047','3048','3049','3050','3051','5730','5861','5715','7409')
let $httpURIIdentifier :=
	for $x in $epsgCodes
	return
	concat($urlOpengis, $x)
let $messages :=  	
	(for $record in $records
		let $rid := $record/gmd:fileIdentifier/*/text()
		let $crsIdentifiers := $record/gmd:referenceSystemInfo/gmd:MD_ReferenceSystem/gmd:referenceSystemIdentifier/gmd:RS_Identifier
		return
			for $crs in $crsIdentifiers
				let $code := $crs/gmd:code
				let $codeSpace := $crs/gmd:codeSpace
				let $defaultEpsgCode :=
					for $x in $epsgCodes
						return
						if(contains($code/gco:CharacterString/text(), $x)) then $code/gco:CharacterString
						else if(contains($code/gmx:Anchor/text(), $x)) then $code/gmx:Anchor/@xlink:href
						else ()
	 			return
				if (not(count($defaultEpsgCode) = 0)) then
					if (not($code[gco:CharacterString = $httpURIIdentifier] or $code[gmx:Anchor/@xlink:href = $httpURIIdentifier])) then
						local:addMessage('TR.invalidCrsCode',  map { 'filename': local:filename($record), 'id': $rid })
					else if($codeSpace) then
						local:addMessage('TR.invalidCrsCode',  map { 'filename': local:filename($record), 'id': $rid })
					else ()
				else ()
	)[position() le $limitErrors] 
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a" />
									<translationTemplates>
										<translationTemplate ref="TR.recordsWithErrors" />
										<translationTemplate ref="TR.noCrsIdentifier" />
										<translationTemplate ref="TR.noCrsCode" />
										<translationTemplate ref="TR.invalidCrsCode" />
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDef8d3d22-be0f-4618-88a2-2bc0bbfc8077">
									<label>md isdss 2.3: Temporal Reference Systems</label>
									<description>
										<![CDATA[<p>Test if the temporal reference system(s) is provided correctly.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/isdss/temporal-rs" target="_blank">Temporal Reference Systems</a></p>]]>
									</description>
									<parent ref="EID4d635967-1bc6-4ff4-a085-238baf880104" />
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $messages :=  	
	(for $record in $records
		let $rid := $record/gmd:fileIdentifier/*/text()
		let $crsIdentifiers := $record/gmd:referenceSystemInfo/gmd:MD_ReferenceSystem/gmd:referenceSystemIdentifier/gmd:RS_Identifier
		return
		if (not($crsIdentifiers)) then
				local:addMessage('TR.noCrsCode',  map { 'filename': local:filename($record), 'id': $rid })
		else
			for $crs in $crsIdentifiers
			let $code := $crs/gmd:code
			let $codeSpace := $crs/gmd:codeSpace
			return
            if (not($code) or not(string-length($code/gco:CharacterString/text()) != 0 or string-length($code/gmx:Anchor/text()) != 0)) then
				local:addMessage('TR.noCrsCode',  map { 'filename': local:filename($record), 'id': $rid })
            else if (($codeSpace) and not(string-length($codeSpace/gco:CharacterString/text()) != 0 or string-length($codeSpace/gmx:Anchor/text()) != 0)) then
				local:addMessage('TR.noCrsCodeSpace',  map { 'filename': local:filename($record), 'id': $rid })
			else ()		
	)[position() le $limitErrors] 
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a" />
									<translationTemplates>
										<translationTemplate ref="TR.recordsWithErrors" />
										<translationTemplate ref="TR.noCrsCode" />
										<translationTemplate ref="TR.noCrsCodeSpace" />
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EID8d0318a3-c5e9-45d5-b3af-8c054b0068f5">
					<label>Identification</label>
					<description>Execute tests that apply for all dataset / dataset series metadata records on 
					elements that are child elements of the section of the XML document: Identification Info 
					(property of the gmd:MD_Metadata element). This section contains information specific to the dataset / dataset series.
					</description>
					<parent ref="EIDe326cad1-2413-4385-8ae8-40b07e289a9e" />
					<testSteps>
						<TestStep id="EIDa58167a7-8d43-4191-ad84-80c953ab0ab4">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID8d0318a3-c5e9-45d5-b3af-8c054b0068f5" />
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0" />
							<testAssertions>
								<TestAssertion id="EIDf330358c-8d29-4069-976a-3afb9590ea51">
									<label>md isdss 2.4: Spatial Representation Type</label>
									<description>
										<![CDATA[<p>Test the type of spatial representation of the data.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/isdss/spatial-representation-type" target="_blank">Spatial Representation Type</a></p>]]>
									</description>
									<parent ref="EIDa58167a7-8d43-4191-ad84-80c953ab0ab4" />
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codes := ('vector','grid','tin','textTable')
let $messages :=  	
	(for $record in $records
		let $rid := $record/gmd:fileIdentifier/*/text()
		let $spatialRepTypeCodes := $record/gmd:identificationInfo[1]/gmd:MD_DataIdentification/gmd:spatialRepresentationType/gmd:MD_SpatialRepresentationTypeCode
		return 	 				
		if (count($spatialRepTypeCodes) = 0)  then
			local:addMessage('TR.spatialRepTypeCodes', map { 'filename': local:filename($record), 'id': $rid })
		else 
			for $typeCode in $spatialRepTypeCodes
				let $codeListValue := $typeCode/@codeListValue
				let $invalidCodeValues := $codeListValue[not(. = $codes)]
				return
				if ($invalidCodeValues)  then
					local:addMessage('TR.invalidSpatialRepresentationCode', map { 'filename': local:filename($record), 'id': $rid })				
				else () 		
	)[position() le $limitErrors] 
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a" />
									<translationTemplates>
										<translationTemplate ref="TR.recordsWithErrors" />
										<translationTemplate ref="TR.spatialRepTypeCodes" />
										<translationTemplate ref="TR.invalidSpatialRepresentationCode" />
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID83d11da2-265d-4080-bdc3-c25a325b824d">
									<label>md isdss 2.5: Character Encoding</label>
									<description>
										<![CDATA[<p>Test that the character encoding for data sets and series is provided correctly.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/isdss/character-encoding" target="_blank">Character Encoding</a></p>]]>
									</description>
									<parent ref="EIDa58167a7-8d43-4191-ad84-80c953ab0ab4" />
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codes := ('ucs2','ucs4','utf7','utf8','8859part1','8859part2','8859part3','8859part4','8859part5','8859part6','8859part7','8859part8','8859part9','8859part10','8859part11','8859part12','8859part13','8859part14','8859part15','8859part16','jis','shiftJIS','eucJP','usAscii','eucKR','big5','GB2312')
let $messages :=  		
	(for $record in $records
		let $rid := $record/gmd:fileIdentifier/*/text()
		let $characterCodes := $record/gmd:identificationInfo[1]/gmd:MD_DataIdentification/gmd:characterSet/gmd:MD_CharacterSetCode
		return 	 									
			for $characterCode in $characterCodes
				let $codeListValue := $characterCode/@codeListValue
				let $invalidCodeValues := $codeListValue[not(. = $codes)]
				return
				if ($invalidCodeValues) then
					local:addMessage('TR.invalidEncodingCode', map { 'filename': local:filename($record), 'id': $rid})
				else () 			
	)[position() le $limitErrors] 
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a" />
									<translationTemplates>
										<translationTemplate ref="TR.recordsWithErrors" />
										<translationTemplate ref="TR.invalidCodeUTF8" />
										<translationTemplate ref="TR.invalidEncodingCode" />
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EIDde81899f-3d21-4795-926e-93a731d68edf">
					<label>Distribution</label>
					<description>Execute tests that apply for all dataset / dataset series metadata records on elements that are child 
					elements of the section of the XML document: Distribution Information (property of the gmd:MD_Metadata element). 
					This section contains information about who makes a resource available and how to get it.</description>
					<parent ref="EIDe326cad1-2413-4385-8ae8-40b07e289a9e" />
					<testSteps>
						<TestStep id="EIDa349088e-f3bf-4bd3-a0e9-bd3fc61181ee">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EIDde81899f-3d21-4795-926e-93a731d68edf" />
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0" />
							<testAssertions>
								<TestAssertion id="EID67230a54-f9b0-49d9-8928-fc5cf5d3ea8a">
									<label>md isdss 2.6: Data Encoding</label>
									<description>
										<![CDATA[<p>Evaluate encoding and the storage or transmission format for data sets and series.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/isdss/data-encoding" target="_blank">Data Encoding</a></p>]]>
									</description>
									<parent ref="EIDa349088e-f3bf-4bd3-a0e9-bd3fc61181ee" />
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $messages :=
	(for $record in $records
		let $rid := $record/gmd:fileIdentifier/*/text()
		let $distFormats := $record/gmd:distributionInfo[1]/gmd:MD_Distribution/gmd:distributionFormat
		return
		if (count($distFormats) = 0) then
			local:addMessage('TR.noDistFormat', map { 'filename': local:filename($record), 'id': $rid })
		else
			for $format in $distFormats
				let $name := $format/gmd:MD_Format/gmd:name
				let $version := $format/gmd:MD_Format/gmd:version
				return
                if (not($name) or not(string-length($name/gco:CharacterString/text()) != 0 or string-length($name/gmx:Anchor/text()) != 0)) then
					local:addMessage('TR.emptyName', map { 'filename': local:filename($record), 'id': $rid })
				else if(string-length(normalize-space($version/*/text())) != 0) then
                    if (not($version) or not(string-length($version/gco:CharacterString/text()) != 0 or string-length($version/gmx:Anchor/text()) != 0)) then
						local:addMessage('TR.emptyVersion', map { 'filename': local:filename($record), 'id': $rid }) 	
					else ()
				else
					if (not($version/@gco:nilReason = 'unknown' or $version/@gco:nilReason = 'inapplicable')) then
						local:addMessage('TR.invalidVersion', map { 'filename': local:filename($record), 'id': $rid }) 
					else () 
	)[position() le $limitErrors] 
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a" />
									<translationTemplates>
										<translationTemplate ref="TR.recordsWithErrors" />
										<translationTemplate ref="TR.noDistFormat" />
										<translationTemplate ref="TR.emptyName" />
										<translationTemplate ref="TR.emptyVersion" />
										<translationTemplate ref="TR.invalidVersion" />
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EIDb7cf88c8-4ebe-4fdb-93e6-58794455c3fa">
					<label>Data Quality</label>
					<description>Execute tests that apply for all dataset / dataset series metadata records on elements that are child 
					elements of the section of the XML document: Data Quality Information (property of the gmd:MD_Metadata element). 
					This section contains information specific to the quality and lineage (including processing steps and sources) of the 
					resource.</description>
					<parent ref="EIDe326cad1-2413-4385-8ae8-40b07e289a9e" />
					<testSteps>
						<TestStep id="EID776ce1a6-2f16-4543-aeae-b48897b9ea54">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EIDb7cf88c8-4ebe-4fdb-93e6-58794455c3fa" />
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0" />
							<testAssertions>
								<TestAssertion id="EID0c1ad661-f3bf-49a5-b38a-3dd68e2c7bfd">
									<label>md isdss 2.7: Topological Consistency Quantitative Results</label>
									<description>
										<![CDATA[<p>Test that the topological consistency quantitative results is provided correctly.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/isdss/topological-consistency-quantitative-results" target="_blank">Topological Consistency Quantitative Results</a></p>]]>
									</description>
									<parent ref="EID776ce1a6-2f16-4543-aeae-b48897b9ea54" />
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $messages :=  			
	(for $record in $records
		let $rid := $record/gmd:fileIdentifier/*/text()
		let $results := $record/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_TopologicalConsistency/gmd:result/gmd:DQ_QuantitativeResult
		return
		for $result in $results
			let $measureName := $result/../../gmd:nameOfMeasure/*[1]/text()
			let $valueRecord := $result/gmd:value/gco:Record
			let $type := $result/gmd:value/gco:Record/@xsi:type
			return
			if (not($result/gmd:valueUnit)) then
				local:addMessage('TR.noValueUnit', map { 'filename': local:filename($record), 'id': $rid, 'measureName': $measureName })
			else if (not($valueRecord)) then
				local:addMessage('TR.noValueRecord', map { 'filename': local:filename($record), 'id': $rid, 'measureName': $measureName })
			else if (not($type)) then
				local:addMessage('TR.noTypeRecord', map { 'filename': local:filename($record), 'id': $rid, 'measureName': $measureName })
			else ()
	)[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a" />
									<translationTemplates>
										<translationTemplate ref="TR.recordsWithErrors" />
										<translationTemplate ref="TR.noValueUnit" />
										<translationTemplate ref="TR.noValueRecord" />
										<translationTemplate ref="TR.noTypeRecord" />
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID9fa0176c-5cc8-458b-9795-45f9a949cc56">
									<label>md isdss 2.8: Topological Consistency Descriptive Results</label>
									<description>
										<![CDATA[<p>Test that the topological consistency descriptive results is provided correctly.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/metadata/2.0/isdss/topological-consistency-descriptive-results" target="_blank">Topological Consistency Descriptive Results</a></p>]]>
									</description>
									<parent ref="EID776ce1a6-2f16-4543-aeae-b48897b9ea54" />
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $titleINSPIRE := 'INSPIRE Data Specifications - Base Models - Generic Network Model'
let $messages :=
	(for $record in $records
		let $rid := $record/gmd:fileIdentifier/*/text()
		let $results := $record/gmd:dataQualityInfo/gmd:DQ_DataQuality/gmd:report/gmd:DQ_TopologicalConsistency/gmd:result/gmd:DQ_ConformanceResult
		return
		for $result in $results
			let $measureName := $result/../../gmd:nameOfMeasure/*[1]/text()
			let $title := $result/gmd:specification/gmd:CI_Citation/gmd:title/*/text()
			let $date := $result/gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:date/*/text()
			let $dateTypeCode := $result/gmd:specification/gmd:CI_Citation/gmd:date/gmd:CI_Date/gmd:dateType/gmd:CI_DateTypeCode/@codeListValue
			let $pass := $result/gmd:pass
			let $explanation := $result/gmd:explanation
			return
			if (not($title = $titleINSPIRE)) then
				local:addMessage('TR.invalidTitle', map { 'filename': local:filename($record), 'id': $rid })
			else if (not($date)) then
				local:addMessage('TR.noDateElement', map { 'filename': local:filename($record), 'id': $rid })
			else if (not($dateTypeCode = 'publication')) then
				local:addMessage('TR.noDateCodeList', map { 'filename': local:filename($record), 'id': $rid })
			else if (not($pass = 'false')) then
				local:addMessage('TR.invalidPass', map { 'filename': local:filename($record), 'id': $rid })
			else if (not($explanation)) then
				local:addMessage('TR.noExplanation', map { 'filename': local:filename($record), 'id': $rid })
            else if (not(string-length($explanation/gco:CharacterString/text()) != 0 or string-length($explanation/gmx:Anchor/text()) != 0)) then
				local:addMessage('TR.emptyExplanation', map { 'filename': local:filename($record), 'id': $rid })
			else ()
	)[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a" />
									<translationTemplates>
										<translationTemplate ref="TR.invalidTitle" />
										<translationTemplate ref="TR.noDateElement" />
										<translationTemplate ref="TR.noDateCodeList" />
										<translationTemplate ref="TR.invalidPass" />
										<translationTemplate ref="TR.noExplanation" />
										<translationTemplate ref="TR.emptyExplanation" />
										<translationTemplate ref="TR.recordsWithErrors" />
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
			</testCases>
		</TestModule>
	</testModules>
</ExecutableTestSuite>
