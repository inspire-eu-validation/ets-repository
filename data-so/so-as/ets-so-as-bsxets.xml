<?xml version="1.0" encoding="utf-8"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EID09b2bdfc-54fd-4884-b9bd-59f18dff358b" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 https://resources.etf-validator.net/schema/v2/val/ignoreRef.xsd">
	<itemHash>bQ==</itemHash>
	<remoteResource>https://github.com/inspire-eu-validation/ets-repository/tree/master/data-so/so-as</remoteResource>
	<localPath>/auto</localPath>
	<label>Conformance class: Application schema, Soil</label>
	<description><![CDATA[This test suite examines requirements associated with the application schema.<br/><br/>
Note that since both code-list-valued properties of this application schema may be extended without restrictions, there is no test case for code list values.<br/><br/>
<b>This is a draft version. It has limitations and is expected to contain errors.</b> Please report any issues or problems <a href="https://github.com/INSPIRE-MIF/helpdesk-validator" target="_blank">in GitHub</a>.<br/><br/>
Known limitations are documented in the description of the applicable test case or test assertion. There is a general limitation in all assertions that extensions in additional application schemas are only supported, if the unqualified name of the feature type in the extension is the same as the name of the feature type in the INSPIRE application schema.<br/><br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as" target="_blank">Conformance Class 'Application schema, Soil'</a><br/><br/>
Pre-requisite conformance classes:
<ul><li><a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-gml" target="_blank">Conformance Class 'GML application schemas, Soil'</a></li></ul>]]></description>
	<reference>../../inspire-noggeo-bsxets.xq</reference>
	<version>0.1.0</version>
	<author>Consortium Bilbomatica, Guadaltel y Geograma</author>
	<creationDate>2021-05-11T12:15:00Z</creationDate>
	<lastEditor>Consortium Bilbomatica, Guadaltel y Geograma</lastEditor>
	<lastUpdateDate>2021-05-11T12:15:00Z</lastUpdateDate>
	<tags>
		<tag ref="EID57914240-3457-4c8f-96a0-347440b3d739"/>
	</tags>
	<testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
	<translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
	<ParameterList name="ETF Standard Parameters for XML test objects">
		<parameter name="files_to_test" required="true">
			<defaultValue>.*</defaultValue>
			<description ref="TR.filesToTest"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
		<parameter name="tests_to_execute" required="false">
			<defaultValue>.*</defaultValue>
			<description ref="TR.testsToExecute"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
	</ParameterList>
	<supportedTestObjectTypes>
		<testObjectType ref="EIDe1d4a306-7a78-4a3b-ae2d-cf5f0810853e"/>
	</supportedTestObjectTypes>
	<dependencies>
		<executableTestSuite ref="EID31880338-6fe3-486c-8f3e-7086a20490c4"/>
	</dependencies>
	<testModules>
		<TestModule id="EID88a83353-3140-4c29-8844-6a9c7dbc549d">
			<label>IGNORE</label>
			<description>IGNORE</description>
			<parent ref="EID09b2bdfc-54fd-4884-b9bd-59f18dff358b"/>
			<testCases>
				<TestCase id="EID347a1861-dd87-4e29-97f7-240d47fe34f1">
					<label>Code list values</label>
					<description>Verify whether all attributes whose value type is a code list take the values set out therein.</description>
					<parent ref="EID88a83353-3140-4c29-8844-6a9c7dbc549d"/>
					<testSteps>
						<TestStep id="EID38cabd7f-b5d9-4d2f-8665-7319ab84bb2c">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID347a1861-dd87-4e29-97f7-240d47fe34f1"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID340cb9fb-701d-4785-8e22-5d87cc2fbaf1">
									<label>so-as.a.1: FAOHorizonMaster</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#FAOHorizonMaster'>FAOHorizonMaster</a> elements have a <a href='http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#validValue1'>valid value</a>.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.3</a>]]></description>
									<parent ref="EID38cabd7f-b5d9-4d2f-8665-7319ab84bb2c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $property_string := 'FAOHorizonMaster'
let $features_selected := $features[self::so:SoilHorizon]


let $messages :=
	for $feature in $features_selected/so:FAOHorizonNotation/so:FAOHorizonNotationType
		let $envDom := $feature/so:FAOHorizonMaster
			return
				if (not(exists($envDom))) then
					local:addMessage('TR.missingElement',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string})
				else if (count($envDom) > 1) then
					local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'element': $property_string, 'multiplicity': 1, 'count': count($envDom)})
				else if (not(count($envDom) = count($envDom/@xlink:href))) then
					local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string, 'attribute': 'xlink:href'})		
				else (
					local:addMessage('TR.checkManuallyCodeListValue2',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string, 'value': string($envDom/@xlink:href)})
				)

return
(if ($messages and ($messages/@ref = ('TR.missingElement','TR.wrongMultiplicity','TR.missingAttribute'))) then 'FAILED' 
else if($messages and $messages/@ref = ('TR.checkManuallyCodeListValue2')) then 'PASSED_MANUAL' 
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.checkManuallyCodeListValue2"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDa913d5bd-ee11-42cd-af81-180b68da619d">
									<label>so-as.a.2: FAOHorizonSubordinate</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#FAOHorizonSubordinate'>FAOHorizonSubordinate</a> elements have a <a href='http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#validValue2'>valid value</a>.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.3</a>]]></description>
									<parent ref="EID38cabd7f-b5d9-4d2f-8665-7319ab84bb2c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $property_string := 'FAOHorizonSubordinate'
let $features_selected := $features[self::so:SoilHorizon]

let $messages :=
	for $feature in $features_selected/so:FAOHorizonNotation/so:FAOHorizonNotationType
		let $envDom := $feature/so:FAOHorizonSubordinate
			return
				if (not(count($envDom) = count($envDom/@xlink:href))) then
					local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string, 'attribute': 'xlink:href'})	
				else (
					local:addMessage('TR.checkManuallyCodeListValue2',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string, 'value': string($envDom/@xlink:href)})
				)

return
(if ($messages and ($messages/@ref = ('TR.missingAttribute'))) then 'FAILED' 
else if($messages and $messages/@ref = ('TR.checkManuallyCodeListValue2')) then 'PASSED_MANUAL' 
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.checkManuallyCodeListValue2"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDa9e46ae2-f8c3-434c-a61b-a33800c0d60b">
									<label>so-as.a.3: FAOPrime</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#FAOPrime'>FAOPrime</a> elements have a <a href='http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#validValue3'>valid value</a>.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.3</a>]]></description>
									<parent ref="EID38cabd7f-b5d9-4d2f-8665-7319ab84bb2c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $property_string := 'FAOPrime'
let $features_selected := $features[self::so:SoilHorizon]


let $messages :=
	for $feature in $features_selected/so:FAOHorizonNotation/so:FAOHorizonNotationType
		let $envDom := $feature/so:FAOPrime
			return
				if (not(exists($envDom))) then
					local:addMessage('TR.missingElement',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string})
				else if (count($envDom) > 1) then
					local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'element': $property_string, 'multiplicity': 1, 'count': count($envDom)})
				else if (not(count($envDom) = count($envDom/@xlink:href))) then
					local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string, 'attribute': 'xlink:href'})		
				else (
					local:addMessage('TR.checkManuallyCodeListValue2',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string, 'value': string($envDom/@xlink:href)})
				)

return
(if ($messages and ($messages/@ref = ('TR.missingElement','TR.wrongMultiplicity','TR.missingAttribute'))) then 'FAILED' 
else if($messages and $messages/@ref = ('TR.checkManuallyCodeListValue2')) then 'PASSED_MANUAL' 
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.checkManuallyCodeListValue2"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID6c515c34-90be-47a8-ab97-84b7831aecea">
									<label>so-as.a.4: layerGenesisProcessState</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#layerGenesisProcessState'>layerGenesisProcessState</a> elements has a xlink:href attribute pointing to a <a href='http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#validValue4'>valid value</a>. If the check fails report disallowedCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.3</a>]]></description>
									<parent ref="EID38cabd7f-b5d9-4d2f-8665-7319ab84bb2c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/LayerGenesisProcessStateValue'
let $codelisturl := 'http://inspire.ec.europa.eu/codelist/LayerGenesisProcessStateValue/LayerGenesisProcessStateValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $property_string := 'layerGenesisProcessState'
let $features_selected := $features[self::so:SoilLayer]


let $messages :=
	for $feature in $features_selected
		let $envDom := $feature/so:layerGenesisProcessState
			return
				if (count($envDom) > 1) then
					local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': $property_string, 'multiplicity': '0 or 1', 'count': count($envDom)})
				else if (exists($envDom/@xlink:href) and not($envDom/@xlink:href = $valid_href)) then
					local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string, 'value': string($envDom/@xlink:href), 'codelist': $codelist})
				else ()

return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDd50789bc-4b3b-4f45-b190-af02c1e60b2d">
									<label>so-as.a.5: layerType</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#layerType'>layerType</a> elements has a xlink:href attribute pointing to a <a href='http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#validValue5'>valid value</a>. If the check fails report disallowedCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.3</a>]]></description>
									<parent ref="EID38cabd7f-b5d9-4d2f-8665-7319ab84bb2c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/LayerTypeValue'
let $codelisturl := 'http://inspire.ec.europa.eu/codelist/LayerTypeValue/LayerTypeValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $property_string := 'layerType'
let $features_selected := $features[self::so:SoilLayer]


let $messages :=
	for $feature in $features_selected
		let $envDom := $feature/so:layerType
			return
				if (not(exists($envDom))) then
					local:addMessage('TR.missingElement',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string})
				else if (count($envDom) > 1) then
					local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': $property_string, 'multiplicity': 1, 'count': count($envDom)})
				else if (not(count($envDom) = count($envDom/@xlink:href))) then
					local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string, 'attribute': 'xlink:href'})		
				else if (not($envDom/@xlink:href = $valid_href)) then
					local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string, 'value': string($envDom/@xlink:href), 'codelist': $codelist})
				else ()

return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID14733f29-4c30-4962-9988-75864e9930eb">
									<label>so-as.a.6: soilInvestigationPurpose</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#soilInvestigationPurpose'>soilInvestigationPurpose</a> elements has a xlink:href attribute pointing to a <a href='http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#validValue6'>valid value</a>. If the check fails report disallowedCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.3</a>]]></description>
									<parent ref="EID38cabd7f-b5d9-4d2f-8665-7319ab84bb2c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/SoilInvestigationPurposeValue'
let $codelisturl := 'http://inspire.ec.europa.eu/codelist/SoilInvestigationPurposeValue/SoilInvestigationPurposeValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $property_string := 'soilInvestigationPurpose'
let $features_selected := $features[self::so:SoilSite]


let $messages :=
	for $feature in $features_selected
		let $envDom := $feature/so:soilInvestigationPurpose
			return
				if (not(exists($envDom))) then
					local:addMessage('TR.missingElement',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string})
				else if (count($envDom) > 1) then
					local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': $property_string, 'multiplicity': 1, 'count': count($envDom)})
				else if (not(count($envDom) = count($envDom/@xlink:href))) then
					local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string, 'attribute': 'xlink:href'})		
				else if (not($envDom/@xlink:href = $valid_href)) then
					local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string, 'value': string($envDom/@xlink:href), 'codelist': $codelist})
				else ()

return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDb7902d99-008b-49c4-9be7-e62d7383f1a5">
									<label>so-as.a.7: soilPlotType</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#soilPlotType'>soilPlotType</a> elements has a xlink:href attribute pointing to a <a href='http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#validValue7'>valid value</a>. If the check fails report disallowedCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.3</a>]]></description>
									<parent ref="EID38cabd7f-b5d9-4d2f-8665-7319ab84bb2c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/SoilPlotTypeValue'
let $codelisturl := 'http://inspire.ec.europa.eu/codelist/SoilPlotTypeValue/SoilPlotTypeValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $property_string := 'soilPlotType'
let $features_selected := $features[self::so:SoilPlot]


let $messages :=
	for $feature in $features_selected
		let $envDom := $feature/so:soilPlotType
			return
				if (not(exists($envDom))) then
					local:addMessage('TR.missingElement',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string})
				else if (count($envDom) > 1) then
					local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': $property_string, 'multiplicity': 1, 'count': count($envDom)})
				else if (not(count($envDom) = count($envDom/@xlink:href))) then
					local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string, 'attribute': 'xlink:href'})		
				else if (not($envDom/@xlink:href = $valid_href)) then
					local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string, 'value': string($envDom/@xlink:href), 'codelist': $codelist})
				else ()

return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID65359871-f5d5-4d58-86e6-cbc81ffd6497">
									<label>so-as.a.8: qualifierPlace</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#qualifierPlace'>qualifierPlace</a> elements have a <a href='http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#validValue8'>valid value</a>.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.3</a>]]></description>
									<parent ref="EID38cabd7f-b5d9-4d2f-8665-7319ab84bb2c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $property_string := 'qualifierPlace'
let $features_selected := $features[self::so:ObservedSoilProfile | self::so:DerivedSoilProfile]


let $messages :=
	for $feature in $features_selected/so:WRBSoilName/so:WRBSoilNameType/so:WRBQualifierGroup/so:WRBQualifierGroupType
		let $envDom := $feature/so:qualifierPlace
			return
				if (not(exists($envDom))) then
					local:addMessage('TR.missingElement',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'property': $property_string})
				else if (count($envDom) > 1) then
					local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'element': $property_string, 'multiplicity': 1, 'count': count($envDom)})
				else if (not(count($envDom) = count($envDom/@xlink:href))) then
					local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'property': $property_string, 'attribute': 'xlink:href'})		
				else (
					local:addMessage('TR.checkManuallyCodeListValue2',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'property': $property_string, 'value': string($envDom/@xlink:href)})
				)

return
(if ($messages and ($messages/@ref = ('TR.missingElement','TR.wrongMultiplicity','TR.missingAttribute'))) then 'FAILED' 
else if($messages and $messages/@ref = ('TR.checkManuallyCodeListValue2')) then 'PASSED_MANUAL' 
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.checkManuallyCodeListValue2"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID0c181a40-0895-4382-b180-0bc63d2a1e75">
									<label>so-as.a.9: WRBqualifier</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#WRBqualifier'>WRBqualifier</a> elements have a <a href='http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#validValue9'>valid value</a>.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.3</a>]]></description>
									<parent ref="EID38cabd7f-b5d9-4d2f-8665-7319ab84bb2c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $property_string := 'WRBQualifier'
let $features_selected := $features[self::so:ObservedSoilProfile | self::so:DerivedSoilProfile]


let $messages :=
	for $feature in $features_selected/so:WRBSoilName/so:WRBSoilNameType/so:WRBQualifierGroup/so:WRBQualifierGroupType
		let $envDom := $feature/so:WRBqualifier
			return
				if (not(exists($envDom))) then
					local:addMessage('TR.missingElement',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'property': $property_string})
				else if (count($envDom) > 1) then
					local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'element': $property_string, 'multiplicity': 1, 'count': count($envDom)})
				else if (not(count($envDom) = count($envDom/@xlink:href))) then
					local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'property': $property_string, 'attribute': 'xlink:href'})		
				else (
					local:addMessage('TR.checkManuallyCodeListValue2',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'property': $property_string, 'value': string($envDom/@xlink:href)})
				)

return
(if ($messages and ($messages/@ref = ('TR.missingElement','TR.wrongMultiplicity','TR.missingAttribute'))) then 'FAILED' 
else if($messages and $messages/@ref = ('TR.checkManuallyCodeListValue2')) then 'PASSED_MANUAL' 
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.checkManuallyCodeListValue2"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDfa9947e0-c02f-4447-9d5a-cf1bb5f11564">
									<label>so-as.a.10: WRBReferenceSoilGroup</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#WRBReferenceSoilGroup'>WRBReferenceSoilGroup</a> elements have a <a href='http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#validValue10'>valid value</a>. If the check fails report disallowedCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.3</a>]]></description>
									<parent ref="EID38cabd7f-b5d9-4d2f-8665-7319ab84bb2c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $property_string := 'WRBReferenceSoilGroup'
let $features_selected := $features[self::so:ObservedSoilProfile | self::so:DerivedSoilProfile]


let $messages :=
	for $feature in $features_selected/so:WRBSoilName/so:WRBSoilNameType
		let $envDom := $feature/so:WRBReferenceSoilGroup
			return
				if (not(exists($envDom))) then
					local:addMessage('TR.missingElement',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string})
				else if (count($envDom) > 1) then
					local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'element': $property_string, 'multiplicity': 1, 'count': count($envDom)})
				else if (not(count($envDom) = count($envDom/@xlink:href))) then
					local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string, 'attribute': 'xlink:href'})		
				else (
					local:addMessage('TR.checkManuallyCodeListValue2',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string, 'value': string($envDom/@xlink:href)})
				)

return
(if ($messages and ($messages/@ref = ('TR.missingElement','TR.wrongMultiplicity','TR.missingAttribute'))) then 'FAILED' 
else if($messages and $messages/@ref = ('TR.checkManuallyCodeListValue2')) then 'PASSED_MANUAL' 
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.checkManuallyCodeListValue2"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDb41cdb39-f5b0-4f30-8265-cc1f900ab8ba">
									<label>so-as.a.11: WRBspecifier</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#WRBspecifier'>WRBspecifier</a> elements have a <a href='http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#validValue11'>valid value</a>.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.3</a>]]></description>
									<parent ref="EID38cabd7f-b5d9-4d2f-8665-7319ab84bb2c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $property_string := 'WRBSpecifier'
let $features_selected := $features[self::so:ObservedSoilProfile | self::so:DerivedSoilProfile]


let $messages :=
	for $feature in $features_selected/so:WRBSoilName/so:WRBSoilNameType/so:WRBQualifierGroup/so:WRBQualifierGroupType
		let $envDom := $feature/so:WRBspecifier
			return
				if (count($envDom) > 2) then
					local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'element': $property_string, 'multiplicity': '0 to 2', 'count': count($envDom)})
				else if (not(count($envDom) = count($envDom/@xlink:href))) then
					local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'property': $property_string, 'attribute': 'xlink:href'})		
				else (
					local:addMessage('TR.checkManuallyCodeListValue2',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'property': $property_string, 'value': string($envDom/@xlink:href)})
				)

return
(if ($messages and ($messages/@ref = ('TR.wrongMultiplicity','TR.missingAttribute'))) then 'FAILED' 
else if($messages and $messages/@ref = ('TR.checkManuallyCodeListValue2')) then 'PASSED_MANUAL' 
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.checkManuallyCodeListValue2"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID498e468c-e308-4eb8-9da0-4be937311d64">
									<label>so-as.a.12: soilThemeParameterName</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#soilThemeParameterName'>soilThemeParameterName</a> elements has a xlink:href attribute pointing to a <a href='http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#rpreDefinedValueA'>pre-defined value</a>. <br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.3</a>]]></description>
									<parent ref="EID38cabd7f-b5d9-4d2f-8665-7319ab84bb2c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/SoilDerivedObjectParameterNameValue'
let $codelisturl := 'https://inspire.ec.europa.eu/codelist/SoilDerivedObjectParameterNameValue/SoilDerivedObjectParameterNameValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $property_string := 'soilThemeParameterName'
let $features_selected := $features[self::so:SoilThemeCoverage]
let $list := $features_selected/so:soilThemeParameter/so:SoilThemeParameterType/so:soilThemeParameterName/@xlink:href

let $messages := 

	for $feature in $features_selected/so:soilThemeParameter/so:SoilThemeParameterType
		let $envDom := $feature/so:soilThemeParameterName
		let $iterlist:= for $elem in $list
				return if ($elem = $envDom/@xlink:href)
					then $elem
					else ()

		return
			if(not(exists($envDom))) then
				local:addMessage('TR.missingElement',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string})
			else if (count($envDom) > 1) then
				local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'element': $property_string, 'multiplicity': 1, 'count': count($envDom)})	
			else if (not(count($envDom) = count($envDom/@xlink:href))) then
				local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string, 'attribute': 'xlink:href'})	
			else if(exists($envDom) and exists($envDom/@xlink:href) and not($envDom/@xlink:href = $valid_href)) then 
				local:addMessage('TR.manual.reviewCodeListValue', map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string, 'value': string-join($envDom/@xlink:href, ','), 'count': count($iterlist)-1})
			else ()

return
(if ($messages and ($messages/@ref = ('TR.missingElement','TR.wrongMultiplicity','TR.missingAttribute'))) then 'FAILED' 
else if($messages and $messages/@ref = ('TR.manual.reviewCodeListValue')) then 'PASSED_MANUAL' 
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.manual.reviewCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID70c6d902-9e4c-4171-a04a-f685a207ab0d">
									<label>so-as.a.13: layerGenesisEnvironment</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#layerGenesisEnvironment'>layerGenesisEnvironment</a> elements has a xlink:href attribute pointing to a <a href='http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#preDefinedValue1'>pre-defined value</a>. <br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.3</a>]]></description>
									<parent ref="EID38cabd7f-b5d9-4d2f-8665-7319ab84bb2c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/EventEnvironmentValue'
let $codelisturl := 'https://inspire.ec.europa.eu/codelist/EventEnvironmentValue/EventEnvironmentValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $property_string := 'layerGenesisEnvironment'
let $features_selected := $features[self::so:SoilLayer]
let $list := $features_selected/so:layerGenesisEnvironment/@xlink:href

let $messages := 

	for $feature in $features_selected
		let $envDom := $feature/so:layerGenesisEnvironment
		let $iterlist:= for $elem in $list
				return if ($elem = $envDom/@xlink:href)
					then $elem
					else ()

		return
			if (count($envDom) > 1) then
				local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': $property_string, 'multiplicity': 1, 'count': count($envDom)})	
			else if(exists($envDom) and exists($envDom/@xlink:href) and not($envDom/@xlink:href = $valid_href)) then 
				local:addMessage('TR.manual.reviewCodeListValue', map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string, 'value': string-join($envDom/@xlink:href, ','), 'count': count($iterlist)-1})
			else ()

return
(if ($messages and ($messages/@ref = ('TR.wrongMultiplicity'))) then 'FAILED' 
else if($messages and $messages/@ref = ('TR.manual.reviewCodeListValue')) then 'PASSED_MANUAL' 
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.manual.reviewCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID4692039c-67fa-4548-91b3-5d044a700973">
									<label>so-as.a.14: layerGenesisProcess</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#layerGenesisProcess'>layerGenesisProcess</a> elements has a xlink:href attribute pointing to a <a href='http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#preDefinedValue2'>pre-defined value</a>. <br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.3</a>]]></description>
									<parent ref="EID38cabd7f-b5d9-4d2f-8665-7319ab84bb2c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/EventProcessValue'
let $codelisturl := 'https://inspire.ec.europa.eu/codelist/EventProcessValue/EventProcessValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $property_string := 'layerGenesisProcess'
let $features_selected := $features[self::so:SoilLayer]
let $list := $features_selected/so:layerGenesisProcess/@xlink:href

let $messages := 

	for $feature in $features_selected
		let $envDom := $feature/so:layerGenesisProcess
		let $iterlist:= for $elem in $list
				return if ($elem = $envDom/@xlink:href)
					then $elem
					else ()

		return
			if (count($envDom) > 1) then
				local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'element': $property_string, 'multiplicity': 1, 'count': count($envDom)})	
			else if(exists($envDom) and exists($envDom/@xlink:href) and not($envDom/@xlink:href = $valid_href)) then 
				local:addMessage('TR.manual.reviewCodeListValue', map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'property': $property_string, 'value': string-join($envDom/@xlink:href, ','), 'count': count($iterlist)-1})
			else ()

return
(if ($messages and ($messages/@ref = ('TR.wrongMultiplicity'))) then 'FAILED' 
else if($messages and $messages/@ref = ('TR.manual.reviewCodeListValue')) then 'PASSED_MANUAL' 
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.manual.reviewCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID9300bc1f-a06d-4e02-8f68-f0701e947225">
									<label>so-as.a.15: layerRockType</label>
									<description><![CDATA[Check that all the <a href = 'http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#layerRockType'>layerRockType</a> elements has a xlink:href attribute pointing to a <a href='http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values#preDefinedValue3'>pre-defined value</a>. <br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.3</a>]]></description>
									<parent ref="EID38cabd7f-b5d9-4d2f-8665-7319ab84bb2c"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/LithologyValue'
let $codelisturl := 'https://inspire.ec.europa.eu/codelist/LithologyValue/LithologyValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $property_string := 'layerRockType'
let $features_selected := $features[self::so:SoilLayer]
let $list := $features_selected/so:layerRockType/@xlink:href

let $messages := 

	for $feature in $features_selected
		let $envDom := $feature/so:layerRockType
		let $wrong_urls := for $link in $envDom/@xlink:href
								let $iterlist:= for $elem in $list
									return if ($elem = $link)
										then $elem
										else ()
								return if (not($link = $valid_href)) then
									local:addMessage('TR.manual.reviewCodeListValue', map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string, 'value': string-join($envDom/@xlink:href, ','), 'count': count($iterlist)-1})
								else()
		return ($wrong_urls)

return
(if ($messages) then 'PASSED_MANUAL'
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.manual.reviewCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EIDe6fb3efd-0d8a-4045-8408-8c38ecee4f7b">
					<label>Constraints</label>
					<description>Verify that the features provided in the dataset adhere to the constraints specified in the INSPIRE application schema.</description>
					<parent ref="EID88a83353-3140-4c29-8844-6a9c7dbc549d"/>
					<testSteps>
						<TestStep id="EIDdb852351-046e-4132-9bc9-9afe13087942">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EIDe6fb3efd-0d8a-4045-8408-8c38ecee4f7b"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EIDda005b9f-699b-4155-93f5-00d5a1093193">
									<label>so-as.b.1: layerType geogenic</label>
									<description><![CDATA[Check that the attributes <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/constraints#layerGenesisProcess">layerGenesisProcess</a>, <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/constraints#layerGenesisEnvironment">layerGenesisEnvironment</a>, <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/constraints#layerGenesisProcessState">layerGenesisProcessState</a> and <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/constraints#layerRockType">layerRockType</a> are only provided where the layerType is of the value “<a href="http://inspire.ec.europa.eu/codelist/LayerTypeValue/geogenic">geogenic</a>”.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.6</a>]]></description>
									<parent ref="EIDdb852351-046e-4132-9bc9-9afe13087942"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features_selected := $features[self::so:SoilLayer]
let $messages :=
	for $feature in $features_selected
		let $envDomlgp := $feature/so:layerGenesisProcess
		let $envDomlge := $feature/so:layerGenesisEnvironment
		let $envDomlgps := $feature/so:layerGenesisProcessState
		let $envDomlrt := $feature/so:layerRockType
		let $envDomlt := $feature/so:layerType
		let $property_stringlt := 'layerType'

		return

			if (not(exists($envDomlt))) then
				local:addMessage('TR.missingElement',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_stringlt})
			else if (count($envDomlt) > 1) then
				local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': $property_stringlt, 'multiplicity': 1, 'count': count($envDomlt)})
			else if (not(count($envDomlt) = count($envDomlt/@xlink:href))) then
				local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_stringlt, 'attribute': 'xlink:href'})
			else if (($envDomlt/@xlink:href = 'http://inspire.ec.europa.eu/codelist/LayerTypeValue/geogenic' and not(exists($envDomlgp) and exists($envDomlge) and exists($envDomlgps) and exists($envDomlrt))) or (not($envDomlt/@xlink:href = 'http://inspire.ec.europa.eu/codelist/LayerTypeValue/geogenic') and (exists($envDomlgp) or exists($envDomlge) or exists($envDomlgps) or exists($envDomlrt)))) then
				local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'constraint': ' the attributes layerGenesisProcess, layerGenesisEnvironment, layerGenesisProcessState and layerRockType are only provided where the layerType is of the value “geogenic”', 'additionalInfo': ''}) 
			
			else()
return
(if ($messages) then 'FAILED' 
else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.constraintViolation"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID0e2ace3e-b419-4403-8b4c-e7a72e0afd2c">
									<label>so-as.b.2: RangeType</label>
									<description><![CDATA[Check that at least one of the values (<a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/constraints#upperValue">upperValue</a> or <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/constraints#lowerValue">lowerValue</a>) of the RangeType dataType is not empty.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.6</a>]]></description>
									<parent ref="EIDdb852351-046e-4132-9bc9-9afe13087942"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features_selected := $features[self::so:SoilLayer | self::so:SoilHorizon]
let $features_selected_sb := $features[self::so:SoilBody]
let $propertystringuv := 'upperValue'
let $propertystringlv := 'lowerValue'
let $messages_pedr :=
	for $feature in $features_selected/so:profileElementDepthRange/so:RangeType
		let $envDomuv := $feature/so:upperValue
		let $envDomlv := $feature/so:lowerValue

		return
			if(count($envDomuv) > 1) then
				local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'element': $propertystringuv, 'multiplicity': '0 or 1', 'count': count($envDomuv)})
			else if(count($envDomlv) > 1) then
				local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature/../..), 'featureType':local-name($feature/../..), 'gmlid': string($feature/../../@*:id), 'element': $propertystringlv, 'multiplicity': '0 or 1', 'count': count($envDomlv)})  
			else if (not(exists($envDomuv)) and not(exists($envDomlv))) then
				local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature/../..), 'featureType': local-name($feature/../..), 'gmlid': string($feature/../../@gml:id), 'constraint': 'Check that at least one of the values (upperValue or lowerValue) of the RangeType dataType is not empty', 'additionalInfo':''})
			else ()

let $messages_psf :=
	for $feature in $features_selected/so:particleSizeFraction/so:ParticleSizeFractionType/so:fractionParticleSizeRange/so:RangeType
		let $envDomuv := $feature/so:upperValue
		let $envDomlv := $feature/so:lowerValue

		return
			if(count($envDomuv) > 1) then
				local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'element': $propertystringuv, 'multiplicity': '0 or 1', 'count': count($envDomuv)})
			else if(count($envDomlv) > 1) then
				local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'element': $propertystringlv, 'multiplicity': '0 or 1', 'count': count($envDomlv)})  
			else if (not(exists($envDomuv)) and not(exists($envDomlv))) then
				local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature/../../../..), 'featureType': local-name($feature/../../../..), 'gmlid': string($feature/../../../../@gml:id), 'constraint': 'Check that at least one of the values (upperValue or lowerValue) of the RangeType dataType is not empty', 'additionalInfo':''})
			else ()

let $messages_db :=
	for $feature in $features_selected_sb/so:isDescribedBy/so:DerivedProfilePresenceInSoilBody/so:derivedProfilePercentageRange/so:RangeType
		let $envDomuv := $feature/so:upperValue
		let $envDomlv := $feature/so:lowerValue

		return
			if(count($envDomuv) > 1) then
				local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'element': $propertystringuv, 'multiplicity': '0 or 1', 'count': count($envDomuv)})
			else if(count($envDomlv) > 1) then
				local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'element': $propertystringlv, 'multiplicity': '0 or 1', 'count': count($envDomlv)})  
			else if (not(exists($envDomuv)) and not(exists($envDomlv))) then
				local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature/../../../..), 'featureType': local-name($feature/../../../..), 'gmlid': string($feature/../../../../@gml:id), 'constraint': 'Check that at least one of the values (upperValue or lowerValue) of the RangeType dataType is not empty', 'additionalInfo':''})
			else ()

let $messages := ($messages_pedr, $messages_psf, $messages_db)

return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.constraintViolation"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDf230b1a8-f841-4f7c-be9d-b010e8776887">
									<label>so-as.b.3: ProfileElement (SoilHorizon or SoilLayer)</label>
									<description><![CDATA[<ul><li>Check that to fill the featureOfInterest property of the profile element observations of a ProfileElement object, the same ProfileElement object is used.</li>
<li>Check that the observedProperty of the profile element observation is specified using a value from the <a href ="http://inspire.ec.europa.eu/codelist/ProfileElementParameterNameValue"> ProfileElementParameterNameValue</a> code list.</li>
<li>Check that the result of the profile element observation is of one of the following types: Number; RangeType; CharacterString.</li></ul>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.6</a>]]></description>
									<parent ref="EIDdb852351-046e-4132-9bc9-9afe13087942"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
								<TestAssertion id="EID529acc8b-d10b-4914-91b7-b1f7d2d3654e">
									<label>so-as.b.4: SoilDerivedObject</label>
									<description><![CDATA[<ul><li>Check that to fill the featureOfInterest property of the soil derived object observation, the same SoilDerivedObject object is used.</li>
<li>Check that the observedProperty of the soil derived object observation is specified using a value from the <a href= "http://inspire.ec.europa.eu/codelist/SoilDerivedObjectParameterNameValue">SoilDerivedObjectParameterNameValue</a> code list.</li>
<li>Check that the result of the soil derived object observation is of one of the following types: Number; RangeType; CharacterString.</li></ul>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li></ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.6</a>]]></description>
									<parent ref="EIDdb852351-046e-4132-9bc9-9afe13087942"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
								<TestAssertion id="EID0076c8d1-e4e7-4e7a-9b21-22831bcfeb30">
									<label>so-as.b.5: SoilProfile (SoilHorizon or SoilLayer)</label>
									<description><![CDATA[<ul><li>Check that to fill the featureOfInterest property of the soil profile observations of a SoilProfile object, that same SoilProfile object is used.</li>
<li>Check that the observedProperty of the soil profile observation shall be specified using a value from the <a href="http://inspire.ec.europa.eu/codelist/SoilProfileParameterNameValue">SoilProfileParameterNameValue</a> code list.</li>
<li>Check that the result of the soil profile observation is of one of the following types: Number; RangeType; CharacterString.</li></ul>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.6</a>]]></description>
									<parent ref="EIDdb852351-046e-4132-9bc9-9afe13087942"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
								<TestAssertion id="EIDa1031e89-44dd-45b4-98f4-b9366f28998a">
									<label>so-as.b.6: SoilSite</label>
									<description><![CDATA[<ul><li>Check that to fill the featureOfInterest property of the soil site observations of a SoilSite object, that same SoilSite object is used.</li>
<li>Check that the observedProperty of the soil site observation shall be specified using a value from the <a href="http://inspire.ec.europa.eu/codelist/SoilSiteParameterNameValue">SoilSiteParameterNameValue</a> code list.</li>
<li>Check that the result of the soil site observation is of one of the following types: Number; RangeType; CharacterString.</li>
<li>Check that the result of the soil site observation is of type SoilObservationResult.</li></ul>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.6</a>]]></description>
									<parent ref="EIDdb852351-046e-4132-9bc9-9afe13087942"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
								<TestAssertion id="EID89f5280f-5a60-42e1-8220-a2a0b1885b6e">
									<label>so-as.b.7: SoilThemeCoverage</label>
									<description><![CDATA[Check that the <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/constraints#rangeSetSTC">rangeSet</a> values are of one of the following types: Number; RangeType; CharacterString.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.6</a>]]></description>
									<parent ref="EIDdb852351-046e-4132-9bc9-9afe13087942"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
								<TestAssertion id="EIDb4106228-c1a1-45cc-9923-324c5a5d075e">
									<label>so-as.b.8: SoilThemeDescriptiveCoverage</label>
									<description><![CDATA[Check that the <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/constraints#rangeSetSTDC">rangeSet</a> values are of one of the following types: Number; RangeType; CharacterString.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.6</a>]]></description>
									<parent ref="EIDdb852351-046e-4132-9bc9-9afe13087942"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EIDd3b574ba-2cb3-4253-8cfb-6ca4b27f6da6">
					<label>Specific requirements</label>
					<description><![CDATA[Verify that the following specific requirements are meet:
					<ul><li>(1) The values of the first level hierarchical code lists ProfileElementParameterNameValue, SoilDerivedObjectParameterNameValue, SoilProfileParameterNameValue, SoilSiteParameterNameValue (chemicalParameter, biologicalParameter, physicalParameter) serve only the purpose of structuring; only the lower-level values shall be used.</li>
    				<li>(2) When an additional descriptive parameter for the soil derived object is needed, the parameter attribute of the OM_Observation spatial object type shall be used.</li>
    				<li>(3) Only one Other Horizon Notation Type classification shall be used for a dataset.</li>
    				<li>(4) Only one Other Soil Name Type classification shall be used for a dataset.</li></ul>]]>
					</description>
					<parent ref="EID88a83353-3140-4c29-8844-6a9c7dbc549d"/>
					<testSteps>
						<TestStep id="EID45083a17-4b3c-45f8-89be-2d5262058f29">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EIDd3b574ba-2cb3-4253-8cfb-6ca4b27f6da6"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID2fc1727c-02cb-4fb8-a626-030a94f1501f">
									<label>so-as.c.1: lower-level values</label>
									<description><![CDATA[Check that only the lower-level values of the hierarchical code lists <a href= "http://inspire.ec.europa.eu/codelist/ProfileElementParameterNameValue">ProfileElementParameterNameValue</a>, <a href="http://inspire.ec.europa.eu/codelist/SoilDerivedObjectParameterNameValue"> SoilDerivedObjectParameterNameValue</a>, <a href="http://inspire.ec.europa.eu/codelist/SoilProfileParameterNameValue"SoilProfileParameterNameValue</a>, <a href="http://inspire.ec.europa.eu/codelist/SoilSiteParameterNameValue">SoilSiteParameterNameValue</a> are used. The values of the first level: chemicalParameter, biologicalParameter, physicalParameter serve only the purpose of structuring and cannnot be used (e.g. <a href="http://inspire.ec.europa.eu/codelist/ProfileElementParameterNameValue/chemicalParameter">http://inspire.ec.europa.eu/codelist/ProfileElementParameterNameValue/chemicalParameter</a>).<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Annex IV, Section 3.4: The values of the first level hierarchical code lists:ProfileElementParameterNameValue, SoilDerivedObjectParameterNameValue, SoilProfileParameterNameValue, SoilSiteParameterNameValue (chemicalParameter, biologicalParameter, physicalParameter) serve only the purpose of structuring; only the lower-level values shall be used.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/specific-req" target="_blank">Abstract Test Case 'Specific requirement'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.6</a>]]></description>
									<parent ref="EID45083a17-4b3c-45f8-89be-2d5262058f29"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
								<TestAssertion id="EIDa3e7fc8f-7cdb-4156-92ed-9101a6e37b4c">
									<label>so-as.c.2: soil derived object</label>
									<description><![CDATA[Check that when an additional descriptive parameter for the soil derived object is needed, the parameter attribute of the OM_Observation spatial object type is used.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Annex IV, Section 3.4: When an additional descriptive parameter for the soil derived object is needed, the parameter attribute of the OM_Observation spatial object type shall be used.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/specific-req" target="_blank">Abstract Test Case 'Specific requirement'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.6</a>]]></description>
									<parent ref="EID45083a17-4b3c-45f8-89be-2d5262058f29"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
								<TestAssertion id="EID5aec21b8-8126-4784-9e9f-abd06c0aa200">
									<label>so-as.c.3: OtherHorizonNotationTypeValue</label>
									<description><![CDATA[Check that only one Other Horizon Notation Type classification is used for a dataset.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Annex IV, Section 3.4: Only one Other Horizon Notation Type classification shall be used for a dataset.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/specific-req" target="_blank">Abstract Test Case 'Specific requirement'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.6</a>]]></description>
									<parent ref="EID45083a17-4b3c-45f8-89be-2d5262058f29"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
								<TestAssertion id="EIDc5603fa7-c6b8-4350-b14f-2c7bc049d9b1">
									<label>so-as.c.4: OtherSoilNameTypeValue</label>
									<description><![CDATA[Check that only one Other Soil Name Type classification is used for a dataset.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Annex IV, Section 3.4: Only one Other Soil Name Type classification shall be used for a dataset.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-so/master/so-as/specific-req" target="_blank">Abstract Test Case 'Specific requirement'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_SO_v3.0.pdf">INSPIRE Data Specification on Soil, A.1.6</a>]]></description>
									<parent ref="EID45083a17-4b3c-45f8-89be-2d5262058f29"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
			</testCases>
		</TestModule>
	</testModules>
</ExecutableTestSuite>