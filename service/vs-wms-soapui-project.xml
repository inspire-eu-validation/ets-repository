<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="eec9d674-d94b-4d8d-b744-1309c6cae1d2" activeEnvironment="Default" name="Conformance Class: View Service - WMS" resourceRoot="${projectDir}" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:description><![CDATA[This test suite examines a WMS View Service against the requirements of the INSPIRE Profile of ISO 19128 into the Technical Guidance for the implementation of INSPIRE View Services 3.11.
<br/> <br/>
<b>This is a draft version. It has limitations and is expected to contain errors.</b> Please report any issues or problems <a href="https://github.com/inspire-eu-validation/community" target="_blank">in GitHub</a>.
<br/> <br/>
Known limitations are documented in the description of the applicable test case or test assertion.
<br/> <br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128" target="_blank">Conformance Class 'View Service WMS'</a>]]></con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="GetCapabilities_Operation"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="at11-getcapabilities-resource-type-is-service"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:testSuite id="a5986848-3e54-4648-b8d4-09ada35a460f" name="GetCapabilities_Operation"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="f7184e7c-7a86-4cf5-8b19-1f4431cc81f5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="initial-testcase" searchProperties="true"><con:settings/><con:testStep type="groovy" name="reset-properties" id="f3e7710e-de55-4d55-9279-801c70e7554b"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue( 'extended_capabilities_scenario', '' );
testRunner.testCase.testSuite.project.setPropertyValue( 'lastServiceEndpoint', '');</script></con:config></con:testStep><con:testStep type="httprequest" name="http-request" id="57d85050-3859-433d-a242-15b9c47e35d5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e3a4c9b4-ff53-4b3a-a62d-908b2de3aa7f" name="http-request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="a3a3f4d9-6cec-439c-87dd-fc3d74d56270" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="OwsExceptionReportAssertion" id="fdda2347-adad-4635-af5f-5b9e49bc0567" name="Fail if service returns OWS Exception Report"/><con:assertion type="Response SLA Assertion" id="0352da2a-abdd-488a-a66d-211b62371836" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>version</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style><con:default>${#Project#version}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="set-extended-capabilities-scenario" id="e968301b-09cb-40f5-a278-e0c8a7adf202"><con:settings/><con:config><script>def response = context.expand('${http-request#Response}');
def capabilities = new XmlSlurper().parseText(response);
def scenario = '1';
testRunner.testCase.testSuite.project.setPropertyValue( "extended_capabilities_scenario", scenario );
if(capabilities.Capability.ExtendedCapabilities.ResourceLocator.size() == 1 ||
   capabilities.Capability.ExtendedCapabilities.ResourceType.size() == 1 ||
   capabilities.Capability.ExtendedCapabilities.TemporalReference.size() == 1 ||
   capabilities.Capability.ExtendedCapabilities.Conformity.size() == 1 ||
   capabilities.Capability.ExtendedCapabilities.MetadataPointOfContact.size() == 1 ||
   capabilities.Capability.ExtendedCapabilities.MetadataDate.size() == 1 ||
   capabilities.Capability.ExtendedCapabilities.SpatialDataServiceType.size() == 1 ||
   capabilities.Capability.ExtendedCapabilities.MandatoryKeyword.size() == 1 ||
   capabilities.Capability.ExtendedCapabilities.Keyword.size() == 1){
	scenario = '2';
	testRunner.testCase.testSuite.project.setPropertyValue( "extended_capabilities_scenario", scenario );
}
log.info('Extended Capabilities Scenario: ' + scenario);</script></con:config></con:testStep><con:testStep type="groovy" name="set-lastserviceendpoint" id="b34c2e7e-3d7d-401e-8a5e-f1a7d7e1ad6f"><con:settings/><con:config><script>def lastServiceEndpoint = context.expand('${http-request#EndPoint}');
testRunner.testCase.testSuite.project.setPropertyValue( 'lastServiceEndpoint', lastServiceEndpoint);</script></con:config></con:testStep><con:testStep type="groovy" name="set-getmap-operation-properties" id="53593fba-d4c0-4a1d-8792-6dab56be904b"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites['GetCapabilities_Operation'].testCases['initial-testcase'];
def response = tc.getTestStepByName('http-request').getPropertyValue('Response');
def capabilities = new XmlSlurper(false, true).parseText(response);
def ts = testRunner.testCase.testSuite.project.testSuites['GetMap_Operation'];

def layer = capabilities.Capability.depthFirst().findAll{it.name()=='Layer'  &amp;&amp; it.Name.size() > 0}[0];
if(layer.size() == 1){
	ts.setPropertyValue('getMapEndpoint', capabilities.Capability.Request.GetMap.DCPType.HTTP.Get.OnlineResource.@'xlink:href'.toString());
	ts.setPropertyValue('layers', layer.Name.toString());
	ts.setPropertyValue('styles', layer.Style[0].Name.toString());
	ts.setPropertyValue('crs', layer.CRS[0].toString());
	
	def boundingBox = layer.depthFirst().findAll{it.@CRS == layer.CRS[0]}[0];
	def bbox = boundingBox.@minx.toString() + ',' + boundingBox.@miny.toString() + ',' + boundingBox.@maxx.toString() + ',' + boundingBox.@maxy.toString();
	ts.setPropertyValue('bbox', bbox);
	
	ts.setPropertyValue('width', '500');
	ts.setPropertyValue('height', '500');

	if(capabilities.Capability.Request.GetMap.Format.depthFirst().findAll{it =='image/png'}.size() != 0){
		ts.setPropertyValue('format', 'image/png');
	}
	else if(capabilities.Capability.Request.GetMap.Format.depthFirst().findAll{it =='image/gif'}.size() != 0){
		ts.setPropertyValue('format', 'image/gif');
	}
	else{
		ts.setPropertyValue('format', '');
	}
}</script></con:config></con:testStep><con:testStep type="httprequest" name="http-request-layer-harmonised-names" id="df044432-b759-4ce3-829b-f82c830b056f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="8c4fb121-c42b-458b-94f0-7e538585bf99" name="http-request-layer-harmonised-names" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://inspire.ec.europa.eu/layer/layer.en.xml</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="b6c9b346-a247-4fbe-9a4a-b3ebdae4c5f5" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="47c7fb18-1139-4c95-aedf-3162af6847d1" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="452f3b7c-9db1-47c7-9621-6f76b761feea" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="check-initial-testcase" searchProperties="true"><con:settings/><con:testStep type="groovy" name="run-initial-testcase-if-needed" id="bb0e3025-748d-436e-8910-7b4db9452988"><con:settings/><con:config><script>def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def serviceEndPoint = testRunner.testCase.testSuite.project.getPropertyValue( 'serviceEndpoint');
def lastServiceEndPoint = testRunner.testCase.testSuite.project.getPropertyValue( 'lastServiceEndpoint');
def makeInitialRequest = false;
if (tc.getTestStepByName("http-request").getPropertyValue("Response") == null){
	makeInitialRequest = true;
}
else if(serviceEndPoint != lastServiceEndPoint){
	makeInitialRequest = true;
}
if(makeInitialRequest){
	runner = tc.run(new com.eviware.soapui.support.types.StringToObjectMap(), false);
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="55bd534f-a980-4a52-9361-200a3721ba6a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at04-getcapabilities-xml-schema-validation" searchProperties="true"><con:description><![CDATA[<p>Test that the XML capabilities document is schema valid.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at04-getcapabilities-xml-schema-validation" target="_blank">XML schema validation</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="a10b0271-70c4-402f-9b4b-6d35de514d76"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-xml-schema-valid" id="0ac9fadb-6c2e-4f52-b23f-303a5956a25e"><con:settings/><con:config><script>import javax.xml.transform.stream.StreamSource;
import javax.xml.validation.SchemaFactory;
import javax.xml.XMLConstants;
import de.interactive_instruments.etf.suim.TranslatableAssertionError;

xsdUrl = 'http://inspire.ec.europa.eu/schemas/inspire_vs/1.0/inspire_vs.xsd'
xmlUrl = testRunner.testCase.testSuite.project.getPropertyValue("serviceEndpoint");

try{
	new URL( xsdUrl ).withInputStream { xsd ->
	  new URL( xmlUrl ).withInputStream { xml ->
	    SchemaFactory.newInstance( XMLConstants.W3C_XML_SCHEMA_NS_URI )
	                 .newSchema( new StreamSource( xsd ) )
	                 .newValidator()
	                 .validate( new StreamSource( xml ) )
	
	  }
	}
}
catch (Exception e){
	String[] assertParams = ['error', e];
	throw new TranslatableAssertionError('TR.invalidSchema', assertParams);
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8d0ee3be-3c0e-498e-85f3-12c6ac5f6c74" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at05-getcapabilities-get-capabilities-request-parameter" searchProperties="true"><con:description><![CDATA[<p>Test that the GetCapabilities operation is supported implementing the Get View Service Metadata.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at05-getcapabilities-get-capabilities-request-parameter" target="_blank">GetCapabilities request parameters</a></p>]]></con:description><con:settings/><con:testStep type="httprequest" name="http-request-no-version-parameter" id="0464c1ae-35e1-400a-8520-7fc8fc8cbfb8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="ac2b09f1-5524-4961-8dcb-9b067b6e344b" name="http-request-no-version-parameter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="1119cddd-330f-4baf-93dc-aafa0ecda0e8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="OwsExceptionReportAssertion" id="71ab12b2-c64a-469e-9a58-a78f43da8165" name="Fail if service returns OWS Exception Report"/><con:assertion type="Response SLA Assertion" id="4ab0b791-fe27-4d0e-b8da-124058d02a60" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-no-request-parameter" id="5b84db86-491e-4916-8357-75bc56d5a598"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4265cdbe-c701-401f-9e0c-f8ba699f32ab" name="http-request-no-request-parameter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="41518e13-ee13-41f4-ae8b-a2fb1058707c" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="642c5459-3b94-46b8-aaa5-adf76123c644" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
	String[] assertParams = ['parameter', 'request'];
	throw new TranslatableAssertionError('TR.noMandatoryParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="9e4d50b8-a943-4f04-845b-e8a9652bc1f2" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-wrong-request-parameter" id="6a46cb67-4cbd-4d68-85e2-1533fa54bbe5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="60c73c99-41cc-4902-8f8b-c7c3ba83f90f" name="http-request-wrong-request-parameter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="0541754a-dc44-4f02-a141-e3b2b408e23a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="be70e6f8-f0c7-414f-ae7f-0074b240ad27" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
	String[] assertParams = ['parameter', 'request'];
	throw new TranslatableAssertionError('TR.wrongParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="6ca04c31-fb63-492b-990a-24aa400c05c0" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>zzzz</con:value><con:style>QUERY</con:style><con:default>zzzz</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-no-service-parameter" id="8806d055-8dae-4f39-bca5-6bf521c48fd2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="9a5785cc-24ed-40b0-8f0d-3a86b0204a26" name="http-request-no-service-parameter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="c4a8dfd6-8d5b-457b-89e9-e3e7873db948" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4ff083af-55d3-49be-8a7b-3337c90e2a29" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
	String[] assertParams = ['parameter', 'service'];
	throw new TranslatableAssertionError('TR.noMandatoryParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="74050491-4709-4c09-8f9b-ae55ab630db5" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-wrong-service-parameter" id="cdd2b00a-ec48-49c8-b07a-cbe98b8268b3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="85de5ad4-45cd-4c28-93d9-5601521daf3f" name="http-request-wrong-service-parameter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="90938d28-73ea-4044-99b8-05dc71ed75e9" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="cf1483e2-3d9c-4724-8886-1bbcfea2ff8a" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
	String[] assertParams = ['parameter', 'service'];
	throw new TranslatableAssertionError('TR.wrongParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="1fc51b1a-977b-4ec1-ad66-579f5d9d0bd6" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>zzzz</con:value><con:style>QUERY</con:style><con:default>zzzz</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0c04daed-7a46-4957-bc7e-0a22cc029ed2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at08-getcapabilities-language-section-in-extended-capabilities" searchProperties="true"><con:description><![CDATA[<p>Test that a language section is provided to fulfil the language requirements.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at08-getcapabilities-language-section-in-extended-capabilities" target="_blank">Language section in Extended Capabilities</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="7b7a635b-0c8b-4788-924f-c0c6bcaea8d2"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-language-section" id="349ba037-a637-43c8-a5c7-9f1b98dbefdd"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(capabilities.Capability.ExtendedCapabilities.SupportedLanguages.size() != 1){
	String[] assertParams = ['element', 'ExtendedCapabilities/SupportedLanguages'];
	throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
}
else if(capabilities.Capability.ExtendedCapabilities.SupportedLanguages.toString().length() == 0){
	String[] assertParams = ['element', 'ExtendedCapabilities/SupportedLanguages'];
	throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
}
if(capabilities.Capability.ExtendedCapabilities.ResponseLanguage.size() != 1){
	String[] assertParams = ['element', 'ExtendedCapabilities/ResponseLanguage'];
	throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
}
else if(capabilities.Capability.ExtendedCapabilities.ResponseLanguage.toString().length() == 0){
	String[] assertParams = ['element', 'ExtendedCapabilities/ResponseLanguage'];
	throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c3591f4d-025e-437a-829e-b92a2acf9c30" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at09-getcapabilities-view-service-metadata-in-dicovery-service" searchProperties="true"><con:description><![CDATA[<p>Test that the metadata of the View Service is published in a Discovery Service.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at09-getcapabilities-view-service-metadata-in-dicovery-service" target="_blank">View Service Metadata in Discovery Service</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="a6a3c5c1-c9b8-4097-8000-cde984f01515"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="httprequest" name="http-request-metadata" id="021f8877-3876-496f-a9bc-0b1949fec174" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="47dc0752-c129-4a53-b542-13425d14e699" name="http-request-metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestCase#metadataEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="66a813f3-0e2d-41de-a6fe-c0e3b596a79b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="OwsExceptionReportAssertion" id="fcb50add-affc-4bb9-923d-8171ae970fe3" name="Fail if service returns OWS Exception Report"/><con:assertion type="Response SLA Assertion" id="ab838fea-55ac-46d2-8038-00c9e6682f99" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="check-metadataurl" id="3370ba6f-c044-448e-8c44-062716fd346c"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["at09-getcapabilities-view-service-metadata-in-dicovery-service"];
testRunner.testCase.setPropertyValue("metadataEndpoint", '');
def ts = testRunner.testCase.testSuite.project.testSuites['GetCapabilities_Operation'].testCases['at09-getcapabilities-view-service-metadata-in-dicovery-service'].getTestStepByName('http-request-metadata');
def metadataEndpoint = capabilities.Capability.ExtendedCapabilities.MetadataUrl.URL;
if (scenario == '1' &amp;&amp; metadataEndpoint.size() != 1){
	String[] assertParams = ['element', 'ExtendedCapabilities/MetadataUrl/URL'];
	throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
}
else if(scenario == '1' &amp;&amp; metadataEndpoint.toString().length() == 0){
	String[] assertParams = ['element', 'ExtendedCapabilities/MetadataUrl/URL'];
	throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
}
else if(metadataEndpoint.toString().length() != 0){
	testRunner.testCase.setPropertyValue("metadataEndpoint", metadataEndpoint.toString());
	ts.setDisabled(false);
	ts.run(testRunner, context);
}
tc.getTestStepByName('http-request-metadata').setDisabled(true);</script></con:config></con:testStep><con:testStep type="httprequest" name="manual-check" id="7a6d3d1d-6558-41d1-8fb4-a03815a5eb1a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="818b64f2-e7ac-4ce8-a195-6e84e0806667" name="manual-check" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5c25d26c-ea92-4845-8c3f-21c08f413cb8" name="manual-check-metadataurl"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists(
  '//zzzz',
  'TR.manual.testManual09'
);</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter required="false" disableUrlEncoding="false"><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#request}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties><con:property><con:name>metadataEndpoint</con:name><con:value>http://www.ign.es/csw-inspire/srv/spa/csw?SERVICE=CSW&amp;VERSION=2.0.2&amp;REQUEST=GetRecordById&amp;outputSchema=http://www.isotc211.org/2005/gmd&amp;ElementSetName=full&amp;ID=spaignwms_unidades_administrativas_2013</con:value></con:property></con:properties></con:testCase><con:testCase id="ec968506-6760-47db-bb01-9fa4b9aca10b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at10-getcapabilities-title-and-abstract" searchProperties="true"><con:description><![CDATA[<p>Test that Title, Abstract and AccessConstraints elements are provided.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at10-getcapabilities-title-and-abstract" target="_blank">Mapping of service metadata elements</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="14da54c3-89da-49b8-a52c-bce8f56a36be"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-title-abstract-accessconstraints" id="e3989ad7-9c7c-4762-8419-9f8512a2922d"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(capabilities.Service.Title.size() != 1){
	String[] assertParams = ['element', 'Service/Title'];
	throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
}
else if(capabilities.Service.Title.toString().length() == 0){
	String[] assertParams = ['element', 'Service/Title'];
	throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
}
if(capabilities.Service.Abstract.size() != 1){
	String[] assertParams = ['element', 'Service/Abstract'];
	throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
}
else if(capabilities.Service.Abstract.toString().length() == 0){
	String[] assertParams = ['element', 'Service/Abstract'];
	throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
}
if(capabilities.Service.AccessConstraints.size() == 0){
	String[] assertParams = ['element', 'Service/AccessConstraints'];
	throw new TranslatableAssertionError('TR.multiplicityShallBeOneOrMore', assertParams);
}
else if(capabilities.Service.AccessConstraints.toString().length() == 0){
	String[] assertParams = ['element', 'Service/AccessConstraints'];
	throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d1fe6d21-4061-4efd-a627-cfa91cab5846" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at11-getcapabilities-resource-type-is-service" searchProperties="true"><con:description><![CDATA[<p>Test that a ResourceType element is given and the value is fixed to 'service'.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at11-getcapabilities-resource-type-is-service" target="_blank">Resource type is service</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="7bb4b8d6-e6f5-4165-806e-38bb9bfa24dc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-resource-type" id="d02b1884-59ed-4be7-bfbc-ebb709b2a83d"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def resourceType = capabilities.Capability.ExtendedCapabilities.ResourceType;
	if(resourceType.size() != 1){
		String[] assertParams = ['element', 'ExtendedCapabilities/ResourceType'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
	}
	else if(resourceType.toString().length() == 0){
		String[] assertParams = ['element', 'ExtendedCapabilities/ResourceType'];
		throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
	}
	else if(resourceType != 'service'){
		String[] assertParams = ['element', 'ExtendedCapabilities/ResourceType', 'value', 'service'];
		throw new TranslatableAssertionError('TR.valueShallBe', assertParams);
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="97c30e58-255e-4b70-9c55-6cf310666dd7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at12-getcapabilities-resource-locator" searchProperties="true"><con:description><![CDATA[<p>Test that a Resource Locator element is provided within the Extended Capabilities section.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at12-getcapabilities-resource-locator" target="_blank">Resource locator</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="b2b8447f-2a2c-4d57-8194-0f4f5ce17855"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-resource-locator" id="d29f39cc-85d6-4d5d-8e75-251f1eb04da3"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def resourceLocator = capabilities.Capability.ExtendedCapabilities.ResourceLocator;
	if(resourceLocator.size() == 0){
		String[] assertParams = ['element', 'Capability/ExtendedCapabilities/ResourceLocator'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeOneOrMore', assertParams);
	}
	else if(resourceLocator.toString().length() == 0){
		String[] assertParams = ['element', 'Capability/ExtendedCapabilities/ResourceLocator'];
		throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c431515e-068f-429c-aa0a-187d994e53db" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at13-getcapabilities-map-coupled-resource-metadata" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="manual-check" id="aefc4a6d-f013-43cd-8877-ed5cddc43f26"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d3ffc786-a183-480d-b7e5-3ffe16e15723" name="manual-check" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="7a1d0cf4-30c0-4cb8-adbf-4c161700b470" name="check-manually-coupled-resource"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists(
  '//zzzz',
  'TR.manual.testManual13'
);</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Projec#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7887cf75-a7c9-4e9d-98b4-bdfc993153a0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at14-getcapabilities-map-coupled-resource-metadata-url" searchProperties="true"><con:description><![CDATA[<p>Test that, in case of a MetadataURL element is provided, a linkage is provided to a metadata document.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at14-getcapabilities-map-coupled-resource-metadata-url" target="_blank">Map Coupled Resource metadata URL</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="1b2b8893-2b6f-46d3-b4dc-84189e50a663"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-coupled-resource" id="6f967a15-cc2f-4fbb-8e2a-91e13189a312"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer' &amp;&amp; it.MetadataURL.size() != 0};
layers.each{ layer ->
	if(layer.MetadataURL.OnlineResource.size() == 0){
		String[] assertParams = ['element', 'Layer/MetadataURL/OnlineResource'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
	}
	else if(layer.MetadataURL.OnlineResource.'@xlink:href'.toString().length() == 0){
		throw new TranslatableAssertionError("TR.onlineResourceLink");
	}
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="11accc35-5947-4cf1-982e-acd4c41fb35b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at15-getcapabilities-map-sds-type-with-extendedcapabilities" searchProperties="true"><con:description><![CDATA[<p>Test that a SpatialDataService Type element is given within the ExtendedCapabilities section.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at15-getcapabilities-map-sds-type-with-extendedcapabilities" target="_blank">Map SDS Type with Extended Capabilities</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="230f5b22-ae91-499f-b6c1-4fc477e97f47"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-sds-type" id="759c9534-c611-476f-9614-859bf60af037"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def spatialDataServiceType = capabilities.Capability.ExtendedCapabilities.SpatialDataServiceType;
	if(spatialDataServiceType.size() != 1){
		String[] assertParams = ['element', 'ExtendedCapabilities/SpatialDataServiceType'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
	}
	else if(spatialDataServiceType.toString().length() == 0){
		String[] assertParams = ['element', 'ExtendedCapabilities/SpatialDataServiceType'];
		throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
	}
	else if(spatialDataServiceType.toString() != 'view'){
		throw new TranslatableAssertionError("TR.invalidSpatialDataServiceType");
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9ff20c0a-df73-402e-8ac1-4d166a3d3336" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at16-getcapabilities-keyword-node" searchProperties="true"><con:description><![CDATA[<p>Test that at least one keyword from the "Classification of Spatial data Services" is provided.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at16-getcapabilities-keyword-node" target="_blank">Keyword Node</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="cafe2a50-442c-410c-abc6-aac6c5ee1990"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-keyword" id="850d6fd7-70d4-44a6-a938-f485b77abdad"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def classificationSDS = ['humanInteractionService', 'humanCatalogueViewer', 'humanGeographicViewer', 'humanGeographicSpreadsheetViewer', 'humanServiceEditor', 'humanChainDefinitionEditor', 'humanWorkflowEnactmentManager', 'humanGeographicFeatureEditor', 'humanGeographicSymbolEditor', 'humanFeatureGeneralizationEditor', 'humanGeographicDataStructureViewer', 'infoManagementService', 'infoFeatureAccessService', 'infoMapAccessService', 'infoCoverageAccessService', 'infoSensorDescriptionService', 'infoProductAccessService', 'infoFeatureTypeService', 'infoCatalogueService', 'infoRegistryService', 'infoGazetteerService', 'infoOrderHandlingService', 'infoStandingOrderService', 'taskManagementService', 'chainDefinitionService', 'workflowEnactmentService', 'subscriptionService', 'spatialProcessingService', 'spatialCoordinateConversionService', 'spatialCoordinateTransformationService', 'spatialCoverageVectorConversionService', 'spatialImageCoordinateConversionService', 'spatialRectificationService', 'spatialOrthorectificationService', 'spatialSensorGeometryModelAdjustmentService', 'spatialImageGeometryModelConversionService', 'spatialSubsettingService', 'spatialSamplingService', 'spatialTilingChangeService', 'spatialDimensionMeasurementService', 'spatialFeatureManipulationService', 'spatialFeatureMatchingService', 'spatialFeatureGeneralizationService', 'spatialRouteDeterminationService', 'spatialPositioningService', 'spatialProximityAnalysisService', 'thematicProcessingService', 'thematicGoparameterCalculationService', 'thematicClassificationService', 'thematicFeatureGeneralizationService', 'thematicSubsettingService', 'thematicSpatialCountingService', 'thematicChangeDetectionService', 'thematicGeographicInformationExtractionService', 'thematicImageProcessingService', 'thematicReducedResolutionGenerationService', 'thematicImageManipulationService', 'thematicImageUnderstandingService', 'thematicImageSynthesisService', 'thematicMultibandImageManipulationService', 'thematicObjectDetectionService', 'thematicGeoparsingService', 'thematicGeocodingService', 'temporalProcessingService', 'temporalReferenceSystemTransformationService', 'temporalSubsettingService', 'temporalSamplingService', 'temporalProximityAnalysisService', 'metadataProcessingService', 'metadataStatisticalCalculationService', 'metadataGeographicAnnotationService', 'comService', 'comEncodingService', 'comTransferService', 'comGeographicCompressionService', 'comGeographicFormatConversionService', 'comMessagingService', 'comRemoteFileAndExecutableManagement'];

def keywords = capabilities.Service.depthFirst().findAll{it.name() == 'Keyword'};
def keywordInclassification = false;
keywords.each{keyword ->
	if(keyword in classificationSDS){
		keywordInclassification = true;
	}
}
if(!keywordInclassification){
	throw new TranslatableAssertionError("TR.atLeastOneKeywordInClassification");
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="186d16f6-d9e7-4e07-a1f9-0f3759e2e883" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at17-getcapabilities-keyword-list" searchProperties="true"><con:description><![CDATA[<p>Test that if additional keywords are provided they are mapped into a KeywordList element.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at17-getcapabilities-keyword-list" target="_blank">Keyword List</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="3ef728d9-d606-40f8-b0e1-0ad47ceb72a7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-keyword-list" id="3d7db4fb-d6d7-4116-90c0-b644e99df7bc"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def keywords = capabilities.Service.depthFirst().findAll{it.name() == 'Keyword'};
def keywordListChilds = capabilities.Service.KeywordList.depthFirst().findAll{it.name() == 'Keyword'};

if(keywords.size() > 1){
	if(capabilities.Service.KeywordList.size() != 1){
		String[] assertParams = ['element', 'Service.KeywordList'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
	}
	else if(keywords.size() != keywordListChilds.size()){
		throw new TranslatableAssertionError("TR.keywordsInKeywordList");
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d1c55361-6317-48a7-9bb6-b6fefe721317" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at18-getcapabilities-keyword-in-extendedcapabilities" searchProperties="true"><con:description><![CDATA[<p>Test that keywords are mapped as Keyword and MandatoryKeyword elements into ExtendedCapabilities section.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at18-getcapabilities-keyword-in-extendedcapabilities" target="_blank"></a>Keyword within ExtendedCapabilities</p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="e0819518-490a-45d8-9158-197321b149fc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-keyword-extendedcapabilities" id="e34b6ecb-b893-4756-a706-19d83cf014d0"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def keywordsExtended = capabilities.Capability.ExtendedCapabilities.Keyword;
	def keywordsMandatory = capabilities.Capability.ExtendedCapabilities.MandatoryKeyword;

	if(keywordsMandatory.size() == 0){
		String[] assertParams = ['element', 'ExtendedCapabilities/MandatoryKeyword'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeOneOrMore', assertParams);
	}
	if(keywordsMandatory.toString().length() == 0){
		String[] assertParams = ['element', 'ExtendedCapabilities/MandatoryKeyword'];
		throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ac1256e4-4f73-4205-8f81-759c177df734" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at19-getcapabilities-geographic-boundingbox" searchProperties="true"><con:description><![CDATA[<p>Test that a Geographic Bounding Box is given for each Layer element.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at19-getcapabilities-geographic-boundingbox" target="_blank">Geographic BoundingBox</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="4a797b0d-56d3-47cd-84ad-9009a52a95da"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-geographic-boundingbox" id="3a31614c-ea67-42c0-ae0a-f530bf3dffcf"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer'};
layers.each{ layer ->
	def inheritedProperty = [];
	def layerParent = layer.parent();
	while(layerParent.name() == 'Layer'){
		if(layerParent.EX_GeographicBoundingBox.size() == 1){
			inheritedProperty &lt;&lt; layerParent.EX_GeographicBoundingBox;
		}
		else if(layerParent.EX_GeographicBoundingBox.size() > 1){
			String[] assertParams = ['element', 'Layer/EX_GeographicBoundingBox'];
			throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
		}
		layerParent = layerParent.parent();
	}
	if(layer.EX_GeographicBoundingBox.size() != 1 &amp;&amp; (inheritedProperty.size() == 0)){
		String[] assertParams = ['element', 'Layer/EX_GeographicBoundingBox'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
	}
};</script></con:config></con:testStep><con:testStep type="httprequest" name="manual-check" id="945130cc-ea59-47b2-97e0-e0aae29d4e3b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e647d915-e5d7-4086-a2dd-319943a7138c" name="manual-check" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="5f58da87-03f2-481a-ac10-b7a0ad5402a9" name="Script Assertion"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists(
  '//zzzz',
  'TR.manual.testManual19'
);</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7c8dc932-8550-4120-8649-2c0d349c9db6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at20-getcapabilities-date-type" searchProperties="true"><con:description><![CDATA[<p>Test that one of the following dates (date of publication, date of last revision or date of creation) is provided.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at20-getcapabilities-date-type" target="_blank">Date type</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="eee91f0c-c780-4313-9d16-581bf306364f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-date-extended" id="d86bd9a3-b126-453e-8b91-416c2a6d5db5"><con:settings/><con:config><script><![CDATA[import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def temporalReferences = capabilities.Capability.ExtendedCapabilities.TemporalReference;
	if(temporalReferences.size() == 0){
		String[] assertParams = ['element', 'ExtendedCapabilities/TemporalReference'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeOneOrMore', assertParams);
	}
	temporalReferences.each{ temporalReference ->
		if(temporalReference.DateOfPublication.size() == 0 && temporalReference.DateOfLastRevision.size() == 0 && temporalReference.DateOfCreation.size() == 0){
			throw new TranslatableAssertionError("TR.atLeastOneDateType");
		}
		if(temporalReference.DateOfPublication.toString().length() == 0 && temporalReference.DateOfLastRevision.toString().length() == 0 && temporalReference.DateOfCreation.toString().length() == 0){
			String[] assertParams = ['element', 'ExtendedCapabilities/TemporalReference/DateOfPublication'];
			throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
		}
		if(temporalReference.DateOfPublication.size() == 1 && !(temporalReference.DateOfPublication ==~ /\d{4}\-\d{2}\-\d{2}/)){
			throw new TranslatableAssertionError("TR.wrongDateFormat");
		}
		if(temporalReference.DateOfLastRevision.size() == 1 && !(temporalReference.DateOfLastRevision ==~ /\d{4}\-\d{2}\-\d{2}/)){
			throw new TranslatableAssertionError("TR.wrongDateFormat");
		}
		if(temporalReference.DateOfCreation.size() == 1 && !(temporalReference.DateOfCreation ==~ /\d{4}\-\d{2}\-\d{2}/)){
			throw new TranslatableAssertionError("TR.wrongDateFormat");
		}
	}
}]]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2e9eace6-90c7-458b-ac9e-3d1b8b50f83a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at21-getcapabilities-temporal-reference" searchProperties="true"><con:description><![CDATA[<p>Test that at least one TemporalReference is given into the ExtendedCapabilities section.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at21-getcapabilities-temporal-reference" target="_blank">Temporal reference</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="5dc70814-c2d8-4eaa-a0b7-853b133bb90b"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-temporal-reference" id="7fcde33b-bfae-4b47-8b27-b2918d1b09eb"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def temporalReferences = capabilities.Capability.ExtendedCapabilities.TemporalReference;
	if(temporalReferences.size() == 0){
		String[] assertParams = ['element', 'ExtendedCapabilities/TemporalReference'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeOneOrMore', assertParams);
	}
	if(temporalReferences.toString().length() == 0){
		String[] assertParams = ['element', 'ExtendedCapabilities/TemporalReference'];
		throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d698d80a-f0d7-4dfa-95f9-8bd050fd37be" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at22-getcapabilities-degree-of-conformity" searchProperties="true"><con:description><![CDATA[<p>Test that is provided a Degree element indicating the degree of conformity with the implementing rules provided in Art. 7.1 (Interoperability of spatial data sets and services) of the INSPIRE Directive [Directive 2007/2/EC].</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at22-getcapabilities-degree-of-conformity" target="_blank">Degree of conformity</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-case" id="7fc7aa8a-6325-4bbf-8aee-1f91176fb9b9"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-degree-conformity" id="676f05e3-eca4-4784-ab05-937b55e15d0f"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def conformity = capabilities.Capability.ExtendedCapabilities.Conformity;
	conformity.each{confor ->
		if(confor.Degree.size() != 1){
			String[] assertParams = ['element', 'ExtendedCapabilities/Conformity/Degree'];
			throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
		}
		if(!(confor.Degree == 'notEvaluated' || confor.Degree == 'conformant' || confor.Degree == 'notConformant')){
			throw new TranslatableAssertionError("TR.wrongConformityDegree");
		}
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9b316d50-9263-4694-9d2b-5ee557cdcd30" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at23-getcapabilities-conformity" searchProperties="true"><con:description><![CDATA[<p>Test that is provided a Conformity element into the Extended Capabilities section.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at23-getcapabilities-conformity" target="_blank">Conformity</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="d11dbc5e-6ba3-49f8-88a9-f50401c47f3e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-conformity" id="6d1f1598-cb9d-4711-bcf9-48d0e2db8753"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def conformity = capabilities.Capability.ExtendedCapabilities.Conformity;
	if(conformity.size() == 0){
		String[] assertParams = ['element', 'ExtendedCapabilities/Conformity'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeOneOrMore', assertParams);
	}
	if(conformity.toString().length() == 0){
		String[] assertParams = ['element', 'ExtendedCapabilities/Conformity'];
		throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3afb9804-1b1e-4cb9-8005-327d6b11f70e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at24-getcapabilities-fees-node" searchProperties="true"><con:description><![CDATA[<p>Test that a Fees node is provided defining the conditions for access and use.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at24-getcapabilities-fees-node" target="_blank">Fees node</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="d0c2bd24-6233-4cba-a0a9-03f1cf1a55bd"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-fees" id="df70627f-7d03-4c3e-b2da-ab0582369f91"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def fees = capabilities.Service.Fees;
if(fees.size() == 0){
	String[] assertParams = ['element', 'Service/Fees'];
	throw new TranslatableAssertionError('TR.multiplicityShallBeOneOrMore', assertParams);
}
if(fees.toString().length() == 0){
	String[] assertParams = ['element', 'Service/Fees'];
	throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7904a83f-adbc-470b-8e26-aecf3522fe95" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at25-getcapabilities-contact-organization" searchProperties="true"><con:description><![CDATA[<p>Test that the responsible party information is mapped to the wms:ContactOrganization element of the wms:ContactPersonPrimary within the wms:ContactInformation element.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at25-getcapabilities-contact-organization" target="_blank">Contact Organization</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="dee035b7-21b6-48df-b28e-6ab8d2f8f9bf"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-contact-organization" id="08f87997-ab0e-4dd6-871a-fd9462a351df"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def contactInformation = capabilities.Service.ContactInformation;
def contactOrganization = capabilities.Service.ContactInformation.ContactPersonPrimary.ContactOrganization;
if(contactInformation.size() != 1){
	String[] assertParams = ['element', 'Service/ContactInformation'];
	throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
}
if(contactOrganization.size() == 0){
	String[] assertParams = ['element', 'Service/ContactInformation/ContactPersonPrimary/ContactOrganization'];
	throw new TranslatableAssertionError('TR.multiplicityShallBeOneOrMore', assertParams);
}
if(contactOrganization.toString().length() == 0){
	String[] assertParams = ['element', 'Service/ContactInformation/ContactPersonPrimary/ContactOrganization'];
	throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a8271ecc-ffaf-40bc-bf6c-55654a5eb5a1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at26-getcapabilities-contact-position" searchProperties="true"><con:description><![CDATA[<p>Test that the responsible party role is mapped to the ContactPosition element within the ContactInformation section.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at26-getcapabilities-contact-position" target="_blank">Contact Position</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="cd6c8a6e-417d-48f7-b6f1-0019227b11dc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-contact-position" id="820872ec-88bb-4107-83fb-8d81b39acac2"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def validValues = ['resourceProvider', 'custodian', 'owner', 'user', 'distributor', 'originator', 'pointOfContact', 'principalInvestigator', 'processor', 'publisher', 'author'];
def contactPosition = capabilities.Service.ContactInformation.ContactPosition;
if(contactPosition.size() == 0){
	String[] assertParams = ['element', 'Service/ContactInformation/ContactPosition'];
	throw new TranslatableAssertionError('TR.multiplicityShallBeOneOrMore', assertParams);
}
contactPosition.each{contact ->
	if(!(contact in validValues)){
		String[] assertParams = ['value', contact.toString()];
		throw new TranslatableAssertionError("TR.wrongContactPosition", assertParams);
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3002d651-bd15-40ab-ad85-ab2a6792c688" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at27-getcapabilities-point-of-contact" searchProperties="true"><con:description><![CDATA[<p>Test that are provided a OrganisationName and Emailaddress elements within the MetadataPointOfcontact section.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at27-getcapabilities-point-of-contact" target="_blank">Point of Contact</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="5f72ae9c-e477-4738-8aaa-027d1762bcbc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-point-of-contact-extended-name-email" id="c6b85696-a5bc-4fa3-867e-ce64360725d4"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def metadataPointOfContact = capabilities.Capability.ExtendedCapabilities.MetadataPointOfContact;
	metadataPointOfContact.each{metadataPOC ->
		log.info(metadataPOC.Role);
		if(metadataPOC.OrganisationName.size() == 0){
			String[] assertParams = ['element', 'ExtendedCapabilities/MetadataPointOfContact/OrganisationName'];
			throw new TranslatableAssertionError('TR.multiplicityShallBeOneOrMore', assertParams);
		}
		if(metadataPOC.OrganisationName.toString().length() == 0){
			String[] assertParams = ['element', 'ExtendedCapabilities/MetadataPointOfContact/OrganisationName'];
			throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
		}
		if(metadataPOC.EmailAddress.size() == 0){
			String[] assertParams = ['element', 'ExtendedCapabilities/MetadataPointOfContact/EmailAddress'];
			throw new TranslatableAssertionError('TR.multiplicityShallBeOneOrMore', assertParams);
		}
		if(metadataPOC.EmailAddress.toString().length() == 0){
			String[] assertParams = ['element', 'ExtendedCapabilities/MetadataPointOfContact/EmailAddress'];
			throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
		}
	}
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2358e779-eb98-4a6c-be08-218c4b43661c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at28-getcapabilities-point-of-contact-in-extendedcapabilities" searchProperties="true"><con:description><![CDATA[<p>Test that a MetadataPointOfContact element is provided within the ExtendedCapabilities section.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at28-getcapabilities-point-of-contact-in-extendedcapabilities" target="_blank">Point of Contact in Extended Capabilities</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="ac35c9c2-7ec3-4493-8265-de8326ea686d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-point-of-contact-extended" id="1383ae93-0e23-4952-b2cf-05ae403e6567"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def metadataPointOfContact = capabilities.Capability.ExtendedCapabilities.MetadataPointOfContact;
	if(metadataPointOfContact.size() == 0){
		String[] assertParams = ['element', 'ExtendedCapabilities/MetadataPointOfContact'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeOneOrMore', assertParams);
	}
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bd8625dd-1305-43c3-86fd-e8ba25a89fc2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at29-getcapabilities-metadata-date" searchProperties="true"><con:description><![CDATA[<p>Test that is provided a MetadataDate element within the ExtendedCapabilities section.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at29-getcapabilities-metadata-date" target="_blank">Metadata Date</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="a5a6ac85-2c4a-4774-ae5d-72c4c1544c55"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-metadata-date" id="ac649b4b-8f33-4379-a815-fdd49e35a988"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def date = capabilities.Capability.ExtendedCapabilities.MetadataDate;
	if(date.size() != 1){
		String[] assertParams = ['element', 'ExtendedCapabilities/MetadataDate'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
	}
	if(!(date ==~ /\d{4}\-\d{2}\-\d{2}/)){
		throw new TranslatableAssertionError("TR.wrongDateFormat");
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4744842a-f74f-48d2-8ae5-5ddc91647dc5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at30-getcapabilities-getcapabilities-operation-metadata" searchProperties="true"><con:description><![CDATA[<p>Test that GetCapabilities operation metadata is mapped to the wms:GetCapabilities element.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at30-getcapabilities-getcapabilities-operation-metadata" target="_blank">GetCapabilities Operation Metadata</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="8b0d052c-43f5-4c93-befd-a672f7e64b6e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-getcapabilities-operation-metadata" id="2e240568-6974-433d-9bf1-c5df114974fe"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def getCapabilitiesOperation = capabilities.Capability.Request.GetCapabilities;
if(getCapabilitiesOperation.size() != 1){
	String[] assertParams = ['element', 'Capability/Request/GetCapabilities'];
	throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6d222a6d-e824-4896-8b4b-8a74285286dd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at31-getcapabilities-get-map-operation-metadata" searchProperties="true"><con:description><![CDATA[<p>Test that the GetMap metadata is mapped to the wms:GetMap element and that either PNG or GIF format (without LZW compression) with transparency is supported.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at31-getcapabilities-get-map-operation-metadata" target="_blank">GetMap Operation Metadata</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="17452c0f-83ff-4a76-bbf1-e41e0b740857"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-getmap-operation-metadata" id="66176275-64b5-4c6d-bdc6-373c268c1689"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def getMapOperation = capabilities.Capability.Request.GetMap;
def atLeastOneFormatValid = false;
if(getMapOperation.size() != 1){
	String[] assertParams = ['element', 'Capability/Request/GetMap'];
	throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
}
getMapOperation.Format.each{format ->
	if(format == 'image/png' || format == 'image/gif'){
		atLeastOneFormatValid = true;
	}
}
if(!atLeastOneFormatValid){
	throw new TranslatableAssertionError("TR.wrongGetMapMetadataImageFormat");
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d899acda-269d-47b1-aa23-93cb43774cfe" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at33-getcapabilities-layer-title" searchProperties="true"><con:description><![CDATA[<p>Test that each layer element contains a Title element.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at33-getcapabilities-layer-title" target="_blank">Layer Title</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="21446a26-b09f-43da-a654-bdc0abc70ced"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-layer-title" id="1f85dfac-83ad-4cb2-9641-d1a95027e855"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer'};
layers.each{layer ->
	def title = layer.Title;
	if(title.size() != 1){
		String[] assertParams = ['element', 'Layer/Title'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
	}
	if(title.toString().length() == 0){
		String[] assertParams = ['element', 'Layer/Title'];
		throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a8fff5a7-3c9c-4d41-b7d3-6a906ea8b4b5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at34-getcapabilities-layer-abstract" searchProperties="true"><con:description><![CDATA[<p>Test that each layer element contains an Abstract element.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at34-getcapabilities-layer-abstract" target="_blank">Layer Abstract</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="1183e22f-9b1c-4ddd-9dbc-2c390bf284f4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-layer-abstract" id="83d17113-c2af-4b8e-b3a9-3420d05edf92"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer'};
layers.each{layer ->
	if(layer.Abstract.size() > 1){
		String[] assertParams = ['element', 'Layer/Abstract'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeZeroOrOne', assertParams);
	}
	if(layer.Abstract.size() == 1){
		if(layer.Abstract.toString().length() == 0){
			String[] assertParams = ['element', 'Layer/Abstract'];
			throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
		}
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="28f1f8be-6d25-4015-a28d-56bdb3594c5e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at35-getcapabilities-layer-keyword" searchProperties="true"><con:description><![CDATA[<p>Test that the additional keywords describing the layer are mapped to the KeywordList element.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at35-getcapabilities-layer-keyword" target="_blank">Layer Keyword</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="955e4b0d-f8a7-4b4b-b399-448db5a6c310"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-layer-keyword" id="442bf4b3-d548-4de7-a5fe-715a94df5066"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer'};
layers.each{layer ->
	if(layer.KeywordList.size() > 1){
		String[] assertParams = ['element', 'Layer/KeywordList'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeZeroOrOne', assertParams);
	}
	if(layer.KeywordList.size() == 1 &amp;&amp; layer.KeywordList.Keyword.size() > 0){
		layer.KeywordList.Keyword.each{keyword ->
			if(keyword.toString().length() == 0){
				String[] assertParams = ['element', 'Layer/KeywordList'];
				throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
			}
		}
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="85f56464-63a2-4b20-a6a8-a8dae26ed22a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at36-getcapabilities-layer-bounding-box" searchProperties="true"><con:description><![CDATA[<p>Test that the boundingbox of each layer is mapped to the BoundingBox element.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at36-getcapabilities-layer-bounding-box" target="_blank">Layer Geographic Bounding Box</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="Test Case Dependency" id="cdcd448c-eb47-46ee-bf5d-34045c92835e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-layer-bounding-box" id="6f5d2bac-463d-46c6-a439-9d70056133c5"><con:settings/><con:config><script><![CDATA[import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def allLayers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer'};
allLayers.each{layer ->
	def current_bbox = [];
	layer.BoundingBox.each{bbox ->
		current_bbox << bbox.@CRS;
	}
	if(current_bbox.size() != current_bbox.unique().size()){
		throw new TranslatableAssertionError("TR.duplicatedBoundingBox");
	}
}

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer' && it.Name.size() > 0};
layers.each{layer ->
	def inheritedPropertyCRS = [];
	def inheritedPropertyBBOX = [];
	def layerParent = layer.parent();
	while(layerParent.name() == 'Layer'){
		layerParent.CRS.each{ crs ->
			inheritedPropertyCRS << crs;
		}
		layerParent.BoundingBox.each{ bbox ->
			inheritedPropertyCRS << bbox.@CRS;
		}
		layerParent = layerParent.parent();
	}
	def current_crs = [];
	layer.CRS.each{ crs ->
		current_crs << crs;
	}
	def current_bbox = [];
	layer.BoundingBox.each{ bbox ->
		current_bbox << bbox.@CRS;
	}
	if(current_bbox.size() == 0 && inheritedPropertyBBOX.size() == 0){
		String[] assertParams = ['element', 'Layer/BoundingBox'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeOneOrMore', assertParams);
	}
	layer.BoundingBox.each{ bbox ->
		if(!(bbox.@CRS in current_crs || bbox.@CRS in inheritedPropertyCRS)){
			throw new TranslatableAssertionError("TR.missingCRSForBoundingBox");
		}
	}
}]]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d90fcecc-dfc6-479f-bcbb-42309d26907d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at38-getcapabilities-layer-authority-url" searchProperties="true"><con:description><![CDATA[<p>Test that AuthorityURL and Identifier elements are used.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at38-getcapabilities-layer-authority-url" target="_blank">Layer Authority URL</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="0df2c556-cf55-4e64-a0dd-bd19de1a4383"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-layer-identifier" id="2272f763-9fed-41f0-8519-ab91facc7c33"><con:settings/><con:config><script><![CDATA[import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def authorityURL = capabilities.Capability.depthFirst().findAll{it.name()=='AuthorityURL' && it.parent().name()=='Layer'};
authorityURL.each{authority ->
	if(authority.@name.toString().length() == 0){
		throw new TranslatableAssertionError("TR.missingAuthorityURLname");
	}
	else if(authority.OnlineResource.@'xlink:href'.toString().length() == 0){
		throw new TranslatableAssertionError("TR.missingAuthorityURLOnlineResource");
	}
}
def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer'};
layers.each{ layer ->
	def inheritedProperty = [];
	if(layer.name() == 'Layer' && layer.AuthorityURL.@name.size() != 0){
		inheritedProperty << layer.AuthorityURL.@name;
	}
	def parentLayer = layer.parent();
	while(parentLayer.name() == 'Layer'){
		if(!(parentLayer.AuthorityURL.@name in inheritedProperty)){
			inheritedProperty << parentLayer.AuthorityURL.@name;
		}
		else{
			throw new TranslatableAssertionError("TR.authorityURLnameAlreadyDefined");
		}
		parentLayer = parentLayer.parent();
	}
	layer.Identifier.each{ identifier ->
		if(!(identifier.@authority in inheritedProperty)){
			throw new TranslatableAssertionError("TR.unavailableAuthorityURL");
		}
	}
}
for (i = 0; i < authorityURL.size(); i++) {
	def identifier = capabilities.Capability.depthFirst().findAll{it.name()=='Identifier' && it.parent().name() == 'Layer' && it.@authority==authorityURL[i].@name};
	if(identifier.size() != identifier.unique().size()){
		throw new TranslatableAssertionError("TR.notUniqueLayerAuthorityIdentifier");
	}
}]]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0cc2fbb2-944c-43c0-9250-0116f6e7d237" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at39-getcapabilities-layer-name" searchProperties="true"><con:description><![CDATA[<p>Test that in each layer, the layer name is mapped into the Name element.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at39-getcapabilities-layer-name" target="_blank">Layer Name</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="42070b1c-23cd-4b35-a5cc-e5231b16f269"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-layer-name" id="738051b8-6344-42be-8315-6fbc69f52575"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites['GetCapabilities_Operation'].testCases['initial-testcase'];
def response = tc.getTestStepByName('http-request').getPropertyValue('Response');

def capabilities = new XmlSlurper(false, true).parseText(response);

def layers = capabilities.Capability.depthFirst().findAll{ it.name() == 'Layer' &amp;&amp; it.Name.size() > 0};

def harmonisedNamesResponse = tc.getTestStepByName('http-request-layer-harmonised-names').getPropertyValue('Response');

def register = new XmlSlurper(false, true).parseText(harmonisedNamesResponse);

def validHarmonisedNames = register.containeditems.depthFirst().findAll{ it.name() == 'layerName' };

def invalidLayers = [];

layers.each{layer->
	if(layer.Name.size() != 1){
		String[] assertParams = ['element', 'Layer/Name'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
	}else if(layer.Name.toString().length() == 0){
		String[] assertParams = ['element', 'Layer/Name'];
		throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
	}else if(!(layer.Name in validHarmonisedNames)){
		invalidLayers.add(id.toString());
	}
}

if(invalidLayers.size() > 0){
	String[] assertParams = ['layerid', invalidLayers.join(', ')];
	throw new TranslatableAssertionError('TR.notHarmonisedValue', assertParams);
}

if(layers.Name.size() != layers.Name.unique().size()){
	throw new TranslatableAssertionError('TR.notUniqueLayerName');
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c8f3aa9a-fdbc-4267-9964-602f471efdd0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at40-getcapabilities-layer-crs" searchProperties="true"><con:description><![CDATA[<p>Test that a supported CRS is provided based on ETRS89 for continental Europe and on ITRS outside continental Europe.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at40-getcapabilities-layer-crs" target="_blank">Layer coordinate Reference system</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="f3014167-b4af-4dd2-b87d-e48a5ae7e30b"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-layer-crs" id="e0c401ac-1f13-4f14-b02b-1def8f2a2703"><con:settings/><con:config><script><![CDATA[import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer' && it.Name.size() == 1};
layers.each{layer ->
	def inheritedProperty = [];
	def layerParent = layer.parent();
	while(layerParent.name() == 'Layer'){
		if(layerParent.CRS.size() != 0){
			layerParent.CRS.each{ crs ->
				inheritedProperty << crs;
			}
		}
		layerParent = layerParent.parent();
	}
	if(layer.CRS.size() == 0 && inheritedProperty.size() == 0){
		String[] assertParams = ['element', 'Layer/CRS'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeOneOrMore', assertParams);
	}
}]]></script></con:config></con:testStep><con:testStep type="httprequest" name="manual-check" id="ef503a5a-d157-4665-ae24-d27ceb0c4a72"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a51d8521-e689-4750-a955-240c1b8e8267" name="manual-check" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="14afe9ee-dde2-4e44-8171-466bc4214d51" name="manual-check-crs"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists(
  '//zzzz',
  'TR.manual.testManual40'
);</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2033e6aa-eb4a-49a1-b0f8-4c02c2876056" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at42-getcapabilities-layer-default-style" searchProperties="true"><con:description><![CDATA[<p>Test that a style is provided with the name of the default style defined in the INSPIRE Data Specification for the theme of the layer.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at42-getcapabilities-layer-default-style" target="_blank">Layer Default Style</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="c938a011-deeb-4570-ba02-98a9f50d7779"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-layer-default-style" id="2ce82354-2773-4dc5-9f74-fff3263336d6"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def layersWithDefaultStyles = ['AD.Address': ['AD.Address.Default'], 
'AU.AdministrativeUnit': ['AU.AdministrativeUnit.Default'], 
'AU.AdministrativeBoundary': ['AU.AdministrativeBoundary.Default'], 
'AU.Condominium': ['AU.Condominium.Default'], 
'AU.Baseline': ['AU.Baseline.Default'], 
'AU.MaritimeBoundary': ['AU.MaritimeBoundary.Default'], 
'AU.ContiguousZone': ['AU.ContiguousZone.Default'], 
'AU.ContinentalShelf': ['AU.ContinentalShelf.Default'], 
'AU.ExclusiveEconomicZone': ['AU.ExclusiveEconomicZone.Default'], 
'AU.InternalWaters': ['AU.InternalWaters.Default'], 
'AU.TerritorialSea': ['AU.TerritorialSea.Default'], 
'CP.CadastralParcel': ['CP.CadastralParcel.Default'], 
'CP.CadastralZoning': ['CP.CadastralZoning.Default'], 
'CP.CadastralBoundary': ['CP.CadastralBoundary.Default'], 
'GN.GeographicalNames': ['GN.GeographicalNames.Default'], 
'HY.PhysicalWaters.Waterbodies': ['HY.PhysicalWaters.Waterbodies.Default'], 
'HY.PhysicalWaters.LandWaterBoundary': ['HY.PhysicalWaters.LandWaterBoundary.Default'], 
'HY.PhysicalWaters.Catchments': ['HY.PhysicalWaters.Catchments.Default'], 
'HY.Network': ['HY.Network.Default'], 
'HY.PhysicalWaters.HydroPointOfInterest': ['HY.PhysicalWaters.HydroPointOfInterest.Default'], 
'HY.PhysicalWaters.ManMadeObject': ['HY.PhysicalWaters.ManMadeObject.Default'], 
'HY.PhysicalWaters.Wetland': ['HY.PhysicalWaters.Wetland.Default'], 
'HY.PhysicalWaters.Shore': ['HY.PhysicalWaters.Shore.Default'], 
'PS.ProtectedSite': ['PS.ProtectedSite.Default'], 
'TN.CommonTransportElements.TransportNode': ['TN.CommonTransportElements.TransportNode.Default'], 
'TN.CommonTransportElements.TransportLink': ['TN.CommonTransportElements.TransportLink.Default'], 
'TN.CommonTransportElements.TransportArea': ['TN.CommonTransportElements.TransportArea.Default'], 
'TN.RoadTransportNetwork.RoadLink': ['TN.RoadTransportNetwork.RoadLink.Default'], 
'TN.RoadTransportNetwork.RoadServiceArea': ['TN.RoadTransportNetwork.RoadServiceArea.Default'], 
'TN.RoadTransportNetwork.RoadArea': ['TN.RoadTransportNetwork.RoadArea.Default'], 
'TN.RoadTransportNetwork.VehicleTrafficArea': ['TN.RoadTransportNetwork.VehicleTrafficArea.Default'], 
'TN.RailTransportNetwork.RailwayLink': ['TN.RailTransportNetwork.RailwayLink.Default'], 
'TN.RailTransportNetwork.RailwayStationArea': ['TN.RailTransportNetwork.RailwayStationArea.Default'], 
'TN.RailTransportNetwork.RailwayYardArea': ['TN.RailTransportNetwork.RailwayYardArea.Default'], 
'TN.RailTransportNetwork.RailwayArea': ['TN.RailTransportNetwork.RailwayArea.Default'], 
'TN.WaterTransportNetwork.WaterwayLink': ['TN.WaterTransportNetwork.WaterwayLink.Default'], 
'TN.WaterTransportNetwork.FairwayArea': ['TN.WaterTransportNetwork.FairwayArea.Default'], 
'TN.WaterTransportNetwork.PortArea': ['TN.WaterTransportNetwork.PortArea.Default'], 
'TN.AirTransportNetwork.AirLink': ['TN.AirTransportNetwork.AirLink.Default'], 
'TN.AirTransportNetwork.AerodromeArea': ['TN.AirTransportNetwork.AerodromeArea.Default'], 
'TN.AirTransportNetwork.RunwayArea': ['TN.AirTransportNetwork.RunwayArea.Default'], 
'TN.AirTransportNetwork.AirSpaceArea': ['TN.AirTransportNetwork.AirSpaceArea.Default'], 
'TN.AirTransportNetwork.ApronArea': ['TN.AirTransportNetwork.ApronArea.Default'], 
'TN.AirTransportNetwork.TaxiwayArea': ['TN.AirTransportNetwork.TaxiwayArea.Default'], 
'TN.CableTransportNetwork.CablewayLink': ['TN.CableTransportNetwork.CablewayLink.Default'], 
'EL.BreakLine': ['EL.BreakLine.Default'], 
'EL.ContourLine': ['EL.ContourLine.Default'], 
'EL.IsolatedArea': ['EL.IsolatedArea.Default'], 
'EL.SpotElevation': ['EL.SpotElevation.Default'], 
'EL.VoidArea': ['EL.VoidArea.Default'], 
'EL.GridCoverage': ['EL.GridCoverage.Default'], 
'EL.TIN': ['EL.TIN.Default'], 
'LC.LandCoverPoints': ['LC.LandCoverPoints.Default'], 
'LC.LandCoverSurfaces': ['LC.LandCoverSurfaces.Default'], 
'LC.LandCoverRaster': ['LC.LandCoverRaster.Default'], 
'OI. OrthoimageCoverage': ['OI. OrthoimageCoverage.Default'], 
'OI.MosaicElement': ['OI.MosaicElement.Default'], 
'AF.AgriculturalHolding': ['AF.AgriculturalHolding'], 
'AF.AquacultureHolding': ['AF.AquacultureHolding'], 
'AF.Site': ['AF.Site'], 
'AF.AbstractInstallation': ['AF.AbstractInstallation'], 
'AF.Plot': ['AF.Plot'], 
'AF.AgriBuilding': ['AF.AgriBuilding'], 
'AM.AirQualityManagementZone': ['AM.AirQualityManagementZone.Default'], 
'AM.AnimalHealthRestrictionZone': ['AM.AnimalHealthRestrictionZone.Default'], 
'AM.AreaForDisposalOfWaste': ['AM.AreaForDisposalOfWaste.Default'], 
'AM.BathingWaters': ['AM.BathingWaters.Default'], 
'AM.CoastalZoneManagementArea': ['AM.CoastalZoneManagementArea.Default'], 
'AM.DesignatedWaters': ['AM.DesignatedWaters.Default'], 
'AM.DrinkingWaterProtectionArea': ['AM.DrinkingWaterProtectionArea.Default'], 
'AM.FloodUnitOfManagement': ['AM.FloodUnitOfManagement.Default'], 
'AM.ForestManagementArea': ['AM.ForestManagementArea.Default'], 
'AM.MarineRegion': ['AM.MarineRegion.Default'], 
'AM.NitrateVulnerableZone': ['AM.NitrateVulnerableZone.Default'], 
'AM.NoiseRestrictionZone': ['AM.NoiseRestrictionZone.Default'], 
'AM.PlantHealthProtectionZone': ['AM.PlantHealthProtectionZone.Default'], 
'AM.ProspectingAndMiningPermitArea': ['AM.ProspectingAndMiningPermitArea.Default'], 
'AM.RegulatedFairwayAtSeaOrLargeInlandWater': ['AM.RegulatedFairwayAtSeaOrLargeInlandWater.Default'], 
'AM.RestrictedZonesAroundContaminatedSites': ['AM.RestrictedZonesAroundContaminatedSites.Default'], 
'AM.RiverBasinDistrict': ['AM.RiverBasinDistrict.Default'], 
'AM.SensitiveArea': ['AM.SensitiveArea.Default'], 
'AM.WaterBodyForWFD': ['AM.WaterBodyForWFD'], 
'BR.Bio-geographicalRegions': ['BR.Bio-geographicalRegions.Default'], 
'BU.Building': ['BU.Building.default'], 
'ER.FossilFuelResource': ['ER.FossilFuelResource.Default'], 
'ER.RenewableAndWasteResource': ['ER.RenewableAndWasteResource.Default'], 
'EF.EnvironmentalMonitoringFacilities': ['EF.EnvironmentalMonitoringFacilities.Default'], 
'EF.EnvironmentalMonitoringNetwork': ['EF.EnvironmentalMonitoringNetwork.Default'], 
'EF.EnvironmentalMonitoringProgramme': ['EF.EnvironmentalMonitoringProgramme.Default'], 
'HB.Habitat': ['HB.Habitat.Default'], 
'HB.HabitatDistribution': ['HB.HabitatDistribution.Default'], 
'HH.HealthStatisticalData': ['HH.HealthStatisticalData.Default'], 
'HH.Event': ['HH.Event.Default'], 
'LandUse.ExistingLandUse': ['LandUse.ExistingLandUse.Default'], 
'LandUse.SpatialPlan': ['LandUse.SpatialPlan.Default'], 
'LandUse.ZoningElement': ['LandUse.ZoningElement.Default'], 
'LandUse.SupplementaryRegulation': ['LandUse.SupplementaryRegulation.Default'], 
'PF.ProductionSite': ['PF.ProductionSite'], 
'PF.ProductionFacility': ['PF.ProductionFacility'], 
'PF.ProductionInstallation': ['PF.ProductionInstallation'], 
'PF.ProductionInstallationPart': ['PF.ProductionInstallationPart'], 
'PF.ProductionPlot': ['PF.ProductionPlot'], 
'PF.ProductionBuilding': ['PF.ProductionBuilding'], 
'SO.SoilBody': ['SO.SoilBody.Default'], 
'SO.SoilObservedProfile': ['SO.SoilObservedProfile.Default'], 
'SO.SoilSite': ['SO.SoilSite.Default'], 
'SD.SpeciesDistribution': ['SD.SpeciesDistribution.Default'], 
'SU.VectorStatisticalUnits': ['SU.VectorStatisticalUnits'], 
'SU.StatisticalGridCell': ['SU.StatisticalGridCell'], 
'US.EnvironmentalManagementInstallation': ['US.EnvironmentalManagementInstallation.Default']];

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer' &amp;&amp; it.Name.size() == 1};
layers.each{layer ->
	if(layersWithDefaultStyles.containsKey(layer.Name.toString())){
		def inheritedPropertyStyle = [];
		def layerParent = layer.parent();
		while(layerParent.name() == 'Layer'){
			layerParent.Style.each{ style ->
				inheritedPropertyStyle &lt;&lt; style.Name.toString();
			}
			layerParent = layerParent.parent();
		}
		def providedDefaultStyle = false;
		layer.Style.each{style ->
			if(style.Name.toString() in layersWithDefaultStyles[layer.Name.toString()]){
				providedDefaultStyle = true;
			}
		}
		for(i = 0; i &lt; inheritedPropertyStyle.size(); i++){
			if(inheritedPropertyStyle[i] in layersWithDefaultStyles[layer.Name.toString()]){
				providedDefaultStyle = true;
			}
		}
		if(!providedDefaultStyle){
			throw new TranslatableAssertionError("TR.missingDefaultStyle");
		}
	}
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="40227c05-fad8-4dfb-a5e4-3e3410cb2fcc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at43-getcapabilities-layer-simple-style" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="manual-check" id="bd6bc11b-1aea-4a33-b1d4-d86946070af6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="1839db2b-59fe-4377-ab48-1feb198cd23a" name="manual-check" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="c1bfd76e-b694-44a1-9c40-8522eaaa6725" name="manual-check-layer-simple-style"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists(
  '//zzzz',
  'TR.manual.testManual43'
);</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="584d8bad-c7e7-4ae5-89db-629b548031fc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at44-getcapabilities-layer-use-default-style" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="manual-check" id="e53c33b0-9fb5-4c4d-b628-fdfbe61076cc"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="9fdba697-b486-451b-aaad-bab3834fb0ef" name="manual-check" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="83e3133d-519e-4e64-a387-24960e4233fb" name="manual-check-layer-use-default-style"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists(
  '//zzzz',
  'TR.manual.testManual44'
);</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0fed2f19-95ed-4c54-bdb2-b0d3de6ed665" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at46-getcapabilities-layer-style-title-and-name" searchProperties="true"><con:description><![CDATA[<p>Test that each style has a human-readable name mapped to Title element and a unique identifier mapped to Name element.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at46-getcapabilities-layer-style-title-and-name" target="_blank">Layer Style Title and Name</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="ae704ff4-ab80-42c7-81b1-79fa76747c4b"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-layer-style-name-title" id="32901637-e6ba-43f9-bb04-4d3142b0bdba"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer'};
def validCrsLayers = true;
layers.each{layer ->
	def styleNames = [];
	layer.Style.each{layerStyle ->
		if(layerStyle.Name.size() == 1){
			styleNames &lt;&lt; layerStyle.Name;
		}
		if(layerStyle.Title.size() != 1){
			String[] assertParams = ['element', 'Layer/Style/Title'];
			throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
		}
		if(layerStyle.Title.toString().length() == 0){
			String[] assertParams = ['element', 'Layer/Style/Title'];
			throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
		}
		if(layerStyle.Name.size() != 1){
			String[] assertParams = ['element', 'Layer/Style/Name'];
			throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
		}
		if(layerStyle.Name.toString().length() == 0){
			String[] assertParams = ['element', 'Layer/Style/Name'];
			throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
		}
	}
	if(layer.Style.Name.size() != styleNames.unique().size()){
		throw new TranslatableAssertionError("TR.notUniqueLayerStyleName");
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d36ff879-5331-4f43-a6fa-143116ce8e8e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at47-getcapabilities-layer-style-legend-url" searchProperties="true"><con:description><![CDATA[<p>Test that a legend is provided into LegendURL element for each style and supported language defined in the View Service.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at47-getcapabilities-layer-style-legend-url" target="_blank">Layer Style Legend URL</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="3ac0a5cb-8f23-4be6-8a5a-b3cfd6a24dbd"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="httprequest" name="http-getcapabilities-specific-language" id="6d18b580-b855-4036-bfb6-4e63e99b0782" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="9a5477eb-346f-4a6c-a73c-a0c801ede12a" name="http-getcapabilities-specific-language" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="14d05ff6-1542-474f-b3c3-25fef0c0a161" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="0ef49e6a-348c-4512-8e10-4fffdff0a4e8" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>version</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style><con:default>${#Project#version}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>language</con:name><con:value>${#Project#language}</con:value><con:style>QUERY</con:style><con:default>${#Project#language}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-getlegend" id="2438ff01-143d-43dd-85ed-6541399327ba" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="324d0c80-05d8-4e8d-a3ed-7cfa1a999be3" name="http-getlegend" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:endpoint>${#TestCase#legendEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="abe25bd4-b6e5-40ab-bbb7-8e168b0ecc30" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="7ad6eaa8-24d4-4554-a688-96bba3b91d11" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="check-legend-by-layer-and-language" id="5e34e3d0-61d2-4914-9c34-3a92328fae58"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

testRunner.testCase.setPropertyValue('language', '');
testRunner.testCase.setPropertyValue('legendEndpoint', '');
def defaultLanguage = capabilities.Capability.ExtendedCapabilities.SupportedLanguages.DefaultLanguage.Language.toString();
def supportedLanguages = [];
supportedLanguages &lt;&lt; capabilities.Capability.ExtendedCapabilities.SupportedLanguages.DefaultLanguage.Language;
for (x in capabilities.Capability.ExtendedCapabilities.SupportedLanguages.SupportedLanguage){
	supportedLanguages &lt;&lt; x.Language;
}

def tsGetCapabilities = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["at47-getcapabilities-layer-style-legend-url"].getTestStepByName('http-getcapabilities-specific-language');
def tsGetLegend = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["at47-getcapabilities-layer-style-legend-url"].getTestStepByName('http-getlegend');

for (x in supportedLanguages){
	testRunner.testCase.setPropertyValue('language', x.toString());
	tsGetCapabilities.setDisabled(false);
	tsGetCapabilities.run(testRunner, context);
	capabilitiesLanguaged = new XmlSlurper(false, true).parseText(tsGetCapabilities.getPropertyValue("Response"));

	def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer'};
	layers.each{layer ->
		def styles = layer.Style;
		styles.each{style ->
			if(style.LegendURL.size() == 1){
				if(style.LegendURL.OnlineResource.size() != 1){
					String[] assertParams = ['element', 'Layer/Style/LegendURL/OnlineResource'];
					throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
				}
				if(style.LegendURL.OnlineResource.@'xlink:href'.toString().length() != 0){
					testRunner.testCase.setPropertyValue('legendEndpoint', style.LegendURL.OnlineResource.@'xlink:href'.toString());
					tsGetLegend.setDisabled(false);
					tsGetLegend.run(testRunner, context);
					if(tsGetLegend.testRequest.response.responseHeaders.get('Content-Type')[0] != style.LegendURL.Format.toString()){
						throw new TranslatableAssertionError("TR.invalidLegendFormat");
					}
				}
				else{
					String[] assertParams = ['element', 'Layer/Style/LegendURL/OnlineResource/@xlink:href'];
					throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
				}
			}
			else if(style.LegendURL.size() != 0){
				String[] assertParams = ['element', 'Layer/Style/LegendURL'];
				throw new TranslatableAssertionError('TR.multiplicityShallBeZeroOrOne', assertParams);
			}
		}
	}
}
tsGetCapabilities.setDisabled(true);
tsGetLegend.setDisabled(true);</script></con:config></con:testStep><con:testStep type="httprequest" name="manual-check" id="1132a14e-e3d2-40b9-9953-2c30a1f4095e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2454ea7a-8132-4e91-920e-acb598f4b8a9" name="manual-check" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="cfae54ef-0732-49b4-9f55-84a8bba780e2" name="manual-check-layer-style-legend-url"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists(
  '//zzzz',
  'TR.manual.testManual47'
);</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties><con:property><con:name>language</con:name><con:value>eng</con:value></con:property><con:property><con:name>legendEndpoint</con:name><con:value>http://www.ign.es/wms-inspire/unidades-administrativas/leyendas/AU.AdministrativeUnit.Default.png</con:value></con:property></con:properties></con:testCase><con:testCase id="dd37436b-2be4-47b8-b8f8-5086b366b7a8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at48-getcapabilities-layer-dimension-pairs" searchProperties="true"><con:description><![CDATA[<p>Test that is provided a Dimension element to declare one or more dimensional parameters.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at48-getcapabilities-layer-dimension-pairs" target="_blank">Layer Dimension Pairs</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="7e5fe037-7253-4a00-863b-626f13612ecb"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-layer-dimension" id="00ae0e79-072d-4187-89a2-6319a8394151"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer'};
layers.each{layer ->
	layer.Dimension.each{dimension ->
		if(dimension.@name.size() == 0 || dimension.@name.toString().length() == 0){
			String[] assertParams = ['element', 'Layer/Dimension/@name'];
			throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
		}
		if(dimension.@units.size() == 0 || dimension.@units.toString().length() == 0){
			String[] assertParams = ['element', 'Layer/Dimension/@units'];
			throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
		}
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="7a16f8b2-5248-4ba5-a783-bd0c5534f153" name="GetMap_Operation"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="6df93a6b-172c-4125-8658-f0e5d0a4bdf2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getmap-default-parameters" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="5eae2d19-2ade-4c27-8254-2293e456f4f9"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getmap-default-parameters" id="d52190a7-167e-41f5-99b6-9db7b8ef56e4"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="76164cd6-dc7b-4ade-ad26-c4cbb01a3874" name="http-request-getmap-default-parameters" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="5114db8b-3ea8-42a3-9107-e3735194f994" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="OwsExceptionReportAssertion" id="2fca2634-8e01-452d-a1cc-201931723c78" name="Fail if service returns OWS Exception Report"/><con:assertion type="GroovyScriptAssertion" id="797a26b6-e559-473a-a7e0-0928b6261a3f" name="check-content-type"><con:configuration><scriptText>/*
def httpResponseHeaders = context.testCase.testSteps["http-request-getmap-default-parameters"].testRequest.response.responseHeaders;
def format_requested = context.expand( '${#TestSuite#format}' );
def format_response = httpResponseHeaders["Content-Type"][0];
assert (format_requested == format_response);
*/
def format_requested = context.expand( '${#TestSuite#format}' );
assert (messageExchange.getResponseHeaders().get('Content-Type', 'value').contains(format_requested));</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="51e0114d-be2f-496c-9e71-f23c9e408f47" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d9d79be8-33b4-434a-b6d6-1cb1f236cb4f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at50-getmap-version-parameter" searchProperties="true"><con:description><![CDATA[<p>Test that the VERSION paramater in GetMap operation is mandatory.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at50-getmap-version-parameter" target="_blank">GetMap Version Parameter</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="aab527da-c41f-4187-9fbf-ec9fd9edbacc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getmap-no-version" id="9f6fcf6d-85d6-46b7-aff5-7ff1a14a6864"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e18d166c-c1cf-4c64-b459-3a59cb107da2" name="http-request-getmap-no-version" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="92d3bba1-735c-4b4f-a0de-351d3982d1a9" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="f451f093-6daf-484b-8de7-dd85dff8507a" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
String[] assertParams = ['parameter', 'VERSION'];
if(messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml')){
	def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
	if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
		throw new TranslatableAssertionError("TR.getMapNoMandatoryParameterNotFail", assertParams);
	}
}
else{
	throw new TranslatableAssertionError('TR.getMapNoMandatoryParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="0cc95f7f-b530-41a3-b88a-980e062b1ae7" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style><con:default>GetMap</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#layers}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#styles}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#crs}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#bbox}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#width}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#height}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#format}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getmap-wrong-version" id="045320ad-78d4-41f1-9552-6684b7bf6b17"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="52210c25-df95-4db9-9ac1-cfe3c0830345" name="http-request-getmap-wrong-version" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="d3294131-d396-48f7-bafd-3b3cfe045025" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="56fffaf2-4ef9-4206-968b-8f5427f5f076" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
String[] assertParams = ['parameter', 'VERSION'];
if(messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml')){
	def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
	if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
		throw new TranslatableAssertionError("TR.getMapWrongParameterNotFail", assertParams);
	}
}
else{
	throw new TranslatableAssertionError('TR.getMapWrongParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="dffe106e-4987-4fd3-8502-564b190d4bbd" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style><con:default>GetMap</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style><con:default>zzzz</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#layers}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#styles}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#crs}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#bbox}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#width}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#height}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#format}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="10191fe0-8fa7-4051-90c8-a2dd412b18d9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at51-getmap-request-parameter" searchProperties="true"><con:description><![CDATA[<p>Test that the REQUEST paramater in GetMap operation is mandatory.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at51-getmap-request-parameter" target="_blank">GetMap Request Parameter</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="7c914d16-7718-4201-ae0d-824656d3e337"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="httprequest" name="http-request-no-request" id="04864e6c-e502-4c8a-b404-15944371362f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="46594188-6b5a-4fe0-98bc-a39b070f97b8" name="http-request-no-request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="bef7366d-1410-42c4-b694-cc0a0d5aaa1e" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4fb8e499-383b-4255-8add-ff758fa9c1f0" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
String[] assertParams = ['parameter', 'REQUEST'];
if(messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml')){
	def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
	if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
		throw new TranslatableAssertionError("TR.getMapNoMandatoryParameterNotFail", assertParams);
	}
}
else{
	throw new TranslatableAssertionError('TR.getMapNoMandatoryParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="d063c405-8be2-4ca5-b516-b81ba9546ca2" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style><con:default>${#Project#version}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#layers}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#styles}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#crs}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#bbox}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#width}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#height}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#format}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-wrong-request" id="993b6b40-ce7e-4f19-b794-0cb2c5bb8d4d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="6776f2a0-c239-4d70-a99e-02340deaa1a5" name="http-request-wrong-request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="212f37b8-b9f6-4283-ae05-99f0fe6fa9a0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="2e5a9e8b-8fee-4649-ae38-24bdf7b26aad" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
String[] assertParams = ['parameter', 'REQUEST'];
if(messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml')){
	def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
	if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
		throw new TranslatableAssertionError("TR.getMapWrongParameterNotFail", assertParams);
	}
}
else{
	throw new TranslatableAssertionError('TR.getMapWrongParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="061667a3-bc39-41fb-b43c-e8980d46ed76" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style><con:default>zzzz</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style><con:default>${#Project#version}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#layers}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#styles}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#crs}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#bbox}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#width}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#height}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#format}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="da7852c7-5d7f-4c22-8169-ac336fcb82eb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at52-getmap-layers-parameter" searchProperties="true"><con:description><![CDATA[<p>Test that the LAYERS paramater in GetMap operation is mandatory.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at52-getmap-layers-parameter" target="_blank">GetMap Layers Parameter</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="c158a83e-c939-4cfb-a8f2-44ba799c3374"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="httprequest" name="http-request-no-layers" id="49e44da8-6ca4-4a7c-8334-a103e16edc1d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3d352e5b-387d-4b6d-ac69-81a264671739" name="http-request-no-layers" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="d87fa7c5-9613-4d7c-8a9a-fbec45b0da6e" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="dbf871a2-a488-43fd-ac9e-713b222180f0" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
String[] assertParams = ['parameter', 'LAYERS'];
if(messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml')){
	def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
	if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
		throw new TranslatableAssertionError("TR.getMapNoMandatoryParameterNotFail", assertParams);
	}
}
else{
	throw new TranslatableAssertionError('TR.getMapNoMandatoryParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="221017ac-f055-4ed8-a790-e8efea382fd5" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style><con:default>GetMap</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style><con:default>${#Project#version}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#styles}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#crs}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#bbox}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#width}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#height}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#format}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-wrong-layers" id="92e057a4-5363-4abd-b528-0bca67958533"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="194704a7-2fc6-47b3-bb6d-aad4018f9269" name="http-request-wrong-layers" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="05645f96-6c7a-4407-9bce-1046a7633c19" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="2e5399d1-2aa4-4a2d-9f29-c2381249acb6" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
String[] assertParams = ['parameter', 'LAYERS'];
if(messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml')){
	def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
	if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
		throw new TranslatableAssertionError("TR.getMapWrongParameterNotFail", assertParams);
	}
}
else{
	throw new TranslatableAssertionError('TR.getMapWrongParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="1e6ab412-7cfe-4145-8846-dfadef384a86" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style><con:default>GetMap</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style><con:default>${#Project#version}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style><con:default>zzzz</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#styles}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#crs}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#bbox}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#width}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#height}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#format}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9134dd28-5187-4a6f-bd01-3f2b9be68cc3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at53-getmap-styles-parameter" searchProperties="true"><con:description><![CDATA[<p>Test that the STYLES paramater in GetMap operation is mandatory.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at53-getmap-styles-parameter" target="_blank">GetMap Styles Parameter</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="6aecabbf-80ee-4119-9ae8-469bad430844"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="httprequest" name="http-request-null-style" id="c22c2339-cc7b-4a65-b75b-f39c7085b86d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="55dfcbd5-7f56-4dd0-9dd9-d7b429f7c47a" name="http-request-null-style" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="300b01eb-96c9-49fd-98a9-6a64465faa2f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="OwsExceptionReportAssertion" id="b81f6ca5-3ae1-421a-ad9a-7745ebfc9085" name="Fail if service returns OWS Exception Report"/><con:assertion type="Response SLA Assertion" id="f04a7d70-23c1-4a62-bd8b-84ef0b047ecb" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style><con:default>GetMap</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style><con:default>${#Project#version}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#layers}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>STYLES</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#crs}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#bbox}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#width}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#height}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#format}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-no-style" id="f0a14022-6840-4b8c-83b0-2d37223f9b40"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="9bf58619-fa30-413d-ab6a-8d9fb416b33d" name="http-request-no-style" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="22533b75-6e68-4702-ac3d-c4b686b1e5f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="040767bb-25db-4c92-97bd-d4d301171e81" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
String[] assertParams = ['parameter', 'STYLES'];
if(messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml')){
	def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
	if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
		throw new TranslatableAssertionError("TR.getMapNoMandatoryParameterNotFail", assertParams);
	}
}
else{
	throw new TranslatableAssertionError('TR.getMapNoMandatoryParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="570dc763-ce9c-44d1-b6a5-4c9208b51483" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style><con:default>GetMap</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style><con:default>${#Project#version}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#layers}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#crs}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#bbox}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#width}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#height}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#format}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-wrong-style" id="59e38b4b-839a-4121-acee-fb0bf5a3af9f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="10c73bb9-b881-47e7-a280-b14bd355ebef" name="http-request-wrong-style" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="97697833-3874-4e81-9e71-2511d0ea955d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="6a47e983-8c31-4c16-99f9-5db290d56c06" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
String[] assertParams = ['parameter', 'STYLES'];
if(messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml')){
	def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
	if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
		throw new TranslatableAssertionError("TR.getMapWrongParameterNotFail", assertParams);
	}
}
else{
	throw new TranslatableAssertionError('TR.getMapWrongParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="3253daa8-7840-4aea-b50e-63bcedd7f2ed" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style><con:default>GetMap</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style><con:default>${#Project#version}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#layers}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style><con:default>zzzz</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#crs}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#bbox}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#width}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#height}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#format}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="847adb27-8992-4c66-b3da-e49829a0fb2c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at54-getmap-crs-parameter" searchProperties="true"><con:description><![CDATA[<p>Test that the CRS paramater in GetMap operation is mandatory.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at54-getmap-crs-parameter" target="_blank">GetMap CRS Parameter</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="7238d6c3-9010-4d82-838a-f03271534ab0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getmap-no-crs" id="875cc7d1-9e9c-4744-96dd-a5c172c0e503"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="efdb1292-9e37-4d6d-aabe-4672bf6bc796" name="http-request-getmap-no-crs" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="b89520f4-5520-4871-ab0e-2296639716e8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="beef20d2-14ff-4a7b-b3de-82e32e0194b4" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
String[] assertParams = ['parameter', 'CRS'];
if(messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml')){
	def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
	if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
		throw new TranslatableAssertionError("TR.getMapNoMandatoryParameterNotFail", assertParams);
	}
}
else{
	throw new TranslatableAssertionError('TR.getMapNoMandatoryParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="ba5972a7-8094-4f64-b1bb-9c445ff00968" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style><con:default>GetMap</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getmap-wrong-crs" id="8e4e29a6-0265-4cb1-9941-142e1735ed04"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="876f9ebc-1ae2-4a39-95a8-e3924951eeb6" name="http-request-getmap-wrong-crs" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="e11fa062-4c72-44cc-9bf5-fb85f9a180d9" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="edca5dfd-f4e1-4fc8-9824-a64dca3bf2e0" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
String[] assertParams = ['parameter', 'CRS'];
if(messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml')){
	def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
	if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
		throw new TranslatableAssertionError("TR.getMapWrongParameterNotFail", assertParams);
	}
}
else{
	throw new TranslatableAssertionError('TR.getMapWrongParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="7bbbf0b9-2bf3-4ed5-baf7-92faa0bf4a4f" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="308ac5bd-f1f4-4589-bfb1-f8e06a130a80" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at55-getmap-bbox-parameter" searchProperties="true"><con:description><![CDATA[<p>Test that the BBOX paramater in GetMap operation is mandatory.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at55-getmap-bbox-parameter" target="_blank">GetMap BBOX Parameter</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="07757b2c-44f2-4c45-a968-87b883755a30"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getmap-no-bbox" id="53e9fa33-1802-4c9f-a562-ae686b2f0669"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="abddbf3a-b290-4fb7-8a2a-a5b738173e89" name="http-request-getmap-no-bbox" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="90fd693b-bccf-4a80-bfb8-62827aa20339" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="20e5f035-f725-452e-a47b-67c448c8715f" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
String[] assertParams = ['parameter', 'BBOX'];
if(messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml')){
	def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
	if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
		throw new TranslatableAssertionError("TR.getMapNoMandatoryParameterNotFail", assertParams);
	}
}
else{
	throw new TranslatableAssertionError('TR.getMapNoMandatoryParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="fcdff0a0-fca6-41ab-85f1-e5937eb20a9e" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style><con:default>GetMap</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style><con:default>${#Project#version}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#layers}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#styles}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#crs}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#width}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#height}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#format}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getmap-wrong-bbox" id="a86c7569-391e-46df-abc0-8bcc2537d809"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="699cac45-008e-4eae-b282-077aea23f02e" name="http-request-getmap-wrong-bbox" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="0ddc27ef-f591-4734-a2b4-3a3493148f4f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="71a0fc07-ebd9-4709-8cc7-68274b6eb2de" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
String[] assertParams = ['parameter', 'BBOX'];
if(messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml')){
	def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
	if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
		throw new TranslatableAssertionError("TR.getMapWrongParameterNotFail", assertParams);
	}
}
else{
	throw new TranslatableAssertionError('TR.getMapWrongParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="e4159775-ade4-44e8-80f0-d046933777c8" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style><con:default>GetMap</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style><con:default>${#Project#version}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#layers}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#styles}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#crs}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style><con:default>z,z,z,z</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#width}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#height}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style><con:default>${#TestSuite#format}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d5e706e5-c7fe-4fc3-a7c1-9508fb21113c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at56-getmap-width-height-parameter" searchProperties="true"><con:description><![CDATA[<p>Test that the WIDTH and HEIGHT paramaters in GetMap operation are mandatory.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at56-getmap-width-height-parameter" target="_blank">GetMap Width and Height Parameter</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="e8848159-1c8f-4f6b-8715-00ce4d28e5c7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getmap-no-width-height" id="08b42ea5-c9cf-472f-8ff5-6cf6097a4a36"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="000850c3-2783-4f89-83c3-c3fca76b3816" name="http-request-getmap-no-width-height" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="cc03a56c-6c16-493f-9cdf-6a366b21e258" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b00066eb-18c7-4134-af8d-da9345975503" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
String[] assertParams = ['parameter', 'WIDTH AND HEIGHT'];
if(messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml')){
	def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
	if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
		throw new TranslatableAssertionError("TR.getMapNoMandatoryParameterNotFail", assertParams);
	}
}
else{
	throw new TranslatableAssertionError('TR.getMapNoMandatoryParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="841cafea-3cca-473a-9af7-08b9949c9cd7" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getmap-wrong-width-height" id="c45cb20c-9c88-4a0f-bd6a-e26ac493fa08"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="982f4069-2ce7-4bc5-9428-5fa276e69134" name="http-request-getmap-wrong-width-height" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="280f5deb-526c-4ad4-8aee-3cb624258ec0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="aefcdb9c-d190-4d0b-a9df-2116235dd1f9" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
String[] assertParams = ['parameter', 'WIDTH AND HEIGHT'];
if(messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml')){
	def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
	if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
		throw new TranslatableAssertionError("TR.getMapWrongParameterNotFail", assertParams);
	}
}
else{
	throw new TranslatableAssertionError('TR.getMapWrongParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="969872d8-25c0-4350-8ada-dae4245bf136" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="064cf5a2-7562-485f-816b-9f9877d7b6da" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at57-getmap-format-parameter" searchProperties="true"><con:description><![CDATA[<p>Test that the FORMAT paramater in GetMap operation is mandatory.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at57-getmap-format-parameter" target="_blank">GetMap Format Parameter</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="4bd9c177-52e2-44d7-84e4-88342fc5f4cf"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-supported-format" id="26a3683b-7422-4012-ada5-fd7b9c193e3d"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def format = testRunner.testCase.testSuite.getPropertyValue('format');
if(format.length() == 0){
	throw new TranslatableAssertionError("TR.getMapSupportedFormat");
}</script></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getmap-no-format" id="f87fafd1-c70b-46bb-a47e-1494459f403b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e963e6d8-9d63-4a93-a330-ce1d1583d480" name="http-request-getmap-no-format" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="bcf4ed70-c8b6-453a-8ba2-78b36c0488fe" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3a95704f-af12-463b-b832-ea6fd24a0b9b" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
String[] assertParams = ['parameter', 'FORMAT'];
if(messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml')){
	def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
	if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
		throw new TranslatableAssertionError("TR.getMapNoMandatoryParameterNotFail", assertParams);
	}
}
else{
	throw new TranslatableAssertionError('TR.getMapNoMandatoryParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="f8a843af-84c1-45bb-9498-bb8d4e74bd83" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getmap-wrong-format" id="086acb74-38a8-4a05-a459-e2a27c202430"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="69c4330e-1ce8-4b49-a43c-c9154f454074" name="http-request-getmap-wrong-format" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="931a89fa-d6a5-4cf4-acdc-5182c611d62e" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50df2a3f-e487-414a-91e3-c6beebe4a1b1" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
String[] assertParams = ['parameter', 'FORMAT'];
if(messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml')){
	def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
	if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
		throw new TranslatableAssertionError("TR.getMapWrongParameterNotFail", assertParams);
	}
}
else{
	throw new TranslatableAssertionError('TR.getMapWrongParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="3b3fc5d6-6dff-44a0-86e0-e981aa2dcdaf" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="58f0a89f-2e8b-445e-b071-217d781685d7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at58-getmap-transparent-parameter" searchProperties="true"><con:description><![CDATA[<p>Test that the service accepts the optional parameter TRANSPARENT.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at58-getmap-transparent-parameter" target="_blank">GetMap Transparent Parameter</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="0eb10db1-30d7-4b8d-bf07-02a49fd31584"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getmap-transparent-true" id="f94ffb9c-5e27-4a9f-bb41-eb10ba2d7968"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0d0805eb-6091-4ed2-9c40-82d8afff2fcb" name="http-request-getmap-transparent-true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="de92c21d-a97c-4bcb-90db-174e49838b6d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="OwsExceptionReportAssertion" id="99e7bddc-1c91-4fcd-841b-44bcfa88d616" name="Fail if service returns OWS Exception Report"/><con:assertion type="GroovyScriptAssertion" id="0f443084-c9bb-4f7a-b166-6e5442e27aa4" name="check-content-type"><con:configuration><scriptText>def format_requested = context.expand( '${#TestSuite#format}' );
assert (messageExchange.getResponseHeaders().get('Content-Type', 'value').contains(format_requested));</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="27711021-2cc1-4c4b-bf4d-ee985c844a59" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>TRANSPARENT</con:name><con:value>true</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getmap-transparent-false" id="9cb1ef58-2572-4019-9af9-2db3b65ec027"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="3d7b1841-5e2d-4412-a3e7-795d6e511347" name="http-request-getmap-transparent-false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="b9786075-e99a-4c26-bbe9-805697bfe5bb" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="OwsExceptionReportAssertion" id="d2614d9a-4ba1-4c76-a9c1-e2b73314d382" name="Fail if service returns OWS Exception Report"/><con:assertion type="GroovyScriptAssertion" id="fa2519c2-2103-49ec-b848-d5f48bb76754" name="check-content-type"><con:configuration><scriptText>def format_requested = context.expand( '${#TestSuite#format}' );
assert (messageExchange.getResponseHeaders().get('Content-Type', 'value').contains(format_requested));</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="5c7ec18d-ad6b-4e25-9d25-a32a9e8a0a2c" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style><con:default>GetMap</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>TRANSPARENT</con:name><con:value>false</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getmap-wrong-transparent" id="039aa028-54cb-4bc9-be99-c223983bcc69"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="561f4a88-83c6-446c-a1dc-c3033cc4135b" name="http-request-getmap-wrong-transparent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7d8a55bc-ae58-43ff-9907-2220bae92d2d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="00ed8677-bf7e-492e-8b68-91e9cae1a7d5" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
String[] assertParams = ['parameter', 'TRANSPARENT'];
if(messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml')){
	def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
	if (!(xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1)){
		throw new TranslatableAssertionError("TR.getMapWrongParameterNotFail", assertParams);
	}
}
else{
	throw new TranslatableAssertionError('TR.getMapWrongParameterNotFail', assertParams);
}</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="3c34cf27-d717-4663-b10d-0e64921d60fd" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#layers}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#styles}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#crs}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#bbox}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#width}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#height}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#format}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>TRANSPARENT</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e7de37be-891d-4177-be91-1df04c58b60d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at59-getmap-exceptions" searchProperties="true"><con:description><![CDATA[<p>Test that the service accepts the optional parameter EXCEPTIONS.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at59-getmap-exceptions" target="_blank">GetMap Exceptions</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="8c067766-c6fc-4e0e-a5b3-91a1271c9773"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getmap-exceptions-default" id="1fbcbfe8-0a23-402b-8771-198587a7ee8f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="50e29c34-fd9b-4ebe-8c1a-74e2893c2a38" name="http-request-getmap-exceptions-default" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="86f82b8a-4887-4fad-a931-c0bbc2ff281e" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="bb257502-6c92-4221-929d-c6a3cb82d8f0" name="check-content-type-xml"><con:configuration><scriptText>assert (messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml'));</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="485bd526-d5de-4128-8011-caa561db7fe9" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getmap-exceptions-xml" id="6a79c6c8-5a35-4469-8b28-887f4766db52"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="9010695d-bd20-499f-b256-92fc48a5dfae" name="http-request-getmap-exceptions-xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#getMapEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="aa137122-3328-493b-ad4c-b20814cc81ad" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="2a92e656-ead8-47d7-88fc-c5d9db329c1d" name="check-content-type-xml"><con:configuration><scriptText>assert (messageExchange.getResponseHeaders().get('Content-Type', 'value').contains('text/xml'));</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="5f2f3838-6d8d-4fe9-aabc-f19513dac239" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>VERSION</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>${#TestSuite#wrongValue}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>EXCEPTIONS</con:name><con:value>XML</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>getMapEndpoint</con:name><con:value>http://www.ign.es/wms-inspire/unidades-administrativas?SERVICE=WMS&amp;</con:value></con:property><con:property><con:name>layers</con:name><con:value>AU.AdministrativeBoundary</con:value></con:property><con:property><con:name>styles</con:name><con:value>LimitesAdministrativos</con:value></con:property><con:property><con:name>crs</con:name><con:value>EPSG:25828</con:value></con:property><con:property><con:name>bbox</con:name><con:value>102948.37120930111,2986435.242554414,2508202.7078586714,5070480.910938781</con:value></con:property><con:property><con:name>width</con:name><con:value>500</con:value></con:property><con:property><con:name>height</con:name><con:value>500</con:value></con:property><con:property><con:name>format</con:name><con:value>image/png</con:value></con:property><con:property><con:name>wrongValue</con:name><con:value>zzzz</con:value></con:property></con:properties></con:testSuite><con:testSuite id="c473835f-b004-4eda-b31e-ede4b8ba0d18" name="LinkViewService_Operation"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="5fe2ce14-3b34-4f46-989c-2a3ff0b5e331" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at61-linkviewservice-discover" searchProperties="true"><con:description><![CDATA[<p>Test that cascaded layers provide a valid metadata through a Discovery Service.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at61-linkviewservice-discover" target="_blank">LinkViewService Discover</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="95fd8430-a72f-46de-81f8-200722e4d447"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-cascaded-layers-metadataurl" id="34db9870-dacf-4ea0-8f37-6e09b6dfec55"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer' &amp;&amp; it.@cascaded.size() > 0 &amp;&amp; it.@cascaded.toInteger() > 0};
layers.each{layer ->
	if (layer.MetadataURL.OnlineResource.@'xlink:href'.size() == 0){
		String[] assertParams = ['element', 'Layer/MetadataURL/OnlineResource/@xlink:href'];
		throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
	}
	else if(layer.MetadataURL.OnlineResource.@'xlink:href'.toString().length() == 0){
		String[] assertParams = ['element', 'Layer/MetadataURL/OnlineResource/@xlink:href'];
		throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c1b65eae-7b7d-4604-bbd9-0dd908c35afd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at62-linkviewservice-layer-metadata" searchProperties="true"><con:description><![CDATA[<p>Test that the cascaded layer metadata is included as in the original view service.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at62-linkviewservice-layer-metadata" target="_blank">LinkViewService Layer Metadata</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="14e2cd3a-c465-47e9-b27d-d50d32faaecf"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="httprequest" name="http-request-layer-metadata" id="25732f37-8fb9-4eb4-97a0-7bb22b1408ba" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="bd16d083-6baa-462f-b4e7-7ba9b26fcfc8" name="http-request-layer-metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestCase#metadataEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7954a77c-76ad-4804-a18a-ab333e44310b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="bd1db81e-21de-4208-b28e-a21476958697" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="check-cascaded-layers-metadata" id="9bca320b-ce1b-41d3-b1e5-4cee748e8c29"><con:settings/><con:config><script><![CDATA[import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

tc = testRunner.testCase.testSuite.project.testSuites["LinkViewService_Operation"].testCases["at62-linkviewservice-layer-metadata"];
ts = tc.getTestStepByName('http-request-layer-metadata');
testRunner.testCase.setPropertyValue("metadataEndpoint", '');

def cascadedLayers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer' && it.@cascaded.size() > 0 && it.@cascaded.toInteger() > 0};
if(cascadedLayers.size() != 0){
	cascadedLayers.each{layer ->
		if (layer.MetadataURL.OnlineResource.@'xlink:href'.size() == 0){
			String[] assertParams = ['element', 'Layer/MetadataURL/OnlineResource/@xlink:href'];
			throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
		}
		else if(layer.MetadataURL.OnlineResource.@'xlink:href'.toString().length() == 0){
			String[] assertParams = ['element', 'Layer/MetadataURL/OnlineResource/@xlink:href'];
			throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
		}
		else{
			testRunner.testCase.setPropertyValue("metadataEndpoint", layer.MetadataURL.OnlineResource.@'xlink:href'.toString());
			ts.setDisabled(false);
			ts.run(testRunner, context);
			def metadata = new XmlSlurper(false, true).parseText(ts.getPropertyValue("Response"));
			if(metadata.name() != 'MD_Metadata' && metadata.MD_Metadata.size() == 0){
				throw new TranslatableAssertionError("TR.cascadedLayerMetadata");
			} 
		}
	}
}
ts.setDisabled(true);]]></script></con:config></con:testStep><con:properties><con:property><con:name>metadataEndpoint</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="b0bb631e-8e8d-48d7-befa-88fd4016cd93" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at63-linkviewservice-cascaded-attribute" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="manual-check" id="f2e008a7-50c6-4b9b-8ca7-6b8a309ad263"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="786e4fd0-90b7-4880-954c-cd6b47165243" name="manual-check" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="6123bb08-24c8-49fb-ad04-7a94b4ce6205" name="manual-check-linkviewservice-cascaded-attribute"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists(
  '//zzzz',
  'TR.manual.testManual63'
);</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1a8b5b4d-0958-49e3-b0a1-9779acb9120b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at64-linkviewservice-cascaded-increment" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="manual-check" id="ea71c52d-c040-4ae1-8437-41d56b574293"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d90858db-5f2f-4183-8021-729c642fdb6a" name="manual-check" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="4ecb098c-dd40-4368-b6f2-db781487716d" name="manual-check-cascaded-increment"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists(
  '//zzzz',
  'TR.manual.testManual64'
);</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8556283c-f6d6-4afd-9c74-0ba1eb8c4812" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at65-linkviewservice-transparent-bgcolor" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="manual-check" id="1ca95ea9-d25f-430a-b43a-cbc267ccb17b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="81b8fd11-e251-4a4a-8170-5d52ed0eaa36" name="manual-check" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="a4827cc9-edb0-4a8f-b4bf-ab63de38f1d7" name="manual-check-linkviewservice-transparent-bgcolor"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists(
  '//zzzz',
  'TR.manual.testManual65'
);</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="caa6394e-6d25-4d07-b5aa-8217ad5bbf93" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at67-language-request" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="manual-check" id="b3c724c1-6f0a-4380-a869-553c95796dca"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="ba2c1c82-8b6f-45a3-9996-9250f33619c4" name="manual-check" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" id="ab3f8906-fea5-4821-a124-eba173365601" name="Script Assertion"><con:configuration><scriptText>import de.interactive_instruments.etf.suim.*
Assert a = new Assert(messageExchange, context, log, Assert.INSPIRE_DS_NS);
a.exists(
  '//zzzz',
  'TR.manual.testManual67'
);</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="89d63b05-4fd4-4667-8668-c233180f9103" name="Language_Requirements"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="0bb54e8f-a005-4a67-abcf-20fb1652e6c7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at68-language-parameter" searchProperties="true"><con:description><![CDATA[<p>Test that the service accepts the parameter LANGUAGE to request the capabilities document in an specific language.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at68-language-parameter" target="_blank">Language Parameter</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="88c774f7-5541-4319-90c1-cbf3a826bd97"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getcapabilities-default-language" id="e7452ba2-c026-4e53-a6c4-76a4ce0c2b37" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="20005836-6380-4b14-ad98-ea1f1eb0b2f4" name="http-request-getcapabilities-default-language" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7ab08d62-b488-484d-87c1-e43e122e6c9b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="9205550a-c230-40ee-a9c3-99b22b9e6ea8" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>version</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>language</con:name><con:value>${#TestCase#defaultLanguage}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="check-default-language" id="af1d2278-3bbb-4e0c-a58a-f2b6b51c1b91"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

testRunner.testCase.setPropertyValue('defaultLanguage', '');
def isoLang = ['aar', 'abk', 'ace', 'ach', 'ada', 'ady', 'afa', 'afh', 'afr', 'ain', 'aka', 'akk', 'alb', 'ale', 'alg', 'alt', 'amh', 'ang', 'anp', 'apa', 'ara', 'arc', 'arg', 'arm', 'arn', 'arp', 'art', 'arw', 'asm', 'ast', 'ath', 'aus', 'ava', 'ave', 'awa', 'aym', 'aze', 'bad', 'bai', 'bak', 'bal', 'bam', 'ban', 'baq', 'bas', 'bat', 'bej', 'bel', 'bem', 'ben', 'ber', 'bho', 'bih', 'bik', 'bin', 'bis', 'bla', 'bnt', 'bos', 'bra', 'bre', 'btk', 'bua', 'bug', 'bul', 'bur', 'byn', 'cad', 'cai', 'car', 'cat', 'cau', 'ceb', 'cel', 'cha', 'chb', 'che', 'chg', 'chi', 'chk', 'chm', 'chn', 'cho', 'chp', 'chr', 'chu', 'chv', 'chy', 'cmc', 'cnr', 'cop', 'cor', 'cos', 'cpe', 'cpf', 'cpp', 'cre', 'crh', 'crp', 'csb', 'cus', 'cze', 'dak', 'dan', 'dar', 'day', 'del', 'den', 'dgr', 'din', 'div', 'doi', 'dra', 'dsb', 'dua', 'dum', 'dut', 'dyu', 'dzo', 'efi', 'egy', 'eka', 'elx', 'eng', 'enm', 'epo', 'est', 'ewe', 'ewo', 'fan', 'fao', 'fat', 'fij', 'fil', 'fin', 'fiu', 'fon', 'fre', 'frm', 'fro', 'frr', 'frs', 'fry', 'ful', 'fur', 'gaa', 'gay', 'gba', 'gem', 'geo', 'ger', 'gez', 'gil', 'gla', 'gle', 'glg', 'glv', 'gmh', 'goh', 'gon', 'gor', 'got', 'grb', 'grc', 'gre', 'grn', 'gsw', 'guj', 'gwi', 'hai', 'hat', 'hau', 'haw', 'heb', 'her', 'hil', 'him', 'hin', 'hit', 'hmn', 'hmo', 'hrv', 'hsb', 'hun', 'hup', 'iba', 'ibo', 'ice', 'ido', 'iii', 'ijo', 'iku', 'ile', 'ilo', 'ina', 'inc', 'ind', 'ine', 'inh', 'ipk', 'ira', 'iro', 'ita', 'jav', 'jbo', 'jpn', 'jpr', 'jrb', 'kaa', 'kab', 'kac', 'kal', 'kam', 'kan', 'kar', 'kas', 'kau', 'kaw', 'kaz', 'kbd', 'kha', 'khi', 'khm', 'kho', 'kik', 'kin', 'kir', 'kmb', 'kok', 'kom', 'kon', 'kor', 'kos', 'kpe', 'krc', 'krl', 'kro', 'kru', 'kua', 'kum', 'kur', 'kut', 'lad', 'lah', 'lam', 'lao', 'lat', 'lav', 'lez', 'lim', 'lin', 'lit', 'lol', 'loz', 'ltz', 'lua', 'lub', 'lug', 'lui', 'lun', 'luo', 'lus', 'mac', 'mad', 'mag', 'mah', 'mai', 'mak', 'mal', 'man', 'mao', 'map', 'mar', 'mas', 'may', 'mdf', 'mdr', 'men', 'mga', 'mic', 'min', 'mis', 'mkh', 'mlg', 'mlt', 'mnc', 'mni', 'mno', 'moh', 'mon', 'mos', 'mul', 'mun', 'mus', 'mwl', 'mwr', 'myn', 'myv', 'nah', 'nai', 'nap', 'nau', 'nav', 'nbl', 'nde', 'ndo', 'nds', 'nep', 'new', 'nia', 'nic', 'niu', 'nno', 'nob', 'nog', 'non', 'nor', 'nqo', 'nso', 'nub', 'nwc', 'nya', 'nym', 'nyn', 'nyo', 'nzi', 'oci', 'oji', 'ori', 'orm', 'osa', 'oss', 'ota', 'oto', 'paa', 'pag', 'pal', 'pam', 'pan', 'pap', 'pau', 'peo', 'per', 'phi', 'phn', 'pli', 'pol', 'pon', 'por', 'pra', 'pro', 'pus', 'qaa-qtz', 'que', 'raj', 'rap', 'rar', 'roa', 'roh', 'rom', 'rum', 'run', 'rup', 'rus', 'sad', 'sag', 'sah', 'sai', 'sal', 'sam', 'san', 'sas', 'sat', 'scn', 'sco', 'sel', 'sem', 'sga', 'sgn', 'shn', 'sid', 'sin', 'sio', 'sit', 'sla', 'slo', 'slv', 'sma', 'sme', 'smi', 'smj', 'smn', 'smo', 'sms', 'sna', 'snd', 'snk', 'sog', 'som', 'son', 'sot', 'spa', 'srd', 'srn', 'srp', 'srr', 'ssa', 'ssw', 'suk', 'sun', 'sus', 'sux', 'swa', 'swe', 'syc', 'syr', 'tah', 'tai', 'tam', 'tat', 'tel', 'tem', 'ter', 'tet', 'tgk', 'tgl', 'tha', 'tib', 'tig', 'tir', 'tiv', 'tkl', 'tlh', 'tli', 'tmh', 'tog', 'ton', 'tpi', 'tsi', 'tsn', 'tso', 'tuk', 'tum', 'tup', 'tur', 'tut', 'tvl', 'twi', 'tyv', 'udm', 'uga', 'uig', 'ukr', 'umb', 'und', 'urd', 'uzb', 'vai', 'ven', 'vie', 'vol', 'vot', 'wak', 'wal', 'war', 'was', 'wel', 'wen', 'wln', 'wol', 'xal', 'xho', 'yao', 'yap', 'yid', 'yor', 'ypk', 'zap', 'zbl', 'zen', 'zgh', 'zha', 'znd', 'zul', 'zun', 'zxx', 'zza'];
def defaultLanguage = capabilities.Capability.ExtendedCapabilities.SupportedLanguages.DefaultLanguage.Language.toString();
def defaultTitle = capabilities.Service.Title.toString();
def defaultAbstract = capabilities.Service.Abstract.toString();

def ts = testRunner.testCase.testSuite.project.testSuites["Language_Requirements"].testCases["at68-language-parameter"].getTestStepByName('http-request-getcapabilities-default-language');

if(defaultLanguage in isoLang){
	testRunner.testCase.setPropertyValue('defaultLanguage', defaultLanguage);
	ts.setDisabled(false);
	ts.run(testRunner, context);
	if(ts.testRequest.response.responseHeaders.get('Content-Type')[0] != 'text/xml'){
		throw new TranslatableAssertionError("TR.notXMLResponse");
	}
	def capabilitiesLanguaged = new XmlSlurper(false, true).parseText(ts.getPropertyValue("Response"));
	if(defaultTitle != capabilitiesLanguaged.Service.Title.toString() || defaultAbstract != capabilitiesLanguaged.Service.Abstract.toString()){
		throw new TranslatableAssertionError("TR.reponseTitleAbstractShallBeDefault");
	}
}
else{
	ts.setDisabled(true);
	throw new TranslatableAssertionError("TR.languageNotISO");
}
ts.setDisabled(true);</script></con:config></con:testStep><con:properties><con:property><con:name>defaultLanguage</con:name><con:value>spa</con:value></con:property></con:properties></con:testCase><con:testCase id="9a988097-72c0-40a8-9d4e-e2127be54b9f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at69-language-default" searchProperties="true"><con:description><![CDATA[<p>Test that Titles and Abstracts are not affected when the LANGUAGE parameter is absent or unsupported.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at69-language-default" target="_blank">Language Default</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="100d6c96-779e-49fb-adf3-d79ccc348010"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getcapabilities-wrong-language" id="ec41660a-e565-4f05-9220-ae85129c108b" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="ab4ce18d-7ca7-4554-a57a-fd53a37e83c9" name="http-request-getcapabilities-wrong-language" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="59524247-6ed1-49e5-8541-c051d1258538" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="OwsExceptionReportAssertion" id="8fd23bc4-359b-4ede-8432-1254f9cf95f0" name="Fail if service returns OWS Exception Report"/><con:assertion type="Response SLA Assertion" id="7eda7dd2-b5d5-46f0-a63d-96c6c993f252" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>version</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style><con:default>${#Project#version}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>language</con:name><con:value>${#TestCase#wrongLanguage}</con:value><con:style>QUERY</con:style><con:default>${TestCase#wrongLanguage}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="check-wrong-language" id="7c05e5bd-7305-47eb-89e0-bed11f7c30fc"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

testRunner.testCase.setPropertyValue('wrongLanguage', 'zzzz');
def isoLang = ['aar', 'abk', 'ace', 'ach', 'ada', 'ady', 'afa', 'afh', 'afr', 'ain', 'aka', 'akk', 'alb', 'ale', 'alg', 'alt', 'amh', 'ang', 'anp', 'apa', 'ara', 'arc', 'arg', 'arm', 'arn', 'arp', 'art', 'arw', 'asm', 'ast', 'ath', 'aus', 'ava', 'ave', 'awa', 'aym', 'aze', 'bad', 'bai', 'bak', 'bal', 'bam', 'ban', 'baq', 'bas', 'bat', 'bej', 'bel', 'bem', 'ben', 'ber', 'bho', 'bih', 'bik', 'bin', 'bis', 'bla', 'bnt', 'bos', 'bra', 'bre', 'btk', 'bua', 'bug', 'bul', 'bur', 'byn', 'cad', 'cai', 'car', 'cat', 'cau', 'ceb', 'cel', 'cha', 'chb', 'che', 'chg', 'chi', 'chk', 'chm', 'chn', 'cho', 'chp', 'chr', 'chu', 'chv', 'chy', 'cmc', 'cnr', 'cop', 'cor', 'cos', 'cpe', 'cpf', 'cpp', 'cre', 'crh', 'crp', 'csb', 'cus', 'cze', 'dak', 'dan', 'dar', 'day', 'del', 'den', 'dgr', 'din', 'div', 'doi', 'dra', 'dsb', 'dua', 'dum', 'dut', 'dyu', 'dzo', 'efi', 'egy', 'eka', 'elx', 'eng', 'enm', 'epo', 'est', 'ewe', 'ewo', 'fan', 'fao', 'fat', 'fij', 'fil', 'fin', 'fiu', 'fon', 'fre', 'frm', 'fro', 'frr', 'frs', 'fry', 'ful', 'fur', 'gaa', 'gay', 'gba', 'gem', 'geo', 'ger', 'gez', 'gil', 'gla', 'gle', 'glg', 'glv', 'gmh', 'goh', 'gon', 'gor', 'got', 'grb', 'grc', 'gre', 'grn', 'gsw', 'guj', 'gwi', 'hai', 'hat', 'hau', 'haw', 'heb', 'her', 'hil', 'him', 'hin', 'hit', 'hmn', 'hmo', 'hrv', 'hsb', 'hun', 'hup', 'iba', 'ibo', 'ice', 'ido', 'iii', 'ijo', 'iku', 'ile', 'ilo', 'ina', 'inc', 'ind', 'ine', 'inh', 'ipk', 'ira', 'iro', 'ita', 'jav', 'jbo', 'jpn', 'jpr', 'jrb', 'kaa', 'kab', 'kac', 'kal', 'kam', 'kan', 'kar', 'kas', 'kau', 'kaw', 'kaz', 'kbd', 'kha', 'khi', 'khm', 'kho', 'kik', 'kin', 'kir', 'kmb', 'kok', 'kom', 'kon', 'kor', 'kos', 'kpe', 'krc', 'krl', 'kro', 'kru', 'kua', 'kum', 'kur', 'kut', 'lad', 'lah', 'lam', 'lao', 'lat', 'lav', 'lez', 'lim', 'lin', 'lit', 'lol', 'loz', 'ltz', 'lua', 'lub', 'lug', 'lui', 'lun', 'luo', 'lus', 'mac', 'mad', 'mag', 'mah', 'mai', 'mak', 'mal', 'man', 'mao', 'map', 'mar', 'mas', 'may', 'mdf', 'mdr', 'men', 'mga', 'mic', 'min', 'mis', 'mkh', 'mlg', 'mlt', 'mnc', 'mni', 'mno', 'moh', 'mon', 'mos', 'mul', 'mun', 'mus', 'mwl', 'mwr', 'myn', 'myv', 'nah', 'nai', 'nap', 'nau', 'nav', 'nbl', 'nde', 'ndo', 'nds', 'nep', 'new', 'nia', 'nic', 'niu', 'nno', 'nob', 'nog', 'non', 'nor', 'nqo', 'nso', 'nub', 'nwc', 'nya', 'nym', 'nyn', 'nyo', 'nzi', 'oci', 'oji', 'ori', 'orm', 'osa', 'oss', 'ota', 'oto', 'paa', 'pag', 'pal', 'pam', 'pan', 'pap', 'pau', 'peo', 'per', 'phi', 'phn', 'pli', 'pol', 'pon', 'por', 'pra', 'pro', 'pus', 'qaa-qtz', 'que', 'raj', 'rap', 'rar', 'roa', 'roh', 'rom', 'rum', 'run', 'rup', 'rus', 'sad', 'sag', 'sah', 'sai', 'sal', 'sam', 'san', 'sas', 'sat', 'scn', 'sco', 'sel', 'sem', 'sga', 'sgn', 'shn', 'sid', 'sin', 'sio', 'sit', 'sla', 'slo', 'slv', 'sma', 'sme', 'smi', 'smj', 'smn', 'smo', 'sms', 'sna', 'snd', 'snk', 'sog', 'som', 'son', 'sot', 'spa', 'srd', 'srn', 'srp', 'srr', 'ssa', 'ssw', 'suk', 'sun', 'sus', 'sux', 'swa', 'swe', 'syc', 'syr', 'tah', 'tai', 'tam', 'tat', 'tel', 'tem', 'ter', 'tet', 'tgk', 'tgl', 'tha', 'tib', 'tig', 'tir', 'tiv', 'tkl', 'tlh', 'tli', 'tmh', 'tog', 'ton', 'tpi', 'tsi', 'tsn', 'tso', 'tuk', 'tum', 'tup', 'tur', 'tut', 'tvl', 'twi', 'tyv', 'udm', 'uga', 'uig', 'ukr', 'umb', 'und', 'urd', 'uzb', 'vai', 'ven', 'vie', 'vol', 'vot', 'wak', 'wal', 'war', 'was', 'wel', 'wen', 'wln', 'wol', 'xal', 'xho', 'yao', 'yap', 'yid', 'yor', 'ypk', 'zap', 'zbl', 'zen', 'zgh', 'zha', 'znd', 'zul', 'zun', 'zxx', 'zza'];
def defaultLanguage = capabilities.Capability.ExtendedCapabilities.SupportedLanguages.DefaultLanguage.Language.toString();
def defaultTitle = capabilities.Service.Title.toString();
def defaultAbstract = capabilities.Service.Abstract.toString();

def ts = testRunner.testCase.testSuite.project.testSuites["Language_Requirements"].testCases["at69-language-default"].getTestStepByName('http-request-getcapabilities-wrong-language');

if(defaultLanguage in isoLang){
	ts.setDisabled(false);
	ts.run(testRunner, context);
	
	def capabilitiesLanguaged = new XmlSlurper(false, true).parseText(ts.getPropertyValue("Response"));
	if(defaultTitle != capabilitiesLanguaged.Service.Title.toString() || defaultAbstract != capabilitiesLanguaged.Service.Abstract.toString()){
		throw new TranslatableAssertionError("TR.reponseTitleAbstractShallBeDefault");
	}
}
else{
	ts.setDisabled(true);
	throw new TranslatableAssertionError("TR.languageNotISO");
}
ts.setDisabled(true);</script></con:config></con:testStep><con:properties><con:property><con:name>wrongLanguage</con:name><con:value>zzzz</con:value></con:property></con:properties></con:testCase><con:testCase id="3fdab68c-a136-4c07-b554-cfbd42ec6d55" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at70-language-response" searchProperties="true"><con:description><![CDATA[<p>Test that the service Language Response changes according with the request.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at70-language-response" target="_blank">Language Response</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="703fc41a-c849-44ca-8d04-f5c1747f3507"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="httprequest" name="http-request-getcapabilities-language-response" id="0a80582e-f6c9-4dbf-854d-a2e00a7ac36e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2059acf6-3503-4ca1-b630-e22e71f3b375" name="http-request-getcapabilities-language-response" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="41418098-f82d-4c2f-8b4a-256c22d1f602" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="OwsExceptionReportAssertion" id="126c60ce-a506-4624-b3f6-bb1e040c0283" name="Fail if service returns OWS Exception Report"/><con:assertion type="Response SLA Assertion" id="8d269f05-1c60-497c-9abd-83fb4b7491d4" name="Response SLA"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>version</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style><con:default>${#Project#version}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>language</con:name><con:value>${#TestCase#language}</con:value><con:style>QUERY</con:style><con:default>${#TestCase#language}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="check-language-response" id="46700a9f-29a2-43c2-a037-6268bab06a79"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def isoLang = ['aar', 'abk', 'ace', 'ach', 'ada', 'ady', 'afa', 'afh', 'afr', 'ain', 'aka', 'akk', 'alb', 'ale', 'alg', 'alt', 'amh', 'ang', 'anp', 'apa', 'ara', 'arc', 'arg', 'arm', 'arn', 'arp', 'art', 'arw', 'asm', 'ast', 'ath', 'aus', 'ava', 'ave', 'awa', 'aym', 'aze', 'bad', 'bai', 'bak', 'bal', 'bam', 'ban', 'baq', 'bas', 'bat', 'bej', 'bel', 'bem', 'ben', 'ber', 'bho', 'bih', 'bik', 'bin', 'bis', 'bla', 'bnt', 'bos', 'bra', 'bre', 'btk', 'bua', 'bug', 'bul', 'bur', 'byn', 'cad', 'cai', 'car', 'cat', 'cau', 'ceb', 'cel', 'cha', 'chb', 'che', 'chg', 'chi', 'chk', 'chm', 'chn', 'cho', 'chp', 'chr', 'chu', 'chv', 'chy', 'cmc', 'cnr', 'cop', 'cor', 'cos', 'cpe', 'cpf', 'cpp', 'cre', 'crh', 'crp', 'csb', 'cus', 'cze', 'dak', 'dan', 'dar', 'day', 'del', 'den', 'dgr', 'din', 'div', 'doi', 'dra', 'dsb', 'dua', 'dum', 'dut', 'dyu', 'dzo', 'efi', 'egy', 'eka', 'elx', 'eng', 'enm', 'epo', 'est', 'ewe', 'ewo', 'fan', 'fao', 'fat', 'fij', 'fil', 'fin', 'fiu', 'fon', 'fre', 'frm', 'fro', 'frr', 'frs', 'fry', 'ful', 'fur', 'gaa', 'gay', 'gba', 'gem', 'geo', 'ger', 'gez', 'gil', 'gla', 'gle', 'glg', 'glv', 'gmh', 'goh', 'gon', 'gor', 'got', 'grb', 'grc', 'gre', 'grn', 'gsw', 'guj', 'gwi', 'hai', 'hat', 'hau', 'haw', 'heb', 'her', 'hil', 'him', 'hin', 'hit', 'hmn', 'hmo', 'hrv', 'hsb', 'hun', 'hup', 'iba', 'ibo', 'ice', 'ido', 'iii', 'ijo', 'iku', 'ile', 'ilo', 'ina', 'inc', 'ind', 'ine', 'inh', 'ipk', 'ira', 'iro', 'ita', 'jav', 'jbo', 'jpn', 'jpr', 'jrb', 'kaa', 'kab', 'kac', 'kal', 'kam', 'kan', 'kar', 'kas', 'kau', 'kaw', 'kaz', 'kbd', 'kha', 'khi', 'khm', 'kho', 'kik', 'kin', 'kir', 'kmb', 'kok', 'kom', 'kon', 'kor', 'kos', 'kpe', 'krc', 'krl', 'kro', 'kru', 'kua', 'kum', 'kur', 'kut', 'lad', 'lah', 'lam', 'lao', 'lat', 'lav', 'lez', 'lim', 'lin', 'lit', 'lol', 'loz', 'ltz', 'lua', 'lub', 'lug', 'lui', 'lun', 'luo', 'lus', 'mac', 'mad', 'mag', 'mah', 'mai', 'mak', 'mal', 'man', 'mao', 'map', 'mar', 'mas', 'may', 'mdf', 'mdr', 'men', 'mga', 'mic', 'min', 'mis', 'mkh', 'mlg', 'mlt', 'mnc', 'mni', 'mno', 'moh', 'mon', 'mos', 'mul', 'mun', 'mus', 'mwl', 'mwr', 'myn', 'myv', 'nah', 'nai', 'nap', 'nau', 'nav', 'nbl', 'nde', 'ndo', 'nds', 'nep', 'new', 'nia', 'nic', 'niu', 'nno', 'nob', 'nog', 'non', 'nor', 'nqo', 'nso', 'nub', 'nwc', 'nya', 'nym', 'nyn', 'nyo', 'nzi', 'oci', 'oji', 'ori', 'orm', 'osa', 'oss', 'ota', 'oto', 'paa', 'pag', 'pal', 'pam', 'pan', 'pap', 'pau', 'peo', 'per', 'phi', 'phn', 'pli', 'pol', 'pon', 'por', 'pra', 'pro', 'pus', 'qaa-qtz', 'que', 'raj', 'rap', 'rar', 'roa', 'roh', 'rom', 'rum', 'run', 'rup', 'rus', 'sad', 'sag', 'sah', 'sai', 'sal', 'sam', 'san', 'sas', 'sat', 'scn', 'sco', 'sel', 'sem', 'sga', 'sgn', 'shn', 'sid', 'sin', 'sio', 'sit', 'sla', 'slo', 'slv', 'sma', 'sme', 'smi', 'smj', 'smn', 'smo', 'sms', 'sna', 'snd', 'snk', 'sog', 'som', 'son', 'sot', 'spa', 'srd', 'srn', 'srp', 'srr', 'ssa', 'ssw', 'suk', 'sun', 'sus', 'sux', 'swa', 'swe', 'syc', 'syr', 'tah', 'tai', 'tam', 'tat', 'tel', 'tem', 'ter', 'tet', 'tgk', 'tgl', 'tha', 'tib', 'tig', 'tir', 'tiv', 'tkl', 'tlh', 'tli', 'tmh', 'tog', 'ton', 'tpi', 'tsi', 'tsn', 'tso', 'tuk', 'tum', 'tup', 'tur', 'tut', 'tvl', 'twi', 'tyv', 'udm', 'uga', 'uig', 'ukr', 'umb', 'und', 'urd', 'uzb', 'vai', 'ven', 'vie', 'vol', 'vot', 'wak', 'wal', 'war', 'was', 'wel', 'wen', 'wln', 'wol', 'xal', 'xho', 'yao', 'yap', 'yid', 'yor', 'ypk', 'zap', 'zbl', 'zen', 'zgh', 'zha', 'znd', 'zul', 'zun', 'zxx', 'zza'];
def defaultLanguage = capabilities.Capability.ExtendedCapabilities.SupportedLanguages.DefaultLanguage.Language.toString();
def ts = testRunner.testCase.testSuite.project.testSuites["Language_Requirements"].testCases["at70-language-response"].getTestStepByName('http-request-getcapabilities-language-response');
ts.setDisabled(false);

if(!(defaultLanguage in isoLang)){
	throw new TranslatableAssertionError("TR.languageNotISO");
}
def supportedLanguages = [];
supportedLanguages &lt;&lt; capabilities.Capability.ExtendedCapabilities.SupportedLanguages.DefaultLanguage.Language;

for (x in capabilities.Capability.ExtendedCapabilities.SupportedLanguages.SupportedLanguage){
	if(x.Language in isoLang){
		supportedLanguages &lt;&lt; x.Language;
	}
	else{
		throw new TranslatableAssertionError("TR.languageNotISO");
	}
}

// Request without language parameter
testRunner.testCase.setPropertyValue('language', '');
ts.run(testRunner, context);
def capabilitiesLanguaged = new XmlSlurper(false, true).parseText(ts.getPropertyValue("Response"));
if (defaultLanguage != capabilitiesLanguaged.Capability.ExtendedCapabilities.ResponseLanguage.Language.toString()){
	throw new TranslatableAssertionError("TR.reponseLanguageShallBeDefault");
}

// Request with invalid parameter
testRunner.testCase.setPropertyValue('language', 'zzzz');
ts.run(testRunner, context);
capabilitiesLanguaged = new XmlSlurper(false, true).parseText(ts.getPropertyValue("Response"));
if (defaultLanguage != capabilitiesLanguaged.Capability.ExtendedCapabilities.ResponseLanguage.Language.toString()){
	throw new TranslatableAssertionError("TR.reponseLanguageShallBeDefault");
}

// Request for default and supported languages
for (x in supportedLanguages){
	testRunner.testCase.setPropertyValue('language', x.toString());
	ts.run(testRunner, context);
	capabilitiesLanguaged = new XmlSlurper(false, true).parseText(ts.getPropertyValue("Response"));
	if (x != capabilitiesLanguaged.Capability.ExtendedCapabilities.ResponseLanguage.Language.toString()){
		String[] assertParams = ['requestedlanguage', x, 'responselanguage', capabilitiesLanguaged.Capability.ExtendedCapabilities.ResponseLanguage.Language.toString()];
		throw new TranslatableAssertionError("TR.reponseLanguageShallBeSameAsRequested", assertParams);
	}
}
ts.setDisabled(true);</script></con:config></con:testStep><con:properties><con:property><con:name>language</con:name><con:value>eng</con:value></con:property></con:properties></con:testCase><con:testCase id="e2fdddb1-2e25-459c-a3fe-8c145b339373" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at71-language-supported" searchProperties="true"><con:description><![CDATA[<p>Test that the capabilities document contains the language elements with the correct multiplicity.</p>
<p>More information: <a href="http://inspire.ec.europa.eu/id/ats/view-service/review-ats-tg_3.11/iso-19128/at71-language-supported" target="_blank">Language Supported</a></p>]]></con:description><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="eb511d2c-bff3-4da6-a554-8e5c634163a0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-language-supported" id="e1774061-c587-414d-a46a-45a1a15ed5c0"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

if(capabilities.Capability.ExtendedCapabilities.SupportedLanguages.size() != 1){
	String[] assertParams = ['element', 'ExtendedCapabilities/SupportedLanguages'];
	throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
}
if(capabilities.Capability.ExtendedCapabilities.SupportedLanguages.DefaultLanguage.size() != 1){
	String[] assertParams = ['element', 'ExtendedCapabilities/SupportedLanguages/DefaultLanguage'];
	throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
}
if(capabilities.Capability.ExtendedCapabilities.SupportedLanguages.DefaultLanguage.Language.toString().length() == 0){
	String[] assertParams = ['element', 'ExtendedCapabilities/SupportedLanguages/DefaultLanguage/Language'];
	throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
}
for (x in capabilities.Capability.ExtendedCapabilities.SupportedLanguages.SupportedLanguage){
	if(x.Language.toString().length() == 0){
		String[] assertParams = ['element', 'ExtendedCapabilities/SupportedLanguages/SupportedLanguage'];
		throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
	}
}
if(capabilities.Capability.ExtendedCapabilities.ResponseLanguage.size() != 1){
	String[] assertParams = ['element', 'ExtendedCapabilities/ResponseLanguage'];
	throw new TranslatableAssertionError('TR.multiplicityShallBeOne', assertParams);
}
if(capabilities.Capability.ExtendedCapabilities.ResponseLanguage.Language.toString().length() == 0){
	String[] assertParams = ['element', 'ExtendedCapabilities/ResponseLanguage/Language'];
	throw new TranslatableAssertionError('TR.valueShallNotBeEmpty', assertParams);
}</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>serviceEndpoint</con:name><con:value>http://www.ign.es/wms-inspire/unidades-administrativas?request=GetCapabilities&amp;service=WMS</con:value></con:property><con:property><con:name>service</con:name><con:value>WMS</con:value></con:property><con:property><con:name>version</con:name><con:value>1.3.0</con:value></con:property><con:property><con:name>extended_capabilities_scenario</con:name><con:value>1</con:value></con:property><con:property><con:name>lastServiceEndpoint</con:name><con:value>http://www.ign.es/wms-inspire/unidades-administrativas?request=GetCapabilities&amp;service=WMS</con:value></con:property><con:property><con:name>authUser</con:name><con:value/></con:property><con:property><con:name>authPwd</con:name><con:value/></con:property><con:property><con:name>etf.ignore.properties</con:name><con:value>service, version, extended_capabilities_scenario, lastServiceEndpoint, authUser, authPwd</con:value></con:property><con:property><con:name>etf.tag.ids</con:name><con:value>EID7c15a770-986a-4aa0-b4cd-7facbca96a1d</con:value></con:property><con:property><con:name>etf.translation.template.collection.id</con:name><con:value>EIDfa68eb83-a25a-4009-84dd-036de4539c93</con:value></con:property><con:property><con:name>etf.supported.test.object.type.ids</con:name><con:value>EID9981e87e-d642-43b3-ad5f-e77469075e74</con:value></con:property><con:property><con:name>etf.author</con:name><con:value>Consortium Bilbomatica, Guadaltel &amp; Geograma</con:value></con:property><con:property><con:name>etf.creation.date</con:name><con:value>2018-11-07T00:00:00</con:value></con:property><con:property><con:name>etf.last.editor</con:name><con:value>Consortium Bilbomatica, Guadaltel &amp; Geograma</con:value></con:property><con:property><con:name>etf.last.update.date</con:name><con:value>2019-02-12T16:00:00</con:value></con:property><con:property><con:name>etf.version</con:name><con:value>0.3.2</con:value></con:property><con:property><con:name>etf.reference</con:name><con:value>https://github.com/inspire-eu-validation/ets-repository/tree/master/service/vs-wms-soapui-project.xml</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>