<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="c837298f-a10e-42d1-88f2-f1415cbbb463" activeEnvironment="Default" name="Conformance Class: Discovery Service - CSW Core" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config">
    <con:description>
        <![CDATA[This test suite examines an OGC Discovery Service against the requirements related to INSPIRE <br/> <br/> <b>This is a draft version. It has limitations and is expected to contain errors.</b>]]>
    </con:description>
    <con:settings />
    <con:testSuite id="0c3e1720-dbdf-4970-bb85-f00c3bd75ff1" name="Initialize">
        <con:settings />
        <con:runType>SEQUENTIAL</con:runType>
        <con:testCase id="27dc63e3-a8c0-443f-9261-68573c84b2ef" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="initial-testcase" searchProperties="true">
            <con:description>&lt;p>This test case initializes the Executable Test Suite.&lt;/p>
&lt;p>It performs an initial GetCapabilities request, it sets common properties with gathered information and it determines the metadata scenario based on the elements provided in the capabilities document.&lt;/p></con:description>
            <con:settings />
            <con:testStep type="groovy" name="reset-properties" id="2979a0fa-4a5f-4cef-83a5-4bc99703a638">
                <con:settings />
                <con:config>
                    <script>import de.interactive_instruments.xtf.*;
SOAPUI_I.init(log,context,testRunner);

// Also update credentials
TestSetup.init();

testRunner.testCase.testSuite.project.setPropertyValue( 'extended_capabilities_scenario', '1' );
testRunner.testCase.testSuite.project.setPropertyValue( 'lastServiceEndpoint', '');
testRunner.testCase.testSuite.project.setPropertyValue( 'getrecords_endpoint', '');

					</script>
				</con:config>
			</con:testStep>
			<con:testStep type="httprequest" name="http-request" id="2ea74ad1-db3b-461d-9a4c-685af9ad7a8f">
				<con:settings />
				<con:config method="GET" xsi:type="con:HttpRequest" id="b2a323da-3fa1-42d9-9f3b-fbad043f45b9" name="http-request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
					<con:settings>
						<con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
					</con:settings>
					<con:endpoint>${#Project#serviceEndpoint}</con:endpoint>
					<con:request />
					<con:assertion type="Response SLA Assertion" id="5c8bff0a-38ec-43ca-bc14-66ba6774ac6e" name="Response SLA">
						<con:configuration>
							<SLA>60000</SLA>
						</con:configuration>
					</con:assertion>
					<con:assertion type="Valid HTTP Status Codes" id="4177027b-934a-4db4-a913-2a9ee88b8c59" name="Valid HTTP Status Codes">
						<con:configuration>
							<codes>200</codes>
						</con:configuration>
					</con:assertion>
					<con:assertion type="OwsExceptionReportAssertion" id="5d1cf02e-c04d-4cb3-bb59-c1b0da724773" name="Fail if service returns OWS Exception Report" />
					<con:credentials>
						<con:authType>No Authorization</con:authType>
					</con:credentials>
					<con:jmsConfig JMSDeliveryMode="PERSISTENT" />
					<con:jmsPropertyConfig />
					<con:parameters>
						<con:parameter>
							<con:name>service</con:name>
							<con:value>${#Project#service}</con:value>
							<con:style>QUERY</con:style>
							<con:default>${#Project#service}</con:default>
							<con:path xsi:nil="true" />
							<con:description xsi:nil="true" />
						</con:parameter>
						<con:parameter>
							<con:name>request</con:name>
							<con:value>GetCapabilities</con:value>
							<con:style>QUERY</con:style>
							<con:default>GetCapabilities</con:default>
							<con:path xsi:nil="true" />
							<con:description xsi:nil="true" />
						</con:parameter>
						<con:parameter>
							<con:name>version</con:name>
							<con:value>${#Project#version}</con:value>
							<con:style>QUERY</con:style>
							<con:default>${#Project#AcceptVersions}</con:default>
							<con:path xsi:nil="true" />
							<con:description xsi:nil="true" />
						</con:parameter>
					</con:parameters>
				</con:config>
			</con:testStep>
			<con:testStep type="groovy" name="set-extended-capabilities-scenario" id="f3fec736-1ec7-4263-9697-eaead5fbf05e">
				<con:settings />
				<con:config>
					<script>def response = context.expand('${http-request#Response}');
def capabilities = new XmlSlurper().parseText(response);
def extendedCapabilities = capabilities.depthFirst().findAll{it.name() == 'ExtendedCapabilities' &amp;&amp; it.parent().name() == 'OperationsMetadata'}[0];

def scenario = '2';
if(extendedCapabilities.MetadataUrl.size() != 0){
	scenario = '1';
}
testRunner.testCase.testSuite.project.setPropertyValue( "extended_capabilities_scenario", scenario );
log.info('Extended Capabilities Scenario: ' + scenario);
					</script>
				</con:config>
			</con:testStep>
			<con:testStep type="groovy" name="set-lastserviceendpoint" id="398c931c-7439-45ca-be08-4ed973529c52">
				<con:settings />
				<con:config>
					<script>def lastServiceEndpoint = context.expand('${http-request#EndPoint}');
testRunner.testCase.testSuite.project.setPropertyValue( 'lastServiceEndpoint', lastServiceEndpoint);
					</script>
				</con:config>
			</con:testStep>
			<con:testStep type="groovy" name="set-getrecords-endpoint" id="2614132e-f987-4b23-8ad7-55cf3a209204">
				<con:settings />
				<con:config>
					<script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["Initialize"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def operation = capabilities.depthFirst().findAll{it.name() == 'Operation' &amp;&amp; it.'@name' == 'GetRecords' &amp;&amp; it.parent().name() == 'OperationsMetadata'}[0];

def getrecords_endpoint = testRunner.testCase.testSuite.project.getPropertyValue('serviceEndpoint').toString().split(/\?/)[0];

if (operation.DCP.HTTP.Get.'@xlink:href'.size() != 0){
	getrecords_endpoint = operation.DCP.HTTP.Get.'@xlink:href';
}
else if (operation.DCP.HTTP.Post.'@xlink:href'.size() != 0){
	getrecords_endpoint = operation.DCP.HTTP.Post.'@xlink:href';
}

testRunner.testCase.testSuite.project.setPropertyValue( 'getrecords_endpoint', getrecords_endpoint.toString());
					</script>
				</con:config>
			</con:testStep>
			<con:testStep type="groovy" name="set-constraint-language" id="0e1fb9f9-998c-464b-812d-30b74621794d">
				<con:settings />
				<con:config>
					<script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["Initialize"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def operation = capabilities.depthFirst().findAll{it.name() == 'Operation' &amp;&amp; it.'@name' == 'GetRecords' &amp;&amp; it.parent().name() == 'OperationsMetadata'}[0];

def constraintlanguages = operation.depthFirst().findAll{it.'@name' == 'CONSTRAINTLANGUAGE'}[0];

def filter_language_supported = false;
def cql_text_language_supported = false;

for (i in constraintlanguages.Value){
	if (i == 'FILTER'){
		filter_language_supported = true;
	}
	else if (i == 'CQL_TEXT'){
		cql_text_language_supported = true;
	}
}

log.info(filter_language_supported);</script>
				</con:config>
			</con:testStep>
			<con:properties />
		</con:testCase>
		<con:testCase id="c2bf56ae-2544-4b9d-9fdf-28654aa6111f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="check-initial-testcase" searchProperties="true">
			<con:description>&lt;p>This test case checks whether the Executable Test Suite has been initialized. If it has not been, it runs the initialization test case.&lt;/p></con:description>
			<con:settings />
			<con:testStep type="groovy" name="run-initial-testcase-if-needed" id="832adc57-d05d-46a7-a631-4058a843a114">
				<con:settings />
				<con:config>
					<script>def tc = testRunner.testCase.testSuite.project.testSuites["Initialize"].testCases["initial-testcase"];
def serviceEndPoint = testRunner.testCase.testSuite.project.getPropertyValue('serviceEndpoint');
def lastServiceEndPoint = testRunner.testCase.testSuite.project.getPropertyValue('lastServiceEndpoint');
def makeInitialRequest = false;
if (tc.getTestStepByName("http-request").getPropertyValue("Response") == null){
	makeInitialRequest = true;
}
else if(serviceEndPoint != lastServiceEndPoint){
	makeInitialRequest = true;
}
if(makeInitialRequest){
	runner = tc.run(new com.eviware.soapui.support.types.StringToObjectMap(), false);
}
					</script>
				</con:config>
			</con:testStep>
			<con:properties />
		</con:testCase>
		<con:properties />
	</con:testSuite>
	<con:properties>
		<con:property>
			<con:name>serviceEndpoint</con:name>
			<con:value />
		</con:property>
		<con:property>
			<con:name>service</con:name>
			<con:value>CSW</con:value>
		</con:property>
		<con:property>
			<con:name>version</con:name>
			<con:value>2.0.2</con:value>
		</con:property>
		<con:property>
			<con:name>extended_capabilities_scenario</con:name>
			<con:value>1</con:value>
		</con:property>
		<con:property>
			<con:name>lastServiceEndpoint</con:name>
			<con:value />
		</con:property>
		<con:property>
			<con:name>getrecords_endpoint</con:name>
			<con:value />
		</con:property>
		<con:property>
			<con:name>authUser</con:name>
			<con:value />
		</con:property>
		<con:property>
			<con:name>authPwd</con:name>
			<con:value />
		</con:property>
		<con:property>
			<con:name>authMethod</con:name>
			<con:value>basic</con:value>
		</con:property>
		<con:property>
			<con:name>etf.ignore.properties</con:name>
			<con:value>service, version, extended_capabilities_scenario, lastServiceEndpoint, getrecords_endpoint, authUser, authPwd, authMethod</con:value>
		</con:property>
		<con:property>
			<con:name>etf.tag.ids</con:name>
			<con:value>EID0861e71d-bb54-4fa2-8d32-816b41531da3</con:value>
		</con:property>
		<con:property>
			<con:name>etf.translation.template.collection.id</con:name>
			<con:value>EID6f004d02-ca77-4a67-99a4-62515725a573</con:value>
		</con:property>
		<con:property>
			<con:name>etf.supported.test.object.type.ids</con:name>
			<con:value>EID4b0fb35d-10f0-47df-bc0b-6d4548035ae2</con:value>
		</con:property>
		<con:property>
			<con:name>etf.author</con:name>
			<con:value>Consortium Bilbomatica, Guadaltel &amp; Geograma</con:value>
		</con:property>
		<con:property>
			<con:name>etf.creation.date</con:name>
			<con:value>2019-05-02T10:00:00</con:value>
		</con:property>
		<con:property>
			<con:name>etf.last.editor</con:name>
			<con:value>Consortium Bilbomatica, Guadaltel &amp; Geograma</con:value>
		</con:property>
		<con:property>
			<con:name>etf.last.update.date</con:name>
			<con:value>2020-03-05T13:00:00</con:value>
		</con:property>
		<con:property>
			<con:name>etf.version</con:name>
			<con:value>0.1.6</con:value>
		</con:property>
		<con:property>
			<con:name>etf.reference</con:name>
			<con:value>https://github.com/inspire-eu-validation/discovery-service</con:value>
		</con:property>
		<con:property>
			<con:name>testIntensive</con:name>
			<con:value />
		</con:property>
	</con:properties>
	<con:wssContainer />
	<con:oAuth2ProfileContainer />
	<con:oAuth1ProfileContainer />
	<con:sensitiveInformation />
</con:soapui-project>