<?xml version="1.0" encoding="utf-8"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EID4441cbde-371f-4899-90b3-145f4fd08ebc" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 https://resources.etf-validator.net/schema/v2/val/ignoreRef.xsd">
	<itemHash>bQ==</itemHash>
	<remoteResource>https://github.com/inspire-eu-validation/ets-repository/tree/master/data-tn/tn-as</remoteResource>
	<localPath>/auto</localPath>
	<label>Conformance class: Application schema, Transport Networks Common</label>
	<description><![CDATA[This test suite examines requirements associated with the application schema.<br/><br/>
Note that since both code-list-valued properties of this application schema may be extended without restrictions, there is no test case for code list values.<br/><br/>
<b>This is a draft version. It has limitations and is expected to contain errors.</b> Please report any issues or problems <a href="https://github.com/INSPIRE-MIF/helpdesk-validator/wiki/Your-feedback" target="_blank">in GitHub</a>.<br/><br/>
Known limitations are documented in the description of the applicable test case or test assertion. There is a general limitation in all assertions that extensions in additional application schemas are not fully supported.<br/><br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as" target="_blank">Conformance Class 'Application schema, Transport Networks Common'</a><br/><br/>
Pre-requisite conformance classes:
<ul><li><a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-gml" target="_blank">Conformance Class 'GML application schemas, Transport Networks'</a></li></ul>]]></description>
  <reference>../../inspire-bsxets.xq</reference>
	<version>0.2.2</version>
	<author>PwC</author>
	<creationDate>2016-12-09T00:00:00Z</creationDate>
	<lastEditor>interactive instruments GmbH</lastEditor>
	<lastUpdateDate>2017-05-16T13:00:00Z</lastUpdateDate>
	<tags>
		<tag ref="EID54d5f755-e20c-40a7-ab72-5600c71dd049"/>
	</tags>
	<testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
	<translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
	<ParameterList name="ETF Standard Parameters for XML test objects">
		<parameter name="files_to_test" required="true">
			<defaultValue>.*</defaultValue>
			<description ref="TR.filesToTest"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
		<parameter name="tests_to_execute" required="false">
			<defaultValue>.*</defaultValue>
			<description ref="TR.testsToExecute"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
	</ParameterList>
	<supportedTestObjectTypes>
		<testObjectType ref="EIDe1d4a306-7a78-4a3b-ae2d-cf5f0810853e"/>
	</supportedTestObjectTypes>
	<dependencies>
		<executableTestSuite ref="EID9af1c865-1cf0-43ff-9250-069df01b0948"/>
	</dependencies>
	<testModules>
		<TestModule id="EIDe11a7179-a5d8-4556-a94a-90fcfb7e6ffd">
			<label>IGNORE</label>
			<description>IGNORE</description>
			<parent ref="EID4441cbde-371f-4899-90b3-145f4fd08ebc"/>
			<testCases>
				<TestCase id="EID14b1c9d9-59fe-4983-9e91-b5ec14d743a6">
				  <label>Code list values</label>
				  <description>Verify whether all attributes whose value type is a code list take the values set out therein.</description>
				  <parent ref="EIDe11a7179-a5d8-4556-a94a-90fcfb7e6ffd"/>
					<testSteps>
						<TestStep id="EID21c7382b-8890-46b5-869d-756c1fcfad57">
						  <label>IGNORE</label>
						  <description>IGNORE</description>
						  <parent ref="EID14b1c9d9-59fe-4983-9e91-b5ec14d743a6"/>
						  <statementForExecution>not applicable</statementForExecution>
						  <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
						  		<TestAssertion id="EID28a341d3-c1cb-47fd-a2f4-1148cdffcde4">
							 		<label>tn-as.a.1: AccessRestrictionValue attributes</label>
									<description><![CDATA[When an attribute has a code list as its type, verify that the values comply with the definitions and include the values set out in Annex II of the regulation. For this attribute, the allowed values are specified in code list <a href='http://inspire.ec.europa.eu/codelist/AccessRestrictionValue'>http://inspire.ec.europa.eu/codelist/AccessRestrictionValue</a>.<br/>For datasets using version 3 of the GML application schema, the value is the last path element of the code list value URI and it is in the child text node. For datasets using version 4 of the GML application schema, the value is in the xlink:href XML attribute and is the HTTP URI of the code list value.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects.  For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/features" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID21c7382b-8890-46b5-869d-756c1fcfad57"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features3 := $features[self::tn3:AccessRestriction]
let $features4 := $features[self::tn:AccessRestriction]
let $messages := local:check-code-list-values($features3, $features4, 'restriction', 'http://inspire.ec.europa.eu/codelist/AccessRestrictionValue')
return (if ($messages) then 'FAILED' else 'PASSED', $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
							 		<translationTemplates>
										<translationTemplate ref="TR.reviewCodeListValue"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
							 		</translationTemplates>
					  			</TestAssertion>
					  			<TestAssertion id="EID1a33615b-0723-4d4f-9bc3-69f0bac3572a">
							 		<label>tn-as.a.2: RestrictionTypeValue attributes</label>
									<description><![CDATA[When an attribute has a code list as its type, verify that the values comply with the definitions and include the values set out in Annex II of the regulation. For this attribute, the allowed values are specified in code list <a href='http://inspire.ec.europa.eu/codelist/RestrictionTypeValue'>http://inspire.ec.europa.eu/codelist/RestrictionTypeValue</a>.<br/>For datasets using version 3 of the GML application schema, the value is the last path element of the code list value URI and it is in the child text node. For datasets using version 4 of the GML application schema, the value is in the xlink:href XML attribute and is the HTTP URI of the code list value.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects.  For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/features" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.3, A.6.1</a>]]></description>
									<parent ref="EID21c7382b-8890-46b5-869d-756c1fcfad57"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features3 := $features[(self::tn3:RestrictionForVehicles|self::tn-w3:RestrictionForWaterVehicles)]
let $features4 := $features[(self::tn:RestrictionForVehicles|self::tn-w:RestrictionForWaterVehicles)]
let $messages := local:check-code-list-values($features3, $features4, 'restrictionType', 'http://inspire.ec.europa.eu/codelist/RestrictionTypeValue')
return (if ($messages) then 'FAILED' else 'PASSED', $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
							 		<translationTemplates>
										<translationTemplate ref="TR.reviewCodeListValue"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
							 		</translationTemplates>
					  			</TestAssertion>
							</testAssertions>
				 		</TestStep>
			  	  	</testSteps>
				</TestCase>
				<TestCase id="EIDaf5b50fc-96a3-49e9-b015-d1400736687b">
				<label>Constraints</label>
				<description>Verify that the features provided in the dataset adhere to the constraints specified in the INSPIRE application schema.</description>
				<parent ref="EIDe11a7179-a5d8-4556-a94a-90fcfb7e6ffd"/>
					<testSteps>
						<TestStep id="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb">
						  <label>IGNORE</label>
						  <description>IGNORE</description>
						  <parent ref="EIDaf5b50fc-96a3-49e9-b015-d1400736687b"/>
						  <statementForExecution>not applicable</statementForExecution>
						  <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EIDfb2ed162-a2ef-4881-bb05-e261c2e316ae">
									<label>tn-as.b.1: TrafficFlowDirection can only be associated with a spatial object of the type Link or LinkSequence.</label>
									<description><![CDATA[TrafficFlowDirection can only be associated with a spatial object of the type Link or LinkSequence.<br/><br/>
OCL: "inv: networkRef.element.oclIsKindOf(LinkReference)".<br/><br/>
Verify that an TrafficFlowDirection only has a Network element association with a spatial object TransportLink or TransportLinkSequence.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.6</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $target := ('RoadLink', 'RailwayLink', 'CablewayLink', 'WaterwayLink', 'AirRouteLink', ' ProcedureLink', 'StandardInstrumentDeparture', 'InstrumentApproachProcedure', 'StandardInstrumentArrival', 'RoadLinkSequence', 'RailwayLinkSequence', 'CablewayLinkSequence', 'WaterLinkSequence', 'AirLinkSequence') 
let $hrefs := $features[(self::*:TrafficFlowDirection|self::*:WaterTrafficFlowDirection)]/*:networkRef/*/*:element/@xlink:href
let $messages := local:check-feature-references($hrefs, $target, 'Link or LinkSequence', 'networkRef.element', 1) 
return 
(if ($messages) then 'FAILED' else 'PASSED', 
 $messages) 
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.featuresWithErrors"/>
										<translationTemplate ref="TR.urlNotHttp2"/>
										<translationTemplate ref="TR.idNotFound2"/>
										<translationTemplate ref="TR.resourceNotAccessibleException2"/>
										<translationTemplate ref="TR.resourceNotAccessible2"/>
										<translationTemplate ref="TR.unknownXMLResource2"/>
										<translationTemplate ref="TR.unknownResourceType2"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDb7daf317-fad9-4d41-818f-1b43b52cb76a">
									<label>tn-as.b.2: All transport areas have an external object identifier.</label>
									<description><![CDATA[All transport areas have an external object identifier<br/><br/>
OCL: "inv:inspireId->notEmpty()".<br/><br/>
Verify that all TransportArea have an inspireId.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.6</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[(self::*:RoadServiceArea|self::*:RoadArea|self::*:VehicleTrafficArea|self::*:RailwayArea|self::*:RailwayStationArea|self::*:RailwayYardArea|self::*:FairwayArea|self::*:PortArea|self::*:TrafficSeparationSchemeCrossing|self::*:TrafficSeparationSchemeLane|self::*:TrafficSeparationSchemeRoundabout|self::*:TrafficSeparationSchemeSeperator|self::*:AerodromeArea|self::*:AirspaceArea|self::*:ApronArea|self::*:RunwayArea|self::*:TaxiwayArea)[not(*:inspireId[not(@xsi:nil='true')])]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'All transport areas have an external object identifier.'}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID2164f7e3-ca11-4958-a11e-c9482c0541d9">
									<label>tn-as.b.3: All transport links have an external object identifier.</label>
									<description><![CDATA[All transport links have an external object identifier.<br/><br/>
OCL: "inv:inspireId->notEmpty()".<br/><br/>
Verify that all TransportLink have an inspireId.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.6</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[(self::*:RoadLink|self::*:RailwayLink|self::*:CablewayLink|self::*:WaterwayLink|self::*:AirRouteLink|self::*:ProcedureLink|self::*:StandardInstrumentDeparture|self::*:InstrumentApproachProcedure|self::*:StandardInstrumentArrival)[not(*:inspireId[not(@xsi:nil='true')])]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'All transport links have an external object identifier.'}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDe31f1598-98ec-4d1c-9ad8-7abca5a21214">
									<label>tn-as.b.4: All transport link sequences have an external object identifier.</label>
									<description><![CDATA[All transport link sequences have an external object identifier.<br/><br/>
OCL: "inv:inspireId->notEmpty()".<br/><br/>
Verify that all TransportLinkSequence have an inspireId.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.6</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[(self::*:RoadLinkSequence|self::*:RailwayLinkSequence|self::*:CablewayLinkSequence|self::*:WaterLinkSequence|self::*:AirLinkSequence)[not(*:inspireId[not(@xsi:nil='true')])]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'All transport link sequences have an external object identifier.'}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID8a716b73-cfef-4bc7-b2a0-496059c55136">
									<label>tn-as.b.5: All transport link sets have an external object identifier.</label>
									<description><![CDATA[All transport link sets have an external object identifier.<br/><br/>
OCL: "inv:inspireId->notEmpty()".<br/><br/>
Verify that all TransportLinkSet have an inspireId.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.6</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[(self::*:Road|self::*:ERoad|self::*:RailwayLine|self::*:CablewayLinkSet|self::*:FerryCrossing|self::*:MarineWaterway|self::*:InlandWaterway|self::*:AirRoute)[not(*:inspireId[not(@xsi:nil='true')])]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'All transport link sets have an external object identifier.'}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID6071c2b7-d4d3-4dcc-a3df-5d24e7739816">
									<label>tn-as.b.6: All transport nodes have an external object identifier.</label>
									<description><![CDATA[All transport nodes have an external object identifier.<br/><br/>
OCL: "inv:inspireId->notEmpty()".<br/><br/>
Verify that all TransportNode have an inspireId.<<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.6</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[(self::*:RoadNode|self::*:RailwayNode|self::*:RailwayYardNode|self::*:RailwayStationNode|self::*:CablewayNode|self::*:WaterwayNode|self::*:PortNode|self::*:Navaid|self::*:DesignatedPoint|self::*:RunwayCentrelinePoint|self::*:TouchDownLiftOff|self::*:AerodromeNode)[not(*:inspireId[not(@xsi:nil='true')])]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'All transport nodes have an external object identifier.'}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID89792a2f-f3b7-4008-a1c6-eedfc6909bfc">
									<label>tn-as.b.7: All transport points have an external object identifier.</label>
									<description><![CDATA[All transport points have an external object identifier.<br/><br/>
OCL: "inv:inspireId->notEmpty()".<br/><br/>
Verify that all TransportPoint have an inspireId.<<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.6</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[(self::*:MarkerPost|self::*:Buoy|self::*:Beacon)[not(*:inspireId[not(@xsi:nil='true')])]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'All transport points have an external object identifier.'}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDe4cb76d6-b8a6-4d90-ae4f-f2bed0ae26ad">
									<label>tn-as.b.8: All transport properties have an external object identifier.</label>
									<description><![CDATA[All transport properties have an external object identifier.<br/><br/>
OCL: "inv:inspireId->notEmpty()".<br/><br/>
Verify that all TransportProperty have an inspireId.<<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.6</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[(self::*:MaintenanceAuthority|self::*:OwnerAuthority|self::*:VerticalPosition|self::*:TrafficFlowDirection|self::*:ConditionOfFacility|self::*:RestrictionForVehicles|self::*:AccessRestriction|self::*:FunctionalRoadClass|self::*:RoadSurfaceCategory|self::*:RoadServiceType|self::*:RoadName|self::*:NumberOfLanes|self::*:SpeedLimit|self::*:RoadWidth|self::*:FormOfWay|self::*:NominalTrackGauge|self::*:RailwayElectrification|self::*:RailwayType|self::*:NumberOfTracks|self::*:DesignSpeed|self::*:RailwayUse|self::*:RailwayStationCode|self::*:FerryUse|self::*:CEMTClass|self::*:RestrictionForWaterVehicles|self::*:WaterTrafficFlowDirection|self::*:ConditionOfWaterFacility|self::*:UpperAltitudeLimit|self::*:FieldElevation|self::*:LowerAltitudeLimit|self::*:AerodromeType|self::*:SurfaceComposition|self::*:useRestriction|self::*:ElementLength|self::*:ElementWidth|self::*:AerodromeCategory|self::*:ConditionOfAirFacility)[not(*:inspireId[not(@xsi:nil='true')])]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'All transport properties have an external object identifier.'}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID8e5faabd-a733-4600-b519-18e53af211f4">
									<label>tn-as.b.9: A transport link sequence must be composed of transport links that all belong to the same transport network.</label>
									<description><![CDATA[A transport link sequence must be composed of transport links that all belong to the same transport network.<br/><br/>
OCL: "inv: link->forAll(l | l.link.inNetwork = self.inNetwork)".<br/><br/>
Verify that all TransportLinkSequence are composed of all link that have the same value for the inNetwork association role as the TransportLinkSequence.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.6</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $candidates := $features[(self::*:RoadLinkSequence|self::*:RailwayLinkSequence|self::*:CablewayLinkSequence|self::*:WaterLinkSequence|self::*:AirLinkSequence)]

let $refcount := count($candidates/*:link[not(@xsi:nil='true')]/*/*:link/@xlink:href)
let $dummy := if ($refcount>100) then local:log("Checking " || $refcount || " feature references - this may take awhile...") else ()
let $messages :=
(for $candidate in $candidates
   return
	(for $href in $candidate/*:link[not(@xsi:nil='true')]/*/*:link/@xlink:href
    	let $element := local:return-reference($href)
	    return
	    if (not($element)) then () (: ignore unresolvable links here, this is handled by the information accessibility tests :)
	    else 
    		if ($element/*:inNetwork[not(@xsi:nil='true')]/@xlink:href = $candidate/*:inNetwork[not(@xsi:nil='true')]/@xlink:href) then ()
    		else local:addMessage('TR.constraintViolation', map { 'filename': local:filename($candidate), 'featureType': local-name($candidate), 'gmlid': string($candidate/@gml:id), 'constraint': 'A transport link sequence must be composed of transport links that all belong to the same transport network.', 'additionalInfo': 'The ' || local-name($element) || ' ''' || $element/@gml:id || ''' does not share a common network with the link sequence: ' || string-join($candidate/*:inNetwork[not(@xsi:nil='true')]/@xlink:href, '; ') || ' vs. ' || string-join($element/*:inNetwork[not(@xsi:nil='true')]/@xlink:href, '; ') || '.' }))
)[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED', 
 local:error-statistics('TR.featuresWithErrors', count(fn:distinct-values($messages//etf:argument[@token='gmlid']/text()))),
 $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDf56cfea3-56e6-4afd-b136-2fe78faacec1">
									<label>tn-as.b.10: A transport link set must be composed of transport links and or transport link sequences that all belong to the same transport network.</label>
									<description><![CDATA[A transport link set must be composed of transport links and or transport link sequences that all belong to the same transport network.<br/><br/>
OCL: "inv: link->forAll(l | l.inNetwork = self.inNetwork)".<br/><br/>
Verify that all TransportLinkSet are composed of all link that have the same value for the inNetwork association role as the TransportLinkSet.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.6</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $candidates := $features[(self::*:Road|self::*:ERoad|self::*:RailwayLine|self::*:CablewayLinkSet|self::*:FerryCrossing|self::*:MarineWaterway|self::*:InlandWaterway|self::*:AirRoute)[not(@xsi:nil='true')]]

let $refcount := count($candidates/*:link[not(@xsi:nil='true')]/*/*:link/@xlink:href)
let $dummy := if ($refcount>100) then local:log("Checking " || $refcount || " feature references - this may take awhile...") else ()
let $messages :=
(for $candidate in $candidates
	return
	(for $href in $candidate/*:link[not(@xsi:nil='true')]/*/*:link/@xlink:href
	    let $element := local:return-reference($href)
	    return
	    if (not($element)) then () (: ignore unresolvable links here, this is handled by the information accessibility tests :)
	    else 
    		if ($element/*:inNetwork[not(@xsi:nil='true')]/@xlink:href = $candidate/*:inNetwork[not(@xsi:nil='true')]/@xlink:href) then ()
    		else local:addMessage('TR.constraintViolation', map { 'filename': local:filename($candidate), 'featureType': local-name($candidate), 'gmlid': string($candidate/@gml:id), 'constraint': 'A transport link set must be composed of transport links and or transport link sequences that all belong to the same transport network', 'additionalInfo': 'The ' || local-name($element) || ' ''' || $element/@gml:id || ''' does not share a common network with the link set: ' || string-join($candidate/*:inNetwork[not(@xsi:nil='true')]/@xlink:href, '; ') || ' vs. ' || string-join($element/*:inNetwork[not(@xsi:nil='true')]/@xlink:href, '; ') || '.' }))
)[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED', 
 local:error-statistics('TR.featuresWithErrors', count(fn:distinct-values($messages//etf:argument[@token='gmlid']/text()))),
 $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase> 
				<TestCase id="EIDc1219880-f263-4459-9c87-c6b9377458c0">
					<label>Geometry</label>
					<description>Verify that geometries are consistent with the geometries of other features in the data set.</description>
					<parent ref="EIDe11a7179-a5d8-4556-a94a-90fcfb7e6ffd"/>
					<testSteps>
						<TestStep id="EIDa0ccae1d-2917-417e-b29c-6553854c5d78">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EIDc1219880-f263-4459-9c87-c6b9377458c0"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EIDd6fa7b64-9a2a-490e-aebe-7411a4610407">
									<label>tn-as.c.1: No free transport nodes</label>
									<description><![CDATA[verify for each TransportNode that the geometry (a gml:Point) is located at a position that touches a TransportLink.centrelineGeometry (a gml:LineString or gml:Curve), i.e. that the node is at the start or end of a transport link. Otherwise report freeNode.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Annex II Section 7.9.3 (2): Theme-specific Requirements – Geometry representation. In a Transport Networks data set which contains nodes, these nodes shall only be present where Transport Links connect or end.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/geometry" target="_blank">Abstract Test Case 'Geometry'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.7</a>]]></description>
									<parent ref="EIDa0ccae1d-2917-417e-b29c-6553854c5d78"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $nodes := $features[(self::*:RoadNode|self::*:RailwayNode|self::*:RailwayYardNode|self::*:RailwayStationNode|self::*:CablewayNode|self::*:WaterwayNode|self::*:PortNode|self::*:Navaid|self::*:DesignatedPoint|self::*:RunwayCentrelinePoint|self::*:TouchDownLiftOff|self::*:AerodromeNode)]
return
if (count($nodes) = 0)
then 'PASSED'
else
	let $featuresWithErrors :=
	(for $candidate in $nodes
	  return
	  try {
		let $candidate_geometry := ggeo:getGeometry($candidate/@gml:id,$candidate/*:geometry/*[1])
		let $env := ggeo:envelope($candidate_geometry)
 		let $other_features := ggeo:search($env[1],$env[2],$env[3],$env[4])
		let $touches := 
		(for $feature in $other_features[(self::*:RoadLink|self::*:RailwayLink|self::*:CablewayLink|self::*:WaterwayLink|self::*:AirRouteLink|self::*:ProcedureLink|self::*:StandardInstrumentDeparture|self::*:InstrumentApproachProcedure|self::*:StandardInstrumentArrival)]
		 return
		 try { 
			let $other_geometry := ggeo:getGeometry($feature/@gml:id,$feature/*:centrelineGeometry/*[1])
			return if (ggeo:touches($candidate_geometry,$other_geometry)) then $feature else ()
		 } catch * {
			let $dummy := local:log('Processing feature ' || string($feature/@gml:id) || '. Exception: ' || $err:code || ' - ' || $err:description || ' [' || $err:module || ', line: ' || $err:line-number || ', column: ' || $err:column-number || ']')
			return () (: silently record the exception in the log, but do not raise errors in the test report as parsing exceptions are already reported in assertion gmlas.d.11 :)
		 }	
		) 
		return if (not($touches)) then $candidate else ()
	  } catch * {
		let $dummy := local:log('Processing feature ' || string($candidate/@gml:id) || '. Exception: ' || $err:code || ' - ' || $err:description || ' [' || $err:module || ', line: ' || $err:line-number || ', column: ' || $err:column-number || ']')
		return () (: silently record the exception in the log, but do not raise errors in the test report as parsing exceptions are already reported in assertion gmlas.d.11 :)
	  }		
	)[position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.freeNode', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id) }))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.freeNode"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID4e0e2598-8103-4b18-a98a-673910214c91">
									<label>tn-as.c.2: Intersections only at crossings</label>
									<description><![CDATA[Verify that transport link connections are consistent with the real world, i.e. check that TransportLink features ends are connected wherever a connection exists between the real world phenomena they represent. No connections must be created at connecting network elements when it is not possible for water to pass from one element to another.<br/><br/>
Relevant requirements:
<ul>
<li>IIR Requirement Annex II Section 7.9.3 (1): Theme-specific Requirements – Geometry representation. Transport link ends shall be connected wherever an intersection exists between the real world phenomena they represent. No connections shall be created at crossing network elements when it is not possible to pass from one element to another.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/geometry" target="_blank">Abstract Test Case 'Geometry'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.7</a>]]></description>
									<parent ref="EIDa0ccae1d-2917-417e-b29c-6553854c5d78"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
 				<TestCase id="EIDa85e3c90-3e4f-4c7a-a6a2-8e38671d6556">
					<label>Network connectivity</label>
					<description>Verify the connectivity of the transport network.</description>
					<parent ref="EIDe11a7179-a5d8-4556-a94a-90fcfb7e6ffd"/>
					<testSteps>
						<TestStep id="EID39e3afa5-cccc-4856-8329-4e9d57ee41b2">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EIDa85e3c90-3e4f-4c7a-a6a2-8e38671d6556"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID11d618c8-56b1-4405-92ec-99b3c89bb36a">
									<label>tn-as.d.1: Connectivity at crossings</label>
									<description><![CDATA[Verify that all transport nodes are at the start or end of a transport link. For each TransportLink with a startNode or endNode property, verify that the distance between the start or end of the centrelineGeometry and the geometry of the start and end TransportNode is smaller than the connectivityTolerance.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Annex II Section 8.7.7 (1): Theme-specific Requirements – Ensuring Network Connectivity. Wherever a connection exists in a transport network, all connected link ends and the optional node that take part in this connection have to be positioned at a distance of less than the connectivity tolerance from each other.</li>
</ul>
<b>Known limitations:</b>
<ul>
<li>To use a connectivityTolerance parameter would require that all geometries are first converted to a meter-based CRS, eg ETRS89 LAEA or LCC, which is currently not supported by the geometry library. In addition, it is unclear how to handle geometries outside of continental Europe. Therefore, the assertion has been classified as "manual" in this Executable Test Suite.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/network-connectivity" target="_blank">Abstract Test Case 'Network connectivity'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.10</a>]]></description>
									<parent ref="EID39e3afa5-cccc-4856-8329-4e9d57ee41b2"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
								<TestAssertion id="EID57a2596d-0730-409a-8ef1-7478a8ecda94">
									<label>tn-as.d.2: Unconnected nodes</label>
									<description><![CDATA[For each WatercourseLink verify that the only HydroNodes in the distance around the start or end of the centrelineGeometry are the nodes associated via the startNode and endNode properties.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Annex II Section 8.7.7 (2): Theme-specific Requirements – Ensuring Network Connectivity. Link ends and nodes that are not connected shall always be separated by a distance that is greater than the connectivity tolerance.</li>
</ul>
<b>Known limitations:</b>
<ul>
<li>To use a connectivityTolerance parameter would require that all geometries are first converted to a meter-based CRS, eg ETRS89 LAEA or LCC, which is currently not supported by the geometry library. In addition, it is unclear how to handle geometries outside of continental Europe. Therefore, the assertion has been classified as "manual" in this Executable Test Suite.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/network-connectivity" target="_blank">Abstract Test Case 'Network connectivity'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.10</a>]]></description>
									<parent ref="EID39e3afa5-cccc-4856-8329-4e9d57ee41b2"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
								<TestAssertion id="EID6b530474-d5fb-45b5-b4cc-5dbeb5a89670">
									<label>tn-as.d.3: Connectivity tolerance</label>
									<description><![CDATA[Verify that the connectivity tolerance provided for the test is consistent with the metadata of the data set, i.e. check that the connectivity tolerance provided for the test is the same included in the metadata of the data set in the properties 'specification' and 'explanation' of the DQ_ConformanceResult element in a DQ_TopologicalConsistency element.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Annex II Section 8.7.7 (1): Theme-specific Requirements – Ensuring Network Connectivity. Wherever a connection exists in a hydrographic network, all connected link ends and the optional node that take part in this connection have to be positioned at a distance of less than the connectivity tolerance from each other.</li>
<li>IR Requirement Annex II Section 8.7.7 (2): Theme-specific Requirements – Ensuring Network Connectivity. Link ends and nodes that are not connected shall always be separated by a distance that is greater than the connectivity tolerance.</li>
</ul>
<b>Known limitations:</b>
<ul>
<li>To use a connectivityTolerance parameter would require that all geometries are first converted to a meter-based CRS, eg ETRS89 LAEA or LCC, which is currently not supported by the geometry library. In addition, it is unclear how to handle geometries outside of continental Europe. Therefore, the assertion has been classified as "manual" in this Executable Test Suite.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/network-connectivity" target="_blank">Abstract Test Case 'Network connectivity'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.10</a>]]></description>
									<parent ref="EID39e3afa5-cccc-4856-8329-4e9d57ee41b2"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase> 
 				<TestCase id="EIDf271ab9f-796b-4644-b27f-cf5dbb919cdc">
					<label>Object References</label>
					<description>Verify the consistent use of references to other features.</description>
					<parent ref="EIDe11a7179-a5d8-4556-a94a-90fcfb7e6ffd"/>
					<testSteps>
						<TestStep id="EID5330a6e0-8ddc-483e-86e2-1460b4c1ecc0">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EIDf271ab9f-796b-4644-b27f-cf5dbb919cdc"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions> 
  								<TestAssertion id="EID8353f727-60ce-4893-9a33-5b93013ff6d8">
									<label>tn-as.e.1: Linear references</label>
									<description><![CDATA[For each NetworkProperty feature that links to a TransportLink or a TransportLinkSequence, verify that any linear references are consistent with the length of the geometry of the network feature.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Annex II Section 7.9.2 (1): Theme-specific Requirements – Modelling of object references. When linear referencing is used in Transport Networks data, the position of referenced properties on links and link sequences shall be expressed as distances measured along the supplied geometry of the underlying link object(s).</li>
</ul>
<b>Known limitations:</b>
<ul>
<li>The length is not provided as an attribute of the Link features. I.e., the length needs to be derived from the centreline geometries. This would require that the geometries are first converted to a meter-based CRS, eg ETRS89 LAEA or LCC, which is currently not supported by the geometry library. In addition, it is unclear how to handle geometries outside of continental Europe. Therefore, the assertion has been classified as "manual" in this Executable Test Suite.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/object-references" target="_blank">Abstract Test Case 'Object References'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.8</a>]]></description>
									<parent ref="EID5330a6e0-8ddc-483e-86e2-1460b4c1ecc0"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
									<translationTemplates>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
 								<TestAssertion id="EID4412563c-a691-4479-bb70-a465d140ec64">
									<label>tn-as.e.2: Inter-modal connections</label>
									<description><![CDATA[For each NetworkConnection with as value 'intermodal' for the type attribute, verify that the two elements referenced in the element association role belong to different networks, i.e. they reference different networks in their inNetwork association role.<br/><br/>
Relevant requirements:
<ul>
<li>IIR Requirement Annex II Section 7.9.2 (2): Theme-specific Requirements – Modelling of object references. An inter-modal connection shall always reference two elements which belong to different networks.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/master/tn-as/object-references" target="_blank">Abstract Test Case 'Object References'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_TN_v3.2.pdf">INSPIRE Data Specification on Transport Networks, A.1.8</a>]]></description>
									<parent ref="EID5330a6e0-8ddc-483e-86e2-1460b4c1ecc0"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $interModalConnections := $features[self::*:NetworkConnection[(net3:type/text() eq "intermodal") or (net:type/@xlink:href eq 'http://inspire.ec.europa.eu/codelist/ConnectionTypeValue/intermodal')]]
return
if (count($interModalConnections) = 0)
then 'PASSED'
else
	let $refcount := count($interModalConnections/*:element[not(@xsi:nil='true')]/@xlink:href)
	let $dummy := if ($refcount>100) then local:log("Checking " || $refcount || " feature references - this may take awhile...") else ()

	let $featuresWithErrors :=
	(for $interModalConnection in $interModalConnections
		let $element1 := local:return-reference($interModalConnection/*:element[1][not(@xsi:nil='true')]/@xlink:href)
		let $element2 := local:return-reference($interModalConnection/*:element[2][not(@xsi:nil='true')]/@xlink:href)
			return
			if (not($element1 or $element2)) then () (: ignore unresolvable links here, this is handled by the information accessibility tests :)
		    else
		    	if ($element1/*:inNetwork/@xlink:href eq $element2/*:inNetwork/@xlink:href) then
		    		$interModalConnection
		    	else ()
	)[position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.wrongIntermodalConnection', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id)}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.featuresWithErrors"/>
										<translationTemplate ref="TR.wrongIntermodalConnection"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase> 
			</testCases>
		</TestModule>
	</testModules>
</ExecutableTestSuite>
