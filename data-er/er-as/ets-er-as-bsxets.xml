<?xml version="1.0" encoding="utf-8"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EID9b6e3765-3744-40ee-98ec-243ac978915f" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 https://resources.etf-validator.net/schema/v2/val/ignoreRef.xsd">
	<itemHash>bQ==</itemHash>
	<remoteResource>https://github.com/inspire-eu-validation/ets-repository/tree/master/data-er/er-as</remoteResource>
	<localPath>/auto</localPath>
	<label>Conformance class: Application schema, Energy Resources Base</label>
	<description><![CDATA[This test suite examines requirements associated with the application schema.<br/><br/>
Note that since both code-list-valued properties of this application schema may be extended without restrictions, there is no test case for code list values.<br/><br/>
<b>This is a draft version. It has limitations and is expected to contain errors.</b> Please report any issues or problems <a href="https://github.com/INSPIRE-MIF/helpdesk-validator/wiki/Your-feedback" target="_blank">in GitHub</a>.<br/><br/>
Known limitations are documented in the description of the applicable test case or test assertion. There is a general limitation in all assertions that extensions in additional application schemas are only supported, if the unqualified name of the feature type in the extension is the same as the name of the feature type in the INSPIRE application schema.<br/><br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-er/master/er-as" target="_blank">Conformance Class 'Application schema, Energy Resources Base'</a><br/><br/>
Pre-requisite conformance classes:
<ul><li><a href="http://inspire.ec.europa.eu/id/ats/data-er/master/er-gml" target="_blank">Conformance Class 'GML application schemas, Energy Resources'</a></li></ul>]]></description>
	<reference>../../inspire-noggeo-bsxets.xq</reference>
	<version>0.1.0</version>
	<author>Consortium Bilbomatica, Guadaltel y Geograma</author>
	<creationDate>2021-05-24T11:15:00Z</creationDate>
	<lastEditor>Consortium Bilbomatica, Guadaltel y Geograma</lastEditor>
	<lastUpdateDate>2021-05-24T11:15:00Z</lastUpdateDate>
	<tags>
		<tag ref="EID54d5f755-e20c-40a7-ab72-5600c71dd049"/>
	</tags>
	<testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
	<translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
	<ParameterList name="ETF Standard Parameters for XML test objects">
		<parameter name="files_to_test" required="true">
			<defaultValue>.*</defaultValue>
			<description ref="TR.filesToTest"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
		<parameter name="tests_to_execute" required="false">
			<defaultValue>.*</defaultValue>
			<description ref="TR.testsToExecute"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
	</ParameterList>
	<supportedTestObjectTypes>
		<testObjectType ref="EIDe1d4a306-7a78-4a3b-ae2d-cf5f0810853e"/>
	</supportedTestObjectTypes>
	<dependencies>
		<executableTestSuite ref="EIDe009440c-e545-4227-9967-aff1b26f8c81"/>
	</dependencies>
	<testModules>
		<TestModule id="EID2935f00d-2ff0-443b-8622-90622119fb98">
			<label>IGNORE</label>
			<description>IGNORE</description>
			<parent ref="EID9b6e3765-3744-40ee-98ec-243ac978915f"/>
			<testCases>
				<TestCase id="EID898c524f-e062-4669-bf38-89e5c7414e50">
					<label>Code list values</label>
					<description>Verify whether all attributes whose value type is a code list take the values set out therein.</description>
					<parent ref="EID2935f00d-2ff0-443b-8622-90622119fb98"/>
					<testSteps>
						<TestStep id="EID6e19663d-57f0-4a32-8982-d9c3abfc0024">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID898c524f-e062-4669-bf38-89e5c7414e50"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID83ad4ac1-de87-4d44-8b73-35bce4401ed9">
									<label>er-as.a.1: typeOfResource (RenewableAndWasteResource feature type)</label>
									<description><![CDATA[Check that all the <a href="http://inspire.ec.europa.eu/id/ats/data-er/master/er-as/code-list-values#typeOfResource1">typeOfResource</a> elements has a xlink:href attribute pointing to a <a href="http://inspire.ec.europa.eu/id/ats/data-er/master/er-as/code-list-values#validValue1">valid value</a>. If the check fails report disallowedCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-er/master/er-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_ER_v3.0.pdf">INSPIRE Data Specification on EnergyResources, A.1.3</a>]]></description>
									<parent ref="EID6e19663d-57f0-4a32-8982-d9c3abfc0024"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/RenewableAndWasteValue'
let $codelisturl := 'http://inspire.ec.europa.eu/codelist/RenewableAndWasteValue/RenewableAndWasteValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $property_string := 'typeOfResource (RenewableAndWasteResource feature type)'
let $features_selected := $features[self::er-v:RenewableAndWasteResource]
let $messages :=
	for $feature in $features_selected
		let $envDom := $feature/er-v:typeOfResource
		return
			if (not(exists($envDom))) then
				local:addMessage('TR.missingElement',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string})
			else if (count($envDom) > 1) then 
				local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': $property_string,'multiplicity': 1, 'count':count($envDom)}) 
			else if(exists($envDom) and not($envDom/@xlink:href)) then
				local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'attribute': '@xlink:href', 'property': $property_string}) 
			else if(exists($envDom) and not($envDom/@xlink:href = $valid_href)) then
				local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string, 'value': string($envDom/@xlink:href), 'codelist': $codelist}) 
			else ()


return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID1dbdd865-c0e7-48be-9801-b0a4d31442b7">
									<label>er-as.a.2: typeOfResource (FossilFuelResource feature type)</label>
									<description><![CDATA[Check that all the <a href="http://inspire.ec.europa.eu/id/ats/data-er/master/er-as/code-list-values#typeOfResource2">typeOfResource</a> elements has a xlink:href attribute pointing to a <a href="http://inspire.ec.europa.eu/id/ats/data-er/master/er-as/code-list-values#validValue2">valid value</a>. If the check fails report disallowedCodeListValue.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): For the exchange and classification of spatial objects from data sets meeting the conditions laid
down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and
associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the
themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): The enumerations and code lists used in attributes or association roles of spatial object types or data
types shall comply with the definitions and include the values set out in Annex II. The enumeration and
code list values are uniquely identified by language-neutral mnemonic codes for computers. The values
may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-er/master/er-as/code-list-values" target="_blank">Abstract Test Case 'Code list values'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_ER_v3.0.pdf">INSPIRE Data Specification on EnergyResources, A.1.3</a>]]></description>
									<parent ref="EID6e19663d-57f0-4a32-8982-d9c3abfc0024"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $codelist := 'http://inspire.ec.europa.eu/codelist/FossilFuelValue'
let $codelisturl := 'http://inspire.ec.europa.eu/codelist/FossilFuelValue/FossilFuelValue.en.xml'
let $valid_href := fn:doc($codelisturl)/*:codelist/*:containeditems/*:value/@id
let $property_string := 'typeOfResource (FossilFuelResource feature type)'
let $features_selected := $features[self::er-v:FossilFuelResource]
let $messages :=
	for $feature in $features_selected/er-v:resource/er-v:FossilFuelResourceType
		let $envDom := $feature/er-v:typeOfResource
		return
			if (not(exists($envDom))) then
				local:addMessage('TR.missingElement',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string})
			else if (count($envDom) > 1) then 
				local:addMessage('TR.wrongMultiplicity',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'element': $property_string,'multiplicity': 1, 'count':count($envDom)}) 
			else if(exists($envDom) and not($envDom/@xlink:href)) then
				local:addMessage('TR.missingAttribute',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'attribute': '@xlink:href', 'property': $property_string}) 
			else if(exists($envDom) and not($envDom/@xlink:href = $valid_href)) then
				local:addMessage('TR.disallowedCodeListValue',  map {'filename': local:filename($feature), 'featureType':local-name($feature), 'gmlid': string($feature/@*:id), 'property': $property_string, 'value': string($envDom/@xlink:href), 'codelist': $codelist}) 
			else ()


return
(if ($messages) then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.missingElement"/>
										<translationTemplate ref="TR.wrongMultiplicity"/>
										<translationTemplate ref="TR.missingAttribute"/>
										<translationTemplate ref="TR.disallowedCodeListValue"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EID339de31a-7bc5-4e69-88b8-d9142ca06bb7">
					<label>Constraints</label>
					<description>Verify that the features provided in the dataset adhere to the constraints specified in the INSPIRE application schema.</description>
					<parent ref="EID2935f00d-2ff0-443b-8622-90622119fb98"/>
					<testSteps>
						<TestStep id="EID632ee4b0-60f4-4649-83c9-ee51fcf567d9">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID339de31a-7bc5-4e69-88b8-d9142ca06bb7"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EIDace437b7-d387-43b2-b031-2438e4d86fb4">
									<label>er-as.b.1: lowerBound</label>
									<description><![CDATA[Check that values of <a href='http://inspire.ec.europa.eu/id/ats/data-er/master/er-as/constraints#lowerBound'>lowerBound</a> element of the VerticalExtentRangeType data type are expressed in meters.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-er/master/er-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_ER_v3.0.pdf">INSPIRE Data Specification on Energy Resources, A.1.6</a>]]></description>
									<parent ref="EID632ee4b0-60f4-4649-83c9-ee51fcf567d9"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features_selectedv := $features[self::er-v:FossilFuelResource | self::er-v:RenewableAndWasteResource]
let $features_selectedc := $features[self::er-c:RenewableAndWastePotentialCoverage]
let $property_string := 'lowerBound'

let $messagesv :=
	for $feature in $features_selectedv/er-v:verticalExtent/er-b:VerticalExtentType/er-b:verticalExtent/er-b:VerticalExtentValue/er-b:range/er-b:VerticalExtentRangeType
		let $envDom := $feature/er-b:lowerBound
		return
			if (exists($envDom) and not($envDom/@uom = "m")) then
				local:addMessage('TR.constraintViolation',  map {'filename': local:filename($feature/../../../../../..), 'featureType':local-name($feature/../../../../../..), 'gmlid': string($feature/../../../../../../@*:id), 'property': $property_string, 'constraint': 'The values of lowerBound element of the VerticalExtentRangeType data type are expressed in meters', 'additionalInfo': ''})
			else ()
let $messagesc :=
	for $feature in $features_selectedc/er-c:verticalExtent/er-b:VerticalExtentType/er-b:verticalExtent/er-b:VerticalExtentValue/er-b:range/er-b:VerticalExtentRangeType
		let $envDom := $feature/er-b:lowerBound
		return
			if (exists($envDom) and not($envDom/@uom = "m")) then
				local:addMessage('TR.constraintViolation',  map {'filename': local:filename($feature/../../../../../..), 'featureType':local-name($feature/../../../../../..), 'gmlid': string($feature/../../../../../../@*:id), 'property': $property_string, 'constraint': 'The values of lowerBound element of the VerticalExtentRangeType data type are expressed in meters', 'additionalInfo': ''})
			else ()
let $messages := ($messagesv, $messagesc)


return
(if ($messages)  then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID411a27e6-6f5a-4265-8dba-cd2fa0174447">
									<label>er-as.b.2: upperBound</label>
									<description><![CDATA[Check that values of <a href='http://inspire.ec.europa.eu/id/ats/data-er/master/er-as/constraints#upperBound'>upperBound</a> element of the VerticalExtentRangeType data type are expressed in meters.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-er/master/er-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_ER_v3.0.pdf">INSPIRE Data Specification on Energy Resources, A.1.6</a>]]></description>
									<parent ref="EID632ee4b0-60f4-4649-83c9-ee51fcf567d9"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features_selectedv := $features[self::er-v:FossilFuelResource | self::er-v:RenewableAndWasteResource]
let $features_selectedc := $features[self::er-c:RenewableAndWastePotentialCoverage]
let $property_string := 'upperBound'

let $messagesv :=
	for $feature in $features_selectedv/er-v:verticalExtent/er-b:VerticalExtentType/er-b:verticalExtent/er-b:VerticalExtentValue/er-b:range/er-b:VerticalExtentRangeType
		let $envDom := $feature/er-b:upperBound
		return
			if (exists($envDom) and not($envDom/@uom = "m")) then
				local:addMessage('TR.constraintViolation',  map {'filename': local:filename($feature/../../../../../..), 'featureType':local-name($feature/../../../../../..), 'gmlid': string($feature/../../../../../../@*:id), 'property': $property_string, 'constraint': 'The values of upperBound element of the VerticalExtentRangeType data type are expressed in meters', 'additionalInfo': ''})
			else ()
let $messagesc :=
	for $feature in $features_selectedc/er-c:verticalExtent/er-b:VerticalExtentType/er-b:verticalExtent/er-b:VerticalExtentValue/er-b:range/er-b:VerticalExtentRangeType
		let $envDom := $feature/er-b:upperBound
		return
			if (exists($envDom) and not($envDom/@uom = "m")) then
				local:addMessage('TR.constraintViolation',  map {'filename': local:filename($feature/../../../../../..), 'featureType':local-name($feature/../../../../../..), 'gmlid': string($feature/../../../../../../@*:id), 'property': $property_string, 'constraint': 'The values of upperBound element of the VerticalExtentRangeType data type are expressed in meters', 'additionalInfo': ''})
			else ()
let $messages := ($messagesv, $messagesc)


return
(if ($messages)  then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDf9143848-65e2-41dc-bfbd-a375611ec2e0">
									<label>er-as.b.3: scalar</label>
									<description><![CDATA[Check that values of <a href='http://inspire.ec.europa.eu/id/ats/data-er/master/er-as/constraints#scalar'>scalar</a> of the VerticalExtentValue union type are expressed in meters.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-er/master/er-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_ER_v3.0.pdf">INSPIRE Data Specification on Energy Resources, A.1.6</a>]]></description>
									<parent ref="EID632ee4b0-60f4-4649-83c9-ee51fcf567d9"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $features_selectedv := $features[self::er-v:FossilFuelResource | self::er-v:RenewableAndWasteResource]
let $features_selectedc := $features[self::er-c:RenewableAndWastePotentialCoverage]
let $property_string := 'scalar'

let $messagesv :=
	for $feature in $features_selectedv/er-v:verticalExtent/er-b:VerticalExtentType/er-b:verticalExtent/er-b:VerticalExtentValue
		let $envDom := $feature/er-b:scalar
		return
			if (exists($envDom) and not($envDom/@uom = "m")) then
				local:addMessage('TR.constraintViolation',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'property': $property_string, 'constraint': 'The values of scalar of the VerticalExtentValue union type are expressed in meters', 'additionalInfo': ''})
			else ()
let $messagesc :=
	for $feature in $features_selectedc/er-c:verticalExtent/er-b:VerticalExtentType/er-b:verticalExtent/er-b:VerticalExtentValue
		let $envDom := $feature/er-b:scalar
		return
			if (exists($envDom) and not($envDom/@uom = "m")) then
				local:addMessage('TR.constraintViolation',  map {'filename': local:filename($feature/../../../..), 'featureType':local-name($feature/../../../..), 'gmlid': string($feature/../../../../@*:id), 'property': $property_string, 'constraint': 'The values of scalar of the VerticalExtentValue union type are expressed in meters', 'additionalInfo': ''})
			else ()
let $messages := ($messagesv, $messagesc)


return
(if ($messages)  then 'FAILED' else 'PASSED',
local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
$messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
				<TestCase id="EID9226146b-2a80-4f06-999b-cc3d41b75d53">
					<label>specific requirements</label>
					<description>Verify that, where the geometry of the spatial object is derived from another spatial object, the geometries of the two objects are consistent.</description>
					<parent ref="EID2935f00d-2ff0-443b-8622-90622119fb98"/>
					<testSteps>
						<TestStep id="EIDc812b2f3-c048-4076-bef6-f8f79db0b428">
							<label>IGNORE</label>
							<description>IGNORE</description>
							<parent ref="EID9226146b-2a80-4f06-999b-cc3d41b75d53"/>
							<statementForExecution>not applicable</statementForExecution>
							<testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EID7967a57c-0fda-41da-88b0-f71888549d03">
									<label>er-as.c.1: geometries</label>
									<description><![CDATA[Check manually that if the geometry of the spatial object is derived from another spatial object, the geometries of the two objects are consistent.<br/><br/>
Relevant requirements:
<ul><li>IR Requirement Article 12 (1): The value domain of spatial properties defined in this Regulation shall be restricted to the Simple Feature spatial schema as defined in Herring, John R. (ed.), OpenGIS® Implementation Standard for Geographic information – Simple feature access – Part 1: Common architecture, version 1.2.1, Open Geospatial Consortium, 2011, unless specified otherwise for a specific spatial data theme or type.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-er/master/er-as/specific-req" target="_blank">Abstract Test Case 'Sea Regions theme-specific requirements'</a>, <a href="http://inspire.ec.europa.eu/documents/Data_Specifications/INSPIRE_DataSpecification_ER_v3.0.pdf">INSPIRE Data Specification on Energy Resources, A.1.6</a>]]></description>
									<parent ref="EIDc812b2f3-c048-4076-bef6-f8f79db0b428"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>NOT_APPLICABLE</expression>
									<testItemType ref="EIDb48eeaa3-6a74-414a-879c-1dc708017e11"/>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
			</testCases>
		</TestModule>
	</testModules>
</ExecutableTestSuite>
